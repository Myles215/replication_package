"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","1104","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.ShutdownOnFatalExceptionTest.shouldShutdownGracefulEvenWithFatalExceptionHandler [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","2","com.lmax.disruptor.RingBuffer.getCursor()","199","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","3","com.lmax.disruptor.MultiProducerSequencer.isAvailable(long)","199","com.lmax.disruptor.WorkerPoolTest.shouldProcessOnlyOnceItHasBeenPublished [],com.lmax.disruptor.WorkerPoolTest.shouldProcessEachMessageByOnlyOneWorker []"
"disruptor","4","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","156","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.ShutdownOnFatalExceptionTest.shouldShutdownGracefulEvenWithFatalExceptionHandler [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced []"
"disruptor","5","com.lmax.disruptor.BatchEventProcessor.processEvents()","31","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","6","com.lmax.disruptor.MultiProducerSequencer.getHighestPublishedSequence(long,long)","13","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","7","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","9","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","8","com.lmax.disruptor.MultiProducerSequencer.next(int)","9","com.lmax.disruptor.RingBufferTest.shouldHandleResetToAndNotWrapUnnecessarilySingleProducer [],com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsTwoArgWhenBatchSizeIs0 [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsTwoArgWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldPublishEventsTwoArgWithBatchSizeOfOne [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsVarArgWhenBatchExtendsPastEndOfArray []"
"disruptor","9","com.lmax.disruptor.BlockingWaitStrategy.signalAllWhenBlocking()","9","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsVarArgWhenBatchSizeIsNegative [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsWhenBatchExtendsPastEndOfArray [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsTwoArgWhenBatchExtendsPastEndOfArray [],com.lmax.disruptor.RingBufferTest.shouldClaimAndGetMultipleMessages [],com.lmax.disruptor.RingBufferTest.shouldPublishEventsVarArg [],com.lmax.disruptor.SequenceGroupTest.shouldRemoveSequenceFromGroup [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsThreeArgWhenBatchSizeIs0 []"
"disruptor","10","com.lmax.disruptor.WorkProcessor.run()","8","com.lmax.disruptor.WorkerPoolTest.shouldProcessOnlyOnceItHasBeenPublished [],com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","11","com.lmax.disruptor.BusySpinWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","6","com.lmax.disruptor.BusySpinWaitStrategyTest.shouldWaitForValue [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","12","com.lmax.disruptor.FatalExceptionHandler.handleEventException(Throwable,long,Object)","5","com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.FatalExceptionHandlerTest.shouldHandleFatalException []"
"disruptor","13","com.lmax.disruptor.Sequence.compareAndSet(long,long)","3","com.lmax.disruptor.RingBufferTest.shouldPublishEventsTwoArg [],com.lmax.disruptor.RingBufferTest.shouldPreventWrapping [],com.lmax.disruptor.RingBufferTest.shouldThrowExceptionIfBufferIsFull []"
"disruptor","14","com.lmax.disruptor.MultiProducerSequencer.calculateIndex(long)","3","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsThreeArgWhenBatchSizeIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsOneArgWhenBatchExtendsPastEndOfArray [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsThreeArgWhenBatchSizeIs0 []"
"disruptor","15","com.lmax.disruptor.PhasedBackoffWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","3","com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithTwoMillisecondDelay [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleImmediateSequenceChange [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithTenMillisecondDelay []"
"disruptor","16","com.lmax.disruptor.dsl.BasicExecutor.execute(Runnable)","3","com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing []"
"disruptor","17","com.lmax.disruptor.Sequence.addAndGet(long)","2","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsITwoArgIfBatchSizeIsBiggerThanRingBuffer [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsWhenBatchSizeIs0 []"
"disruptor","18","com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long)","2","com.lmax.disruptor.WorkerPoolTest.shouldProcessEachMessageByOnlyOneWorker [],com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","19","com.lmax.disruptor.BatchEventProcessor.notifyStart()","2","com.lmax.disruptor.BatchEventProcessorTest.shouldCallMethodsInLifecycleOrderForBatch [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","20","com.lmax.disruptor.MultiProducerSequencer.calculateAvailabilityFlag(long)","2","com.lmax.disruptor.RingBufferTest.shouldPublishEventsTwoArgWithinBatch [],com.lmax.disruptor.RingBufferTest.shouldWrap []"
"disruptor","21","com.lmax.disruptor.RingBuffer.translateAndPublish(EventTranslatorTwoArg<E,A,B>,long,A,B)","2","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsVarArgWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsVarArgWhenBatchSizeIs0 []"
"disruptor","22","com.lmax.disruptor.dsl.ConsumerRepository.add(WorkerPool<T>,SequenceBarrier)","2","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor []"
"disruptor","23","com.lmax.disruptor.BatchEventProcessor.notifyShutdown()","2","com.lmax.disruptor.BatchEventProcessorTest.shouldCallMethodsInLifecycleOrderForBatch []"
"disruptor","24","com.lmax.disruptor.util.ThreadHints.onSpinWait()","2","com.lmax.disruptor.BusySpinWaitStrategyTest.shouldWaitForValue [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately []"
"disruptor","25","com.lmax.disruptor.RingBuffer.publish(long)","2","com.lmax.disruptor.RingBufferTest.shouldPublishEventOneArg [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","26","com.lmax.disruptor.BatchEventProcessor.getSequence()","2","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors []"
"disruptor","27","com.lmax.disruptor.util.Util.getMinimumSequence(Sequence[],long)","2","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.RingBufferTest.shouldPublishEventsThreeArg []"
"disruptor","28","com.lmax.disruptor.dsl.Disruptor.handleExceptionsFor(EventHandler<T>)","2","com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor []"
"disruptor","29","com.lmax.disruptor.MultiProducerSequencer.setAvailableBufferValue(int,int)","2","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsVarArgWhenBatchExtendsPastEndOfArray []"
"disruptor","30","com.lmax.disruptor.RingBuffer.createSingleProducer(EventFactory<E>,int,WaitStrategy)","2","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsThreeArgIfBatchIsLargerThanRingBuffer [],com.lmax.disruptor.RingBufferTest.shouldPublishEventsVarArgWithinBatch []"
"disruptor","31","com.lmax.disruptor.SleepingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","32","com.lmax.disruptor.util.Util.log2(int)","1","com.lmax.disruptor.RingBufferTest.shouldPublishEventsTwoArgWithBatchSizeOfOne []"
"disruptor","33","com.lmax.disruptor.IgnoreExceptionHandler.handleEventException(Throwable,long,Object)","1","com.lmax.disruptor.IgnoreExceptionHandlerTest.shouldHandleAndIgnoreException []"
"disruptor","34","com.lmax.disruptor.RingBuffer.publish(long,long)","1","com.lmax.disruptor.RingBufferWithAssertingStubTest.shouldDelegateTryNextAndPublish []"
"disruptor","35","com.lmax.disruptor.MultiProducerSequencer.publish(long)","1","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsThreeArgIfBatchIsLargerThanRingBuffer []"
"disruptor","36","com.lmax.disruptor.dsl.Disruptor.start()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable []"
"disruptor","37","com.lmax.disruptor.RingBuffer.get(long)","1","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","38","com.lmax.disruptor.SequenceGroups.addSequences(T,AtomicReferenceFieldUpdater<T,Sequence[]>,Cursored,Sequence...)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable []"
"disruptor","39","com.lmax.disruptor.RingBuffer.next()","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","40","com.lmax.disruptor.dsl.ConsumerRepository.add(EventProcessor,EventHandler<?superT>,SequenceBarrier)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors []"
"disruptor","41","com.lmax.disruptor.BlockingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","1","com.lmax.disruptor.dsl.DisruptorTest.should []"
"disruptor","42","com.lmax.disruptor.MultiProducerSequencer.setAvailable(long)","1","com.lmax.disruptor.RingBufferTest.shouldPublishEvent []"
"disruptor","43","com.lmax.disruptor.MultiProducerSequencer.next()","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","44","com.lmax.disruptor.RingBuffer.createMultiProducer(EventFactory<E>,int,WaitStrategy)","1","com.lmax.disruptor.RingBufferTest.shouldPublishEventsTwoArgWithinBatch []"
"disruptor","45","com.lmax.disruptor.dsl.Disruptor.createEventProcessors(Sequence[],EventHandler<?superT>[])","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable []"
"disruptor","46","com.lmax.disruptor.AbstractSequencer.getCursor()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor []"
