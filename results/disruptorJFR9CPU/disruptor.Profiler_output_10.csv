"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","1111","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.ShutdownOnFatalExceptionTest.shouldShutdownGracefulEvenWithFatalExceptionHandler [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","2","com.lmax.disruptor.MultiProducerSequencer.isAvailable(long)","198","com.lmax.disruptor.WorkerPoolTest.shouldProcessOnlyOnceItHasBeenPublished [],com.lmax.disruptor.WorkerPoolTest.shouldProcessEachMessageByOnlyOneWorker [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","3","com.lmax.disruptor.RingBuffer.getCursor()","180","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.ShutdownOnFatalExceptionTest.shouldShutdownGracefulEvenWithFatalExceptionHandler [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","4","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","166","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","5","com.lmax.disruptor.BatchEventProcessor.processEvents()","31","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","6","com.lmax.disruptor.MultiProducerSequencer.getHighestPublishedSequence(long,long)","11","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","7","com.lmax.disruptor.MultiProducerSequencer.next(int)","10","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsOneArgIfBatchIsLargerThanRingBuffer [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsOneArgWhenBatchExtendsPastEndOfArray [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsVarArgWhenBatchSizeIsNegative [],com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsTwoArgWhenBatchSizeIs0 [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","8","com.lmax.disruptor.WorkProcessor.run()","9","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency []"
"disruptor","9","com.lmax.disruptor.BusySpinWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","7","com.lmax.disruptor.BusySpinWaitStrategyTest.shouldWaitForValue [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","10","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","6","com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents []"
"disruptor","11","com.lmax.disruptor.FatalExceptionHandler.handleEventException(Throwable,long,Object)","5","com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors []"
"disruptor","12","com.lmax.disruptor.dsl.BasicExecutor.execute(Runnable)","5","com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","13","com.lmax.disruptor.MultiProducerSequencer.publish(long)","4","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsOneArgWhenBatchSizeIsNegative [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","14","com.lmax.disruptor.BlockingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","4","com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleImmediateSequenceChange [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithOneMillisecondDelay []"
"disruptor","15","com.lmax.disruptor.BlockingWaitStrategy.signalAllWhenBlocking()","4","com.lmax.disruptor.RingBufferTest.shouldHandleResetToAndNotWrapUnnecessarilyMultiProducer [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsVarArgWhenBatchSizeIs0 [],com.lmax.disruptor.RingBufferTest.shouldAddAndRemoveSequences [],com.lmax.disruptor.RingBufferTest.shouldClaimAndGet []"
"disruptor","16","com.lmax.disruptor.RingBuffer.publishEvent(EventTranslatorTwoArg<E,A,B>,A,B)","3","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsThreeArgWhenBatchSizeIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsThreeArgWhenBatchSizeIs0 []"
"disruptor","17","com.lmax.disruptor.Sequence.compareAndSet(long,long)","3","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsVarArgWhenBatchStartsAtIsNegative []"
"disruptor","18","com.lmax.disruptor.BatchEventProcessor.notifyStart()","3","com.lmax.disruptor.BatchEventProcessorTest.shouldCallMethodsInLifecycleOrderForBatch [],com.lmax.disruptor.BatchEventProcessorTest.reportAccurateBatchSizesAtBatchStartTime [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency []"
"disruptor","19","com.lmax.disruptor.SequenceGroups.addSequences(T,AtomicReferenceFieldUpdater<T,Sequence[]>,Cursored,Sequence...)","3","com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.RingBufferTest.shouldPublishEventsOneArgBatchSizeOfOne [],com.lmax.disruptor.RingBufferTest.shouldPublishEventsThreeArg []"
"disruptor","20","com.lmax.disruptor.RingBuffer.translateAndPublish(EventTranslatorTwoArg<E,A,B>,long,A,B)","3","com.lmax.disruptor.RingBufferTest.shouldPublishEvent [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsOneArgWhenBatchSizeIsNegative [],com.lmax.disruptor.RingBufferTest.shouldClaimAndGetMultipleMessages []"
"disruptor","21","com.lmax.disruptor.util.DaemonThreadFactory.newThread(Runnable)","3","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","22","com.lmax.disruptor.RingBuffer.createSingleProducer(EventFactory<E>,int,WaitStrategy)","3","com.lmax.disruptor.SequenceGroupTest.shouldRemoveSequenceFromGroupWhereItBeenAddedMultipleTimes [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor []"
"disruptor","23","com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long)","2","com.lmax.disruptor.WorkerPoolTest.shouldProcessOnlyOnceItHasBeenPublished [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","24","com.lmax.disruptor.dsl.ConsumerRepository.add(EventProcessor,EventHandler<?superT>,SequenceBarrier)","2","com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","25","com.lmax.disruptor.Sequence.get()","2","com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithTenMillisecondDelay []"
"disruptor","26","com.lmax.disruptor.util.ThreadHints.onSpinWait()","2","com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish []"
"disruptor","27","com.lmax.disruptor.RingBuffer.publish(long)","2","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","28","com.lmax.disruptor.MultiProducerSequencer.setAvailableBufferValue(int,int)","2","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsVarArgWhenBatchExtendsPastEndOfArray [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","29","com.lmax.disruptor.BatchEventProcessor.run()","2","com.lmax.disruptor.BatchEventProcessorTest.reportAccurateBatchSizesAtBatchStartTime [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents []"
"disruptor","30","com.lmax.disruptor.PhasedBackoffWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","2","com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithTwoMillisecondDelay [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleImmediateSequenceChange []"
"disruptor","31","com.lmax.disruptor.BatchEventProcessor.isRunning()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately []"
"disruptor","32","com.lmax.disruptor.dsl.ConsumerRepository.add(WorkerPool<T>,SequenceBarrier)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors []"
"disruptor","33","com.lmax.disruptor.RingBuffer.createMultiProducer(EventFactory<E>,int,WaitStrategy)","1","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsThreeArgWhenBatchSizeIsNegative []"
"disruptor","34","com.lmax.disruptor.AbstractSequencer.newBarrier(Sequence...)","1","com.lmax.disruptor.RingBufferTest.shouldPublishEventsThreeArgWithinBatch []"
"disruptor","35","com.lmax.disruptor.RingBuffer.createMultiProducer(EventFactory<E>,int)","1","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsOneArgWhenBatchExtendsPastEndOfArray []"
"disruptor","36","com.lmax.disruptor.MultiProducerSequencer.calculateIndex(long)","1","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsITwoArgIfBatchSizeIsBiggerThanRingBuffer []"
"disruptor","37","com.lmax.disruptor.AbstractSequencer.addGatingSequences(Sequence...)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally []"
"disruptor","38","com.lmax.disruptor.Sequence.set(long)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors []"
"disruptor","39","com.lmax.disruptor.AbstractSequencer.getCursor()","1","com.lmax.disruptor.dsl.DisruptorTest.should []"
"disruptor","40","com.lmax.disruptor.SingleProducerSequencer.next(int)","1","com.lmax.disruptor.RingBufferTest.shouldHandleResetToAndNotWrapUnnecessarilySingleProducer []"
