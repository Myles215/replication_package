"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","1025","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.ShutdownOnFatalExceptionTest.shouldShutdownGracefulEvenWithFatalExceptionHandler [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","2","com.lmax.disruptor.RingBuffer.getCursor()","203","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","3","com.lmax.disruptor.MultiProducerSequencer.isAvailable(long)","197","com.lmax.disruptor.WorkerPoolTest.shouldProcessOnlyOnceItHasBeenPublished [],com.lmax.disruptor.WorkerPoolTest.shouldProcessEachMessageByOnlyOneWorker []"
"disruptor","4","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","169","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","5","com.lmax.disruptor.BatchEventProcessor.processEvents()","25","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","6","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","18","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing []"
"disruptor","7","com.lmax.disruptor.WorkProcessor.run()","16","com.lmax.disruptor.WorkerPoolTest.shouldProcessOnlyOnceItHasBeenPublished [],com.lmax.disruptor.WorkerPoolTest.shouldProcessEachMessageByOnlyOneWorker [],com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","8","com.lmax.disruptor.MultiProducerSequencer.getHighestPublishedSequence(long,long)","14","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","9","com.lmax.disruptor.MultiProducerSequencer.next(int)","12","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.RingBufferTest.shouldPublishEventsVarArgWithinBatch [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsVarArgWhenBatchExtendsPastEndOfArray []"
"disruptor","10","com.lmax.disruptor.BlockingWaitStrategy.signalAllWhenBlocking()","10","com.lmax.disruptor.RingBufferTest.shouldPublishEventOneArg [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsThreeArgWhenBatchSizeIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsTwoArgWhenBatchSizeIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsThreeArgIfBatchIsLargerThanRingBuffer [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsVarArgWhenBatchSizeIs0 [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsTwoArgWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsThreeArgWhenBatchSizeIs0 [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsThreeArgWhenBatchSizeIs0 []"
"disruptor","11","com.lmax.disruptor.BusySpinWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","6","com.lmax.disruptor.BusySpinWaitStrategyTest.shouldWaitForValue [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","12","com.lmax.disruptor.BlockingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","5","com.lmax.disruptor.WorkerPoolTest.shouldProcessOnlyOnceItHasBeenPublished [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleImmediateSequenceChange [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithOneMillisecondDelay [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithTenMillisecondDelay []"
"disruptor","13","com.lmax.disruptor.RingBuffer.publishEvent(EventTranslatorTwoArg<E,A,B>,A,B)","3","com.lmax.disruptor.RingBufferTest.shouldPublishEventVarArg [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsOneArgWhenBatchSizeIsNegative [],com.lmax.disruptor.RingBufferTest.shouldPublishEventsOneArgBatchSizeOfOne []"
"disruptor","14","com.lmax.disruptor.RingBuffer.translateAndPublish(EventTranslatorTwoArg<E,A,B>,long,A,B)","3","com.lmax.disruptor.RingBufferTest.shouldPublishEventsThreeArgWithinBatch [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsWhenBatchSizeIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsThreeArgWhenBatchStartsAtIsNegative []"
"disruptor","15","com.lmax.disruptor.dsl.ConsumerRepository.add(WorkerPool<T>,SequenceBarrier)","3","com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing []"
"disruptor","16","com.lmax.disruptor.PhasedBackoffWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","3","com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithTwoMillisecondDelay [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithOneMillisecondDelay [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithTenMillisecondDelay []"
"disruptor","17","com.lmax.disruptor.dsl.BasicExecutor.execute(Runnable)","3","com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","18","com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long)","2","com.lmax.disruptor.WorkerPoolTest.shouldProcessOnlyOnceItHasBeenPublished [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","19","com.lmax.disruptor.BatchEventProcessor.notifyStart()","2","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","20","com.lmax.disruptor.RingBuffer.get(long)","2","com.lmax.disruptor.RingBufferTest.shouldPublishEventsTwoArgWithBatchSizeOfOne [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","21","com.lmax.disruptor.dsl.ConsumerRepository.add(EventProcessor,EventHandler<?superT>,SequenceBarrier)","2","com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.ConsumerRepositoryTest.shouldIterateAllEventProcessors []"
"disruptor","22","com.lmax.disruptor.BatchEventProcessor.notifyShutdown()","2","com.lmax.disruptor.BatchEventProcessorTest.shouldAlwaysHalt [],com.lmax.disruptor.BatchEventProcessorTest.reportAccurateBatchSizesAtBatchStartTime []"
"disruptor","23","com.lmax.disruptor.Sequence.get()","2","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors []"
"disruptor","24","com.lmax.disruptor.RingBuffer.publish(long)","2","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsThreeArgWhenBatchExtendsPastEndOfArray [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","25","com.lmax.disruptor.MultiProducerSequencer.setAvailableBufferValue(int,int)","2","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsVarArgWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsOneArgWhenBatchSizeIs0 []"
"disruptor","26","com.lmax.disruptor.Sequence.set(long)","2","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors []"
"disruptor","27","com.lmax.disruptor.dsl.Disruptor.checkOnlyStartedOnce()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType []"
"disruptor","28","com.lmax.disruptor.SleepingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","29","com.lmax.disruptor.FatalExceptionHandler.handleEventException(Throwable,long,Object)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency []"
"disruptor","30","com.lmax.disruptor.IgnoreExceptionHandler.handleEventException(Throwable,long,Object)","1","com.lmax.disruptor.IgnoreExceptionHandlerTest.shouldHandleAndIgnoreException []"
"disruptor","31","com.lmax.disruptor.RingBuffer.publish(long,long)","1","com.lmax.disruptor.RingBufferWithAssertingStubTest.shouldDelegateTryNextAndPublish []"
"disruptor","32","com.lmax.disruptor.MultiProducerSequencer.publish(long)","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","33","com.lmax.disruptor.dsl.Disruptor.start()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency []"
"disruptor","34","com.lmax.disruptor.BatchEventProcessor.getSequence()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated []"
"disruptor","35","com.lmax.disruptor.util.Util.getMinimumSequence(Sequence[],long)","1","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsWhenBatchStartsAtIsNegative []"
"disruptor","36","com.lmax.disruptor.AbstractSequencer.newBarrier(Sequence...)","1","com.lmax.disruptor.RingBufferTest.shouldAddAndRemoveSequences []"
"disruptor","37","com.lmax.disruptor.dsl.EventProcessorInfo.getSequences()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents []"
"disruptor","38","com.lmax.disruptor.MultiProducerSequencer.calculateIndex(long)","1","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsThreeArgWhenBatchSizeIsNegative []"
"disruptor","39","com.lmax.disruptor.util.DaemonThreadFactory.newThread(Runnable)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors []"
"disruptor","40","com.lmax.disruptor.BatchEventProcessor.run()","1","com.lmax.disruptor.BatchEventProcessorTest.shouldAlwaysHalt []"
"disruptor","41","com.lmax.disruptor.SingleProducerSequencer.next(int)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors []"
