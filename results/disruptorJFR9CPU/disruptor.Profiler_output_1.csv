"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","1076","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.ShutdownOnFatalExceptionTest.shouldShutdownGracefulEvenWithFatalExceptionHandler [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","2","com.lmax.disruptor.RingBuffer.getCursor()","210","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.ShutdownOnFatalExceptionTest.shouldShutdownGracefulEvenWithFatalExceptionHandler [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","3","com.lmax.disruptor.MultiProducerSequencer.isAvailable(long)","201","com.lmax.disruptor.WorkerPoolTest.shouldProcessOnlyOnceItHasBeenPublished [],com.lmax.disruptor.WorkerPoolTest.shouldProcessEachMessageByOnlyOneWorker [],com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","4","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","136","com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldOnlyApplyExceptionsHandlersSpecifiedViaHandleExceptionsWithOnNewEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice []"
"disruptor","5","com.lmax.disruptor.BatchEventProcessor.processEvents()","33","com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","6","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","22","com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","7","com.lmax.disruptor.WorkProcessor.run()","22","com.lmax.disruptor.WorkerPoolTest.shouldProcessOnlyOnceItHasBeenPublished [],com.lmax.disruptor.WorkerPoolTest.shouldProcessEachMessageByOnlyOneWorker [],com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","8","com.lmax.disruptor.MultiProducerSequencer.getHighestPublishedSequence(long,long)","13","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","9","com.lmax.disruptor.BusySpinWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","13","com.lmax.disruptor.BusySpinWaitStrategyTest.shouldWaitForValue [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","10","com.lmax.disruptor.BlockingWaitStrategy.signalAllWhenBlocking()","9","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsOneArgWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldPublishEventsTwoArg [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.RingBufferTest.shouldClaimAndGetMultipleMessages [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsTwoArgWhenBatchSizeIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsWhenBatchSizeIs0 [],com.lmax.disruptor.RingBufferTest.shouldPublishEventsOneArg []"
"disruptor","11","com.lmax.disruptor.MultiProducerSequencer.next(int)","7","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsOneArgWhenBatchStartsAtIsNegative [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsThreeArgWhenBatchSizeIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsThreeArgWhenBatchSizeIs0 []"
"disruptor","12","com.lmax.disruptor.RingBuffer.translateAndPublish(EventTranslatorTwoArg<E,A,B>,long,A,B)","6","com.lmax.disruptor.RingBufferTest.shouldPublishEventsOneArgBatchSizeOfOne [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsTwoArgWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsTwoArgWhenBatchExtendsPastEndOfArray [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldPublishEventsOneArg [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsWhenBatchSizeIsNegative []"
"disruptor","13","com.lmax.disruptor.BatchEventProcessor.run()","6","com.lmax.disruptor.BatchEventProcessorTest.shouldCallMethodsInLifecycleOrderForBatch [],com.lmax.disruptor.BatchEventProcessorTest.shouldCallExceptionHandlerOnUncaughtException [],com.lmax.disruptor.BatchEventProcessorTest.reportAccurateBatchSizesAtBatchStartTime []"
"disruptor","14","com.lmax.disruptor.PhasedBackoffWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","5","com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithTwoMillisecondDelay [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleImmediateSequenceChange [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithTenMillisecondDelay []"
"disruptor","15","com.lmax.disruptor.BlockingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","4","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithOneMillisecondDelay [],com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithTenMillisecondDelay []"
"disruptor","16","com.lmax.disruptor.MultiProducerSequencer.next()","3","com.lmax.disruptor.RingBufferTest.shouldPublishEventsThreeArgWithinBatch [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsOneArgWhenBatchExtendsPastEndOfArray [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","17","com.lmax.disruptor.RingBuffer.createMultiProducer(EventFactory<E>,int)","3","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsOneArgWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsIfBatchIsLargerThanRingBuffer [],com.lmax.disruptor.RingBufferTest.shouldPreventPublishersOvertakingEventProcessorWrapPoint []"
"disruptor","18","com.lmax.disruptor.FatalExceptionHandler.handleEventException(Throwable,long,Object)","2","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors []"
"disruptor","19","com.lmax.disruptor.BatchEventProcessor.notifyStart()","2","com.lmax.disruptor.BatchEventProcessorTest.shouldAlwaysHalt [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency []"
"disruptor","20","com.lmax.disruptor.AbstractSequencer.newBarrier(Sequence...)","2","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsOneArgWhenBatchSizeIsNegative [],com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsTwoArgWhenBatchSizeIsNegative []"
"disruptor","21","com.lmax.disruptor.MultiProducerSequencer.setAvailableBufferValue(int,int)","2","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsVarArgWhenBatchStartsAtIsNegative [],com.lmax.disruptor.RingBufferTest.shouldPublishEvents []"
"disruptor","22","com.lmax.disruptor.AbstractSequencer.addGatingSequences(Sequence...)","2","com.lmax.disruptor.BatchEventProcessorTest.shouldCallExceptionHandlerOnUncaughtException [],com.lmax.disruptor.RingBufferTest.shouldClaimAndGetMultipleMessages []"
"disruptor","23","com.lmax.disruptor.Sequence.set(long)","2","com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsVarArgIfBatchIsLargerThanRingBuffer []"
"disruptor","24","com.lmax.disruptor.dsl.BasicExecutor.execute(Runnable)","2","com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor []"
"disruptor","25","com.lmax.disruptor.Sequence.compareAndSet(long,long)","1","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsThreeArgWhenBatchExtendsPastEndOfArray []"
"disruptor","26","com.lmax.disruptor.RingBuffer.checkBatchSizing(int,int)","1","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsThreeArgWhenBatchExtendsPastEndOfArray []"
"disruptor","27","com.lmax.disruptor.BatchEventProcessor.isRunning()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated []"
"disruptor","28","com.lmax.disruptor.MultiProducerSequencer.publish(long)","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","29","com.lmax.disruptor.FixedSequenceGroup.get()","1","com.lmax.disruptor.SequenceBarrierTest.shouldSetAndClearAlertStatus []"
"disruptor","30","com.lmax.disruptor.dsl.ConsumerRepository.add(EventProcessor,EventHandler<?superT>,SequenceBarrier)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated []"
"disruptor","31","com.lmax.disruptor.MultiProducerSequencer.setAvailable(long)","1","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsVarArgWhenBatchSizeIs0 []"
"disruptor","32","com.lmax.disruptor.util.ThreadHints.onSpinWait()","1","com.lmax.disruptor.BusySpinWaitStrategyTest.shouldWaitForValue []"
"disruptor","33","com.lmax.disruptor.RingBuffer.hasAvailableCapacity(int)","1","com.lmax.disruptor.RingBufferTest.shouldClaimAndGetInSeparateThread []"
"disruptor","34","com.lmax.disruptor.RingBuffer.publish(long)","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","35","com.lmax.disruptor.RingBuffer.createMultiProducer(EventFactory<E>,int,WaitStrategy)","1","com.lmax.disruptor.RingBufferTest.shouldPublishEventsOneArgBatchSizeOfOne []"
"disruptor","36","com.lmax.disruptor.SingleProducerSequencer.next()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency []"
"disruptor","37","com.lmax.disruptor.dsl.EventProcessorInfo.start(Executor)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors []"
"disruptor","38","com.lmax.disruptor.RingBuffer.createSingleProducer(EventFactory<E>,int,WaitStrategy)","1","com.lmax.disruptor.SequenceGroupTest.shouldReturnMaxSequenceWhenEmptyGroup []"
"disruptor","39","com.lmax.disruptor.AbstractSequencer.getCursor()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors []"
"disruptor","40","com.lmax.disruptor.SingleProducerSequencer.next(int)","1","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsVarArgWhenBatchExtendsPastEndOfArray []"
"disruptor","41","com.lmax.disruptor.RingBuffer.addGatingSequences(Sequence...)","1","com.lmax.disruptor.RingBufferTest.shouldPublishEventsWithBatchSizeOfOne []"
