"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.Gson.newJsonReader(Reader)","18","com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization [gson],com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization [gson],com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive [gson],com.google.gson.functional.CollectionTest.testStack [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization [gson],com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization [gson],com.google.gson.functional.MapTest.testConcurrentNavigableMap [gson],com.google.gson.functional.JavaUtilTest.testProperties [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault [gson],com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry [gson],com.google.gson.functional.PrimitiveTest.testStringsAsBooleans [gson],com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization [gson],com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization [gson]"
"gson","2","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","10","com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive [gson],com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization [gson],com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization [gson],com.google.gson.functional.ObjectTest.testNullDeserialization [gson],com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization [gson],com.google.gson.functional.CollectionTest.testPriorityQueue [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive [gson],com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree [gson],com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization [gson],com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization [gson]"
"gson","3","com.google.gson.Gson.newJsonWriter(Writer)","7","com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization [gson],com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation [gson],com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey [gson],com.google.gson.JsonObjectTest.testPropertyWithQuotes [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicBoolean [gson]"
"gson","4","com.google.gson.GsonBuilder.create()","6","com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls [gson],com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration [gson],com.google.gson.functional.VersioningTest.testVersionedClassesSerialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization [gson],com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId [gson]"
"gson","5","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","3","com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls [gson],com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType [gson]"
"gson","6","com.google.gson.Gson.getAdapter(TypeToken<T>)","3","com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays [gson],com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization [gson],com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization [gson]"
"gson","7","com.google.gson.stream.JsonReader.peek()","3","com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization [gson],com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization [gson],com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization [gson]"
"gson","8","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(JsonWriter,T)","3","com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization [gson],com.google.gson.functional.CircularReferenceTest.testCircularSerialization [gson]"
"gson","9","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)","3","com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation [gson],com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause [gson]"
"gson","10","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","3","com.google.gson.functional.SerializedNameTest.testFirstNameIsChosenForSerialization [gson],com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues [gson],com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter [gson]"
"gson","11","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","3","com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator [gson]"
"gson","12","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","3","com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization [gson],com.google.gson.functional.JsonArrayTest.testMixedPrimitiveAddition [gson],com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization [gson]"
"gson","13","com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>)","3","com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization [gson]"
"gson","14","com.google.gson.Gson.fromJson(JsonReader,Type)","2","com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive [gson]"
"gson","15","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","2","com.google.gson.JavaSerializationTest.testListIsSerializable [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization [gson]"
"gson","16","com.google.gson.internal.bind.MapTypeAdapterFactory.create(Gson,TypeToken<T>)","2","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter [gson],com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization [gson]"
"gson","17","com.google.gson.Gson.doubleAdapter(boolean)","2","com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicLongWithStringSerializationPolicy [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter [gson]"
"gson","18","com.google.gson.internal.Excluder.excludeField(Field,boolean)","2","com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization [gson],com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject [gson]"
"gson","19","com.google.gson.TypeAdapter.nullSafe()","1","com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName [gson]"
"gson","20","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>getBoundFields(Gson,TypeToken<?>,Class<?>)","1","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault [gson]"
"gson","21","com.google.gson.stream.JsonWriter.isLenient()","1","com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters [gson]"
"gson","22","com.google.gson.Gson.fromJson(String,Type)","1","com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization [gson]"
"gson","23","com.google.gson.Gson.toJson(Object)","1","com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicLongWithStringSerializationPolicy [gson]"
"gson","24","com.google.gson.internal.Excluder.create(Gson,TypeToken<T>)","1","com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization [gson]"
"gson","25","com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(Type,Class<?superT>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive [gson]"
"gson","26","com.google.gson.stream.JsonWriter.writeDeferredName()","1","com.google.gson.functional.InheritanceTest.testSubClassSerialization [gson]"
"gson","27","com.google.gson.internal.bind.JsonTreeReader.peek()","1","com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialized [gson]"
"gson","28","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","1","com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities [gson]"
"gson","29","com.google.gson.internal.Primitives.add(Map<Class<?>,Class<?>>,Map<Class<?>,Class<?>>,Class<?>,Class<?>)","1","com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray [gson]"
"gson","30","com.google.gson.JsonParser.parse(Reader)","1","com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName [gson]"
"gson","31","com.google.gson.Gson.toJsonTree(Object,Type)","1","com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields [gson]"
"gson","32","com.google.gson.internal.UnsafeAllocator.create()","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray [gson]"
"gson","33","com.google.gson.JsonElement.toString()","1","com.google.gson.functional.JsonArrayTest.testBooleanPrimitiveAddition [gson]"
"gson","34","com.google.gson.stream.JsonWriter.value(Number)","1","com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate [gson]"
"gson","35","com.google.gson.Gson.toJson(Object,Type)","1","com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization [gson]"
"gson","36","com.google.gson.internal.Excluder.excludeClass(Class<?>,boolean)","1","com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization [gson]"
"gson","37","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization [gson]"
"gson","38","com.google.gson.Gson.floatAdapter(boolean)","1","com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields [gson]"
"gson","39","com.google.gson.internal.bind.JsonTreeWriter.beginObject()","1","com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson]"
