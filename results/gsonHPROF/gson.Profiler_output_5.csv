"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.Gson.newJsonReader(Reader)","22","com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization [gson],com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder [gson],com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization [gson],com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation [gson],com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization [gson],com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonSerializerDeserializerBasedJsonAdapterOnFields [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive [gson],com.google.gson.functional.EnumTest.testEnumCaseMapping [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicIntegerArray [gson],com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialized [gson],com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization [gson],com.google.gson.functional.PrimitiveTest.testByteDeserialization [gson],com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization [gson],com.google.gson.functional.MapTest.testMapDeserialization [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming [gson],com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails [gson],com.google.gson.functional.EscapingTest.testEscapingObjectFields [gson]"
"gson","2","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","12","com.google.gson.MixedStreamTest.testWriteInvalidState [gson],com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues [gson],com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized [gson],com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization [gson],com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive [gson],com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter [gson],com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization [gson],com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization [gson],com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization [gson]"
"gson","3","com.google.gson.Gson.getAdapter(TypeToken<T>)","9","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter [gson],com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization [gson],com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored [gson],com.google.gson.functional.MapTest.testMapDeserializationWithNullKey [gson],com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields [gson],com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey [gson],com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause [gson],com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization [gson],com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization [gson]"
"gson","4","com.google.gson.Gson.newJsonWriter(Writer)","8","com.google.gson.functional.MapTest.testMapSubclassSerialization [gson],com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicLongWithStringSerializationPolicy [gson],com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization [gson],com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization [gson]"
"gson","5","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>getBoundFields(Gson,TypeToken<?>,Class<?>)","5","com.google.gson.GsonBuilderTest.testTransientFieldExclusion [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization [gson],com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers [gson],com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization [gson]"
"gson","6","com.google.gson.GsonBuilder.create()","5","com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming [gson],com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject [gson],com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter [gson]"
"gson","7","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)","3","com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization [gson],com.google.gson.functional.SerializedNameTest.testMultipleNamesInTheSameString [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault [gson]"
"gson","8","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","3","com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization [gson],com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays [gson]"
"gson","9","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>)","3","com.google.gson.functional.MapTest.testMapOfMapSerialization [gson],com.google.gson.functional.JsonParserTest.testDeserializingCustomTree [gson],com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface [gson]"
"gson","10","com.google.gson.Gson.doubleAdapter(boolean)","3","com.google.gson.functional.CollectionTest.testStack [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization [gson],com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization [gson]"
"gson","11","com.google.gson.TypeAdapter.nullSafe()","2","com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization [gson],com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId [gson]"
"gson","12","com.google.gson.Gson.fromJson(String,Type)","2","com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger [gson],com.google.gson.functional.LeniencyTest.testLenientFromJson [gson]"
"gson","13","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(JsonWriter,T)","2","com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson],com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization [gson]"
"gson","14","com.google.gson.Gson.fromJson(JsonElement,Type)","2","com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode [gson]"
"gson","15","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","2","com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization [gson],com.google.gson.JavaSerializationTest.testListIsSerializable [gson]"
"gson","16","com.google.gson.JsonParser.parse(Reader)","2","com.google.gson.internal.bind.JsonElementReaderTest.testEmptyObject [gson],com.google.gson.internal.bind.JsonElementReaderTest.testArray [gson]"
"gson","17","com.google.gson.Gson.toJsonTree(Object,Type)","2","com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson],com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization [gson]"
"gson","18","com.google.gson.internal.bind.MapTypeAdapterFactory.create(Gson,TypeToken<T>)","2","com.google.gson.JavaSerializationTest.testMapIsSerializable [gson],com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables [gson]"
"gson","19","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","2","com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization [gson],com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization [gson]"
"gson","20","com.google.gson.Gson.fromJson(String,Class<T>)","2","com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization [gson],com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization [gson]"
"gson","21","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","2","com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization [gson],com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization [gson]"
"gson","22","com.google.gson.internal.Excluder.excludeField(Field,boolean)","2","com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization [gson]"
"gson","23","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","2","com.google.gson.functional.CollectionTest.testRawCollectionSerialization [gson],com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization [gson]"
"gson","24","com.google.gson.Gson.floatAdapter(boolean)","2","com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization [gson],com.google.gson.GsonBuilderTest.testTransientFieldExclusion [gson]"
"gson","25","com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>)","2","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize1dArray [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter [gson]"
"gson","26","com.google.gson.DefaultDateTypeAdapter.serialize(Date,Type,JsonSerializationContext)","1","com.google.gson.DefaultDateTypeAdapterTest.testFormattingInEnUs [gson]"
"gson","27","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization [gson]"
"gson","28","com.google.gson.stream.JsonWriter.newline()","1","com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization [gson]"
"gson","29","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored [gson]"
"gson","30","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","1","com.google.gson.functional.ObjectTest.testNullDeserialization [gson]"
"gson","31","com.google.gson.internal.bind.TreeTypeAdapter.newFactory(TypeToken<?>,Object)","1","com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern [gson]"
"gson","32","com.google.gson.internal.UnsafeAllocator.create()","1","com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues [gson]"
"gson","33","com.google.gson.stream.JsonReader.nextUnquotedValue()","1","com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedString [gson]"
"gson","34","com.google.gson.internal.LinkedHashTreeMap.V>[]doubleCapacity(Node<K,V>[])","1","com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash [gson]"
"gson","35","com.google.gson.TypeAdapter.fromJson(Reader)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue [gson]"
"gson","36","com.google.gson.JsonElement.toString()","1","com.google.gson.functional.JsonArrayTest.testSameAddition [gson]"
"gson","37","com.google.gson.Gson.toJson(Object,Type)","1","com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization [gson]"
"gson","38","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","1","com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType [gson]"
