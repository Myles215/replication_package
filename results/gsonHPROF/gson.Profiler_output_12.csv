"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.Gson.newJsonReader(Reader)","26","com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive [gson],com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization [gson],com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization [gson],com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal [gson],com.google.gson.functional.EnumTest.testEnumSet [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicLongWithStringSerializationPolicy [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization [gson],com.google.gson.functional.MapTest.testMapDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization [gson],com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization [gson],com.google.gson.functional.ObjectTest.testSingletonLists [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicIntegerArray [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt [gson],com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization [gson],com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter [gson]"
"gson","2","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","12","com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType [gson],com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization [gson],com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization [gson],com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded [gson],com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization [gson],com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject [gson],com.google.gson.MixedStreamTest.testReadInvalidState [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization [gson],com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores [gson],com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization [gson],com.google.gson.functional.LeniencyTest.testLenientFromJson [gson]"
"gson","3","com.google.gson.Gson.newJsonWriter(Writer)","9","com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization [gson],com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls [gson],com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization [gson],com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization [gson],com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationWorksForParameterizedType [gson],com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables [gson]"
"gson","4","com.google.gson.GsonBuilder.create()","5","com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization [gson],com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize [gson],com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers [gson]"
"gson","5","com.google.gson.Gson.doubleAdapter(boolean)","5","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry [gson],com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers [gson],com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate [gson],com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization [gson]"
"gson","6","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)","4","com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testDifferentJsonAdaptersForGenericFieldsOfSameRawType [gson],com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers [gson]"
"gson","7","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","4","com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization [gson],com.google.gson.functional.ObjectTest.testNullDeserialization [gson],com.google.gson.functional.PrimitiveTest.testByteDeserialization [gson],com.google.gson.functional.InheritanceTest.testSubClassSerialization [gson]"
"gson","8","com.google.gson.Gson.getAdapter(TypeToken<T>)","4","com.google.gson.functional.EnumTest.testEnumCaseMapping [gson],com.google.gson.GsonBuilderTest.testTransientFieldExclusion [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization [gson]"
"gson","9","com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(Gson,TypeToken<T>)","2","com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields [gson],com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization [gson]"
"gson","10","com.google.gson.internal.bind.ArrayTypeAdapter.write(JsonWriter,Object)","2","com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization [gson],com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause [gson]"
"gson","11","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(JsonWriter,T)","2","com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization [gson],com.google.gson.functional.CircularReferenceTest.testCircularSerialization [gson]"
"gson","12","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","2","com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger [gson]"
"gson","13","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>getBoundFields(Gson,TypeToken<?>,Class<?>)","2","com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization [gson],com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization [gson]"
"gson","14","com.google.gson.Gson.toJson(Object,Type,Appendable)","2","com.google.gson.functional.ReadersWritersTest.testWriterForSerialization [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers [gson]"
"gson","15","com.google.gson.Gson.fromJson(String,Type)","2","com.google.gson.functional.MapTest.testConcurrentSkipListMap [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant [gson]"
"gson","16","com.google.gson.JsonParser.parse(Reader)","2","com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose [gson],com.google.gson.JsonParserTest.testParseMixedArray [gson]"
"gson","17","com.google.gson.internal.LinkedTreeMap.V>>entrySet()","1","com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues [gson]"
"gson","18","com.google.gson.TypeAdapter.nullSafe()","1","com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization [gson]"
"gson","19","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization [gson]"
"gson","20","com.google.gson.Gson.toJson(JsonElement)","1","com.google.gson.functional.ObjectTest.testNullSerialization [gson]"
"gson","21","com.google.gson.internal.bind.ArrayTypeAdapter.read(JsonReader)","1","com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization [gson]"
"gson","22","com.google.gson.Gson.fromJson(JsonElement,Type)","1","com.google.gson.JsonParserTest.testReadWriteTwoObjects [gson]"
"gson","23","com.google.gson.TypeAdapter.toJson(Writer,T)","1","com.google.gson.ObjectTypeAdapterTest.testSerializeObject [gson]"
"gson","24","com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(Type,Class<?superT>)","1","com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization [gson]"
"gson","25","com.google.gson.Gson.fromJson(JsonReader,Type)","1","com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization [gson]"
"gson","26","com.google.gson.stream.JsonWriter.string(String)","1","com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects [gson]"
"gson","27","com.google.gson.Gson.toJson(Object,Type,JsonWriter)","1","com.google.gson.functional.MapTest.testRawMapSerialization [gson]"
"gson","28","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","1","com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization [gson]"
"gson","29","com.google.gson.Gson.assertFullConsumption(Object,JsonReader)","1","com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues [gson]"
"gson","30","com.google.gson.stream.JsonReader.checkLenient()","1","com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization [gson]"
"gson","31","com.google.gson.internal.Excluder.excludeField(Field,boolean)","1","com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers [gson]"
"gson","32","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls [gson]"
"gson","33","com.google.gson.reflect.TypeToken.getType()","1","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray [gson]"
"gson","34","com.google.gson.internal.LazilyParsedNumber.writeReplace()","1","com.google.gson.JavaSerializationTest.testNumberIsSerializable [gson]"
"gson","35","com.google.gson.internal.bind.TypeAdapters.newFactory(TypeToken<TT>,TypeAdapter<TT>)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter [gson]"
"gson","36","com.google.gson.internal.LinkedTreeMap.V>find(K,boolean)","1","com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys [gson]"
"gson","37","com.google.gson.stream.JsonReader.setLenient(boolean)","1","com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization [gson]"
"gson","38","com.google.gson.internal.ConstructorConstructor.get(TypeToken<T>)","1","com.google.gson.functional.FieldNamingTest.testUpperCamelCase [gson]"
"gson","39","com.google.gson.stream.JsonReader.fillBuffer(int)","1","com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed [gson]"
"gson","40","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(Field,boolean,Excluder)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter [gson]"
"gson","41","com.google.gson.internal.LinkedHashTreeMap.V>find(K,boolean)","1","com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash [gson]"
"gson","42","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","1","com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers [gson]"
"gson","43","com.google.gson.stream.JsonWriter.value(Number)","1","com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject [gson]"
"gson","44","com.google.gson.GsonBuilder.addTypeAdaptersForDate(String,int,int,List<TypeAdapterFactory>)","1","com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter [gson]"
"gson","45","com.google.gson.stream.JsonReader.doPeek()","1","com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy [gson]"
"gson","46","com.google.gson.internal.Excluder.excludeClass(Class<?>,boolean)","1","com.google.gson.functional.MapTest.testMapSerializationEmpty [gson]"
"gson","47","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","1","com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause [gson]"
"gson","48","com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>)","1","com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization [gson]"
"gson","49","com.google.gson.internal.bind.JsonTreeWriter.beginObject()","1","com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType [gson]"
