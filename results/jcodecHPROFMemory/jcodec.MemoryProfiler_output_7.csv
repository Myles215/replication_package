"Project","MethodIndex","Method","Count","Tests"
"jcodec","1","org.jcodec.codecs.h264.io.CAVLC.writeBlockGen(BitWriter,int[],VLC[],int,int,int[],VLC)","48","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","2","org.jcodec.common.model.Picture.createCropped(int,int,ColorSpace,Rect)","37","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","3","org.jcodec.codecs.h264.io.CAVLC.readCoeffs(BitReader,VLC,VLC[],int[],int,int,int[])","33","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","4","org.jcodec.codecs.h264.encode.MBWriterINxN.encodeMacroblock(EncodingContext,Picture,int,int,BitWriter,EncodedMB,int,NonRdVector)","15","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","5","org.jcodec.codecs.h264.decode.BlockInterpolator.initSafe()","15","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC1 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC3 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC3 []"
"jcodec","6","org.jcodec.common.io.NIOUtils.toArray(ByteBuffer)","12","org.jcodec.codecs.png.PNGDecoderTest.testPNG [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","7","org.jcodec.codecs.h264.encode.MBWriterP16x16.luma(EncodingContext,int[],int,int,BitWriter,int,int[])","11","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","8","org.jcodec.codecs.h264.encode.MBWriterI16x16.chroma(EncodingContext,Picture,int,int,MBType,BitWriter,int,Picture,int)","11","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","9","org.jcodec.codecs.h264.encode.MotionEstimator.estimateFullPix(Picture,byte[],int,int,int,int)","10","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","10","org.jcodec.codecs.h264.decode.BlockInterpolator.initUnsafe()","8","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","11","org.jcodec.codecs.h264.decode.FrameReader.createSliceReader(ByteBuffer,NALUnit)","8","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","12","org.jcodec.codecs.h264.encode.MBWriterI16x16.luma(EncodingContext,Picture,int,int,BitWriter,int,Picture,int,int[])","5","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","13","org.jcodec.codecs.h264.encode.IntraPredEstimator.getLumaPred4x4(Picture,EncodingContext,int,int,int)","5","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","14","org.jcodec.common.io.NIOUtils.fetchFromChannel(ReadableByteChannel,int)","4","org.jcodec.codecs.png.PNGDecoderTest.testPNG [],org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","15","org.jcodec.codecs.h264.encode.MBWriterP16x16.chroma(EncodingContext,int[],int[],int,int,BitWriter,int)","3","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","16","org.jcodec.platform.Platform.stringFromBytes(byte[])","2","org.jcodec.containers.mp4.AppleGpsTest.testAppleGps [],org.jcodec.containers.mp4.MP4UtilTest.testSimple []"
"jcodec","17","org.jcodec.containers.mp4.boxes.NodeBox.findAllPath(Box,Class<T>,String[])","2","org.jcodec.movtool.StripTest.testIntervals [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","18","org.jcodec.codecs.h264.encode.MotionEstimator.estimateQPix(Picture,byte[],int[],int,int)","2","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","19","org.jcodec.codecs.h264.encode.MBWriterINxN.lumaAnal(EncodingContext,Picture,int,int,BitWriter,int,EncodedMB,int[],int[][])","2","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","20","org.jcodec.codecs.h264.decode.SliceReader.readLuma8x8CAVLC(MBlock,boolean,boolean,int,int)","2","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","21","org.jcodec.codecs.h264.encode.MBWriterP16x16.encodeMacroblock(EncodingContext,Picture,int,int,BitWriter,EncodedMB,int,NonRdVector)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","22","org.jcodec.codecs.h264.encode.MBWriterI16x16.extractDC(int[][])","2","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","23","org.jcodec.containers.mkv.MKVType.values()","2","org.jcodec.containers.mkv.MKVDemuxerTest._testSubtitle [],org.jcodec.containers.mkv.MKVDemuxerTest.showAll []"
"jcodec","24","org.jcodec.codecs.vpx.VP8DCT.encodeWHT(short[])","1","org.jcodec.codecs.vp8.DCTTest.testWHT []"
"jcodec","25","org.jcodec.platform.Platform.classes(Object[])","1","org.jcodec.containers.mp4.SampleOffsetUtilsTest.testGetChunkBySample []"
"jcodec","26","org.jcodec.common.StringUtils.splitWorker(String,char,boolean)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","27","org.jcodec.containers.mp4.boxes.TimeToSampleBox.parse(ByteBuffer)","1","org.jcodec.containers.mp4.SampleOffsetUtilsTest.testGetSamplesInChunk []"
"jcodec","28","org.jcodec.codecs.h264.encode.MBDeblocker.deblockMBP(EncodedMB,EncodedMB,EncodedMB)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","29","org.jcodec.codecs.h264.io.CAVLC.fork()","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","30","org.jcodec.movtool.MetadataEditor.createFrom(File)","1","org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow []"
"jcodec","31","org.jcodec.common.io.BitReader.createBitReader(ByteBuffer)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","32","org.jcodec.common.IntIntMap.createArray(int)","1","org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","33","org.jcodec.codecs.h264.mp4.AvcCBox.parse(ByteBuffer)","1","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testAudioTrack []"
"jcodec","34","org.jcodec.containers.mp4.boxes.Header.write(ByteBuffer)","1","org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow []"
"jcodec","35","org.jcodec.codecs.h264.encode.MBWriterI16x16.writeDC(CAVLC,int,int,BitWriter,int,int,int,int[],MBType,MBType)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","36","org.jcodec.containers.mp4.boxes.ChannelBox.parse(ByteBuffer)","1","org.jcodec.containers.mp4.AppleGpsTest.testAppleGps2Meta []"
"jcodec","37","org.jcodec.codecs.h264.H264Encoder.encodeSlice(SeqParameterSet,PictureParameterSet,Picture,ByteBuffer,boolean,int,SliceType,int)","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","38","org.jcodec.codecs.h264.io.model.SeqParameterSet.read(ByteBuffer)","1","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","39","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.getColorInfo(AbstractMP4DemuxerTrack)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","40","org.jcodec.codecs.mpeg4.MPEG4Renderer.renderMBInter(MPEG4DecodingContext,Picture[],Macroblock,int,boolean)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","41","org.jcodec.platform.Platform.newInstance(Class<T>,Object[])","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","42","org.jcodec.common.ArrayUtil.randomIntArray(int,int,int)","1","org.jcodec.common.model.PictureTest.testToAndFrom []"
"jcodec","43","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrack.nextFrame()","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","44","org.jcodec.codecs.vpx.VP8DCT.encodeDCT(short[])","1","org.jcodec.codecs.vp8.DCTTest.testDCT []"
"jcodec","45","org.jcodec.containers.mp4.muxer.MP4Muxer.doAddTrack(MP4TrackType,Codec)","1","org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","46","org.jcodec.platform.Platform.copyOfRangeB(byte[],int,int)","1","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit []"
"jcodec","47","org.jcodec.common.io.NIOUtils.combineBuffers(Iterable<ByteBuffer>)","1","org.jcodec.api.Issue380Test.testFrameGrabCanExtractOrientation []"
"jcodec","48","org.jcodec.codecs.h264.io.CABAC.readCoeffs(MDecoder,BlockType,int[],int,int,int[],int[],int[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
