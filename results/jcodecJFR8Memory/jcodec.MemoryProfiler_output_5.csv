"Project","MethodIndex","Method","Count","Tests"
"jcodec","1","org.jcodec.common.model.Picture.createCropped(int,int,ColorSpace,Rect)","70","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.scale.ResamplerTest.randomBicubicTest [],org.jcodec.scale.ResamplerTest.randomLanczosTest [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CAVLC []"
"jcodec","2","org.jcodec.codecs.h264.decode.SliceHeaderReader.readPart1(BitReader)","16","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC3 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict1 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict4 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC3 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC3 []"
"jcodec","3","org.jcodec.codecs.h264.BufferH264ES.nextFrame()","14","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRef [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC []"
"jcodec","4","org.jcodec.codecs.h264.io.CABAC.initModels(int[][],SliceType,int,int)","10","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC4 []"
"jcodec","5","org.jcodec.common.IntIntMap.createArray(int)","5","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRefCAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testSpatialDirect [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRef [],org.jcodec.codecs.h264.ResidualBlockTest.testLuma2CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CABAC []"
"jcodec","6","org.jcodec.common.IntArrayList.fill(int,int,int)","5","org.jcodec.codecs.h264.ResidualBlockTest.testLumaDCCabac [],org.jcodec.codecs.h264.ChromaPredictionBuilderTest.testHorizontal [],org.jcodec.codecs.h264.ResidualBlockTest.testLuma1CAVLC [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.ResidualBlockTest.testChromaAC3CAVLC []"
"jcodec","7","org.jcodec.codecs.h264.io.CABAC.readCoeffs(MDecoder,BlockType,int[],int,int,int[],int[],int[])","5","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","8","org.jcodec.codecs.h264.decode.SliceHeaderReader.readDecoderPicMarking(NALUnit,SliceHeader,BitReader)","4","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC1 []"
"jcodec","9","org.jcodec.codecs.h264.decode.BlockInterpolator.initUnsafe()","3","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","10","org.jcodec.common.dct.DCTRef.fdct(int[],int)","3","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","11","org.jcodec.codecs.h264.decode.FrameReader.createSliceReader(ByteBuffer,NALUnit)","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","12","org.jcodec.common.IntArrayList.toArray()","3","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInferenceCAVLC [],org.jcodec.codecs.h264.ResidualBlockTest.testAC15CABAC [],org.jcodec.codecs.h264.ChromaPredictionBuilderTest.testVertical []"
"jcodec","13","org.jcodec.containers.mkv.boxes.EbmlBin.readChannel(SeekableByteChannel)","2","org.jcodec.containers.mkv.MKVDemuxerTest.testGetFrame [],org.jcodec.containers.mkv.MKVDemuxerTest.testPosition []"
"jcodec","14","org.jcodec.common.io.NIOUtils.fetchFromChannel(ReadableByteChannel,int)","2","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","15","org.jcodec.platform.Platform.copyOfInt(int[],int)","2","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","16","org.jcodec.common.StringUtils.splitWorker(String,char,boolean)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","17","org.jcodec.scale.BaseResampler.resample(Picture,Picture)","1","org.jcodec.scale.ResamplerTest.randomLanczosTest []"
"jcodec","18","org.jcodec.containers.mp4.boxes.NodeBox.findAllPath(Box,Class<T>,String[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","19","org.jcodec.codecs.h264.H264Utils.gotoNALUnit(ByteBuffer)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","20","org.jcodec.containers.mp4.demuxer.MP4Demuxer.fromTrakBox(TrakBox)","1","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testDefaultSampleSize []"
"jcodec","21","org.jcodec.common.io.NIOUtils.toArray(ByteBuffer)","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","22","org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter8x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,PartPred,PartPred)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","23","org.jcodec.codecs.mpeg12.SegmentReader.readToNextMarkerBuffers(List<ByteBuffer>)","1","org.jcodec.codecs.mpeg12.MPEGESTest.testESBuffer []"
"jcodec","24","org.jcodec.containers.mp4.muxer.MP4Muxer.addTrackWithId(MP4TrackType,Codec,int)","1","org.jcodec.containers.mp4.muxer.MP4MuxerTest.testAddTrackWithSameId []"
"jcodec","25","org.jcodec.containers.mp4.boxes.NodeBox.findBox(Box,List<String>,Collection<Box>)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","26","org.jcodec.containers.mp4.muxer.MP4Muxer.addTrack(MP4TrackType,Codec)","1","org.jcodec.containers.mp4.muxer.MP4MuxerTest.testAddEmptyTracks []"
"jcodec","27","org.jcodec.common.JCodecUtil2.getAsIntArray(ByteBuffer,int)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRef []"
"jcodec","28","org.jcodec.containers.mp4.boxes.Box.path(String)","1","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testRawDemuxer []"
"jcodec","29","org.jcodec.codecs.h264.decode.BlockInterpolator.initSafe()","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
