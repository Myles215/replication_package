"Project","MethodIndex","Method","Count","Tests"
"jcodec","1","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int,boolean)","86","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","2","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPred(int,boolean,boolean,boolean,byte[],byte[],byte,int,int,byte[])","60","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","3","org.jcodec.codecs.h264.encode.IntraPredEstimator.getLumaPred4x4(Picture,EncodingContext,int,int,int)","46","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","4","org.jcodec.codecs.h264.encode.MotionEstimator.estimateQPix(Picture,byte[],int[],int,int)","42","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.MotionEstimatorTest.testMotionEstimator [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","5","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeVert(Picture,int,int,int,int,int,int,int)","32","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRefCAVLC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict1 [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC1 []"
"jcodec","6","org.jcodec.codecs.h264.io.CAVLC.writeBlockGen(BitWriter,int[],VLC[],int,int,int[],VLC)","30","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","7","org.jcodec.codecs.h264.decode.CoeffTransformer._idct4x4(int[],int[])","28","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","8","org.jcodec.common.io.BitReader.readInt()","28","org.jcodec.common.io.BitStreamTest.testRandomNBit [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","9","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBs4(int,int,byte[],byte[],int,int,int,int,int,int,int,int,boolean)","27","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","10","org.jcodec.scale.BaseResampler.resample(Picture,Picture)","24","org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","11","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeHoris(Picture,int,int,int,int,int,int,int)","24","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","12","org.jcodec.codecs.h264.decode.BlockInterpolator.getBlockChroma(byte[],int,int,byte[],int,int,int,int,int,int)","23","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","13","org.jcodec.codecs.h264.encode.MBWriterINxN.lumaAnal(EncodingContext,Picture,int,int,BitWriter,int,EncodedMB,int[],int[][])","23","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","14","org.jcodec.common.io.VLC.readVLC(BitReader)","20","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","15","org.jcodec.common.io.BitReader.checkNBitDontCare(int)","19","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","16","org.jcodec.common.tools.MathUtil.clip(int,int,int)","19","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","17","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","18","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 []"
"jcodec","18","org.jcodec.common.model.Picture.createCropped(int,int,ColorSpace,Rect)","17","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","19","org.jcodec.scale.RgbToYuv420j.transform(Picture,Picture)","16","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","20","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsH(Picture,int,int[][])","15","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","21","org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode16x16(MBlock,Picture,Frame[][],PartPred)","14","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","22","org.jcodec.codecs.h264.decode.MBlockDecoderBase.predictChromaInter(Frame[][],MvList,int,int,int,Picture,PartPred[])","14","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","23","org.jcodec.codecs.h264.decode.SliceReader.readLuma(MBlock,boolean,boolean,int,int)","14","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","24","org.jcodec.codecs.h264.encode.MotionEstimator.sad(byte[],int,byte[],int,int)","12","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","25","org.jcodec.common.io.VLC.invert(int,int,int,IntArrayList,IntArrayList)","12","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CABAC [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CAVLC [],org.jcodec.codecs.h264.ResidualBlockTest.testLuma1CAVLC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC1 [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","26","org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeAC(int[],int,int[])","12","org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","27","org.jcodec.codecs.png.PNGDecoder.decodeData(IHDR,PLTE,TRNS,List<ByteBuffer>,byte[][])","12","org.jcodec.codecs.png.PNGDecoderTest.testPNG [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","28","org.jcodec.codecs.h264.decode.MBlockDecoderBase.chromaAC(boolean,boolean,int,int,int[],int,int,MBType,boolean,int[][])","11","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","29","org.jcodec.common.model.Picture.getPlaneWidth(int)","11","org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","30","org.jcodec.codecs.h264.decode.CAVLCReader.readZeroBitCount(BitReader,String)","10","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","31","org.jcodec.common.io.BitWriter.putInt(int)","10","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","32","org.jcodec.containers.mps.MPSDemuxer.probe(ByteBuffer)","10","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow [],org.jcodec.api.Issue380Test.testFrameGrabCanExtractOrientation [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteFast []"
"jcodec","33","org.jcodec.common.io.VLCBuilder.set(int,String)","9","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInferenceCAVLC [],org.jcodec.codecs.h264.ChromaPredictionBuilderTest.testDC [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ResidualBlockTest.testLuma3CAVLC [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testVertical [],org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testPlane2 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.codecs.h264.ResidualBlockTest.testChromaDCCABAC []"
"jcodec","34","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillVerticalEdge(Picture,int,int,int[][])","9","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","35","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.deblockFrame(Picture)","8","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","36","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.mergeResidual(Picture,int[][][],int[][],int[][])","8","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInferenceCAVLC [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","37","org.jcodec.codecs.h264.io.CAVLC.readCoeffs(BitReader,VLC,VLC[],int[],int,int,int[])","8","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","38","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBoundaryStrenth(boolean,boolean,boolean,int,int,int,int,int,int,int,int)","8","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","39","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictDC(int[][],boolean,boolean,byte[],byte[],int,byte[])","7","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","40","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSubtractUnsafe(byte[],int,int,int,int,int[],byte[],int,int)","7","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","41","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillHorizontalEdge(Picture,int,int,int[][])","7","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CAVLC []"
"jcodec","42","org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma00(byte[],int,int,byte[],int,int,int,int,int,int)","7","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","43","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSafe(byte[],int,int,int,int,byte[],int,int)","7","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","44","org.jcodec.codecs.h264.io.CAVLC.readACBlock(BitReader,int[],int,int,boolean,MBType,boolean,MBType,int,int,int[])","7","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","45","org.jcodec.codecs.h264.decode.BlockInterpolator.getBlockLuma(Picture,Picture,int,int,int,int,int)","7","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","46","org.jcodec.codecs.h264.decode.MBlockDecoderIntra16x16.residualLumaI16x16(MBlock,boolean,boolean,int,int)","6","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC5 []"
"jcodec","47","org.jcodec.common.IntArrayList.set(int,int)","6","org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testPlane [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC3 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC3 []"
"jcodec","48","org.jcodec.codecs.h264.H264Utils.unescapeNAL(ByteBuffer)","6","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.api.Issue380Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","49","org.jcodec.codecs.common.biari.MDecoder.readOneByte()","6","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","50","org.jcodec.codecs.h264.encode.MBWriterP16x16.luma(EncodingContext,int[],int,int,BitWriter,int,int[])","6","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","51","org.jcodec.codecs.h264.decode.MBlock.clear()","6","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","52","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictVertical(int[][],int,boolean,byte[],byte[])","6","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","53","org.jcodec.common.logging.OutLogSink.postMessage(Message)","6","org.jcodec.containers.mxf.MXFDemuxerTest.testOneMore [],org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset [],org.jcodec.containers.mxf.MXFDemuxerTest.testMxfTimecode [],org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset2 []"
"jcodec","54","org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeAC(int[],int)","5","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","55","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSubtract(byte[],int,int,int,int,int[],byte[],int,int)","5","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","56","org.jcodec.codecs.h264.decode.MBlockDecoderIntraNxN.decode(MBlock,Picture)","5","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","57","org.jcodec.codecs.h264.decode.BlockInterpolator.initUnsafe()","5","org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCABAC [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialCAVLC []"
"jcodec","58","org.jcodec.codecs.h264.decode.PredictionMerger.copyPrediction(byte[],int,int,int,int,byte[])","5","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","59","org.jcodec.codecs.h264.io.CABAC.initModels(int[][],SliceType,int,int)","5","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testSpatialDirect []"
"jcodec","60","org.jcodec.codecs.h264.encode.MotionEstimator.estimateFullPix(Picture,byte[],int,int,int,int)","5","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","61","org.jcodec.containers.mp3.MPEGAudioDemuxer.skipJunkBB(int,ByteBuffer)","5","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.movtool.MetadataEditorTest.testItunesRead [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteFast [],org.jcodec.movtool.MetadataEditorTest.testKeyedRead []"
"jcodec","62","org.jcodec.codecs.h264.io.CABAC.readCoeffs(MDecoder,BlockType,int[],int,int,int[],int[],int[])","5","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","63","org.jcodec.codecs.h264.io.CAVLC.fork()","5","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","64","org.jcodec.codecs.h264.encode.MBDeblocker.calcStrengthForBlocks(EncodedMB,EncodedMB,int[][],int[][],int[][])","5","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","65","org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma4x4(MBlock)","4","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","66","org.jcodec.common.IntArrayList.fill(int,int,int)","4","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CAVLC [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict1 []"
"jcodec","67","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDC(int[][],int,boolean,boolean,byte[],byte[],byte[])","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","68","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)","4","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.encode.MotionEstimatorTest.testMotionEstimator [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","69","org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter16x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,int,PartPred)","4","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","70","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDCInside(int[][],int,int,int,boolean,boolean,byte[],byte[],byte[])","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","71","org.jcodec.codecs.h264.decode.BlockInterpolator.initSafe()","4","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CAVLC [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC3 []"
"jcodec","72","org.jcodec.codecs.h264.H264Encoder.encodeSlice(SeqParameterSet,PictureParameterSet,Picture,ByteBuffer,boolean,int,SliceType,int)","4","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","73","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsV(Picture,int,int[][])","4","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","74","org.jcodec.common.model.Picture.fill(int)","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","75","org.jcodec.common.dct.DCTRef.fdct(int[],int)","4","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","76","org.jcodec.containers.mkv.util.EbmlUtil.toHexString(byte[])","3","org.jcodec.containers.mkv.BlockOrderingTest.testFixedLacing []"
"jcodec","77","org.jcodec.common.io.DummyBitstreamReader.read1BitInt()","3","org.jcodec.common.io.BitStreamTest.testRandomNBit []"
"jcodec","78","org.jcodec.codecs.h264.decode.PredictionMerger.weight(byte[],int,int,int,int,int,int,int,byte[])","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","79","org.jcodec.codecs.h264.io.CAVLC.writeACBlock(BitWriter,int,int,MBType,MBType,int[],VLC[],int,int,int[])","3","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","80","org.jcodec.codecs.h264.io.CAVLC.writeLevels(BitWriter,int[],int,int)","3","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","81","org.jcodec.codecs.h264.encode.MBWriterP16x16.encodeMacroblock(EncodingContext,Picture,int,int,BitWriter,EncodedMB,int,NonRdVector)","3","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","82","org.jcodec.codecs.h264.io.CABAC.readCoeffAbsLevel(MDecoder,BlockType,int,int)","3","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","83","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.copyCol(byte[],int,int,int,byte[])","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","84","org.jcodec.codecs.h264.decode.SliceDecoder.putMacroblock(Picture,Picture,int,int)","3","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","85","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.lumaDCPredSAD(boolean,boolean,byte[],byte[],int,byte[])","3","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","86","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.lumaPlanePredSAD(boolean,boolean,byte[],byte[],byte,int,byte[])","3","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","87","org.jcodec.scale.Yuv420pToRgb.transform(Picture,Picture)","3","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","88","org.jcodec.common.io.DummyBitstreamReader.advance1()","3","org.jcodec.common.io.BitStreamTest.testRandomNBit []"
"jcodec","89","org.jcodec.codecs.prores.ProresDecoder.readACCoeffs(BitReader,int[],int[],int,int[],int,int)","3","org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit [],org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames []"
"jcodec","90","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictDiagonalDownLeft(int[],boolean,boolean,byte[],int,int,int,byte[])","3","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","91","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.lumaVerticalPred(boolean,byte[],int,byte[][])","3","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","92","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma21(byte[],int,byte[],int,int,int,int,int,int)","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","93","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20(byte[],int,byte[],int,int,int,int,int,int)","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","94","org.jcodec.codecs.h264.decode.MBlockDecoderIntra16x16.decode(MBlock,Picture)","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","95","org.jcodec.codecs.h264.encode.MBDeblocker.filterBsChr(int,int,int,byte[],byte[],int,int,int,int)","3","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","96","org.jcodec.codecs.h264.decode.CAVLCReader.readUEtrace(BitReader,String)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","97","org.jcodec.codecs.h264.decode.CAVLCReader.readNBit(BitReader,int,String)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","98","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma03Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","99","org.jcodec.codecs.h264.BufferH264ES.nextFrame()","2","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCABAC []"
"jcodec","100","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRound(byte[],int,int[],int,int,int,int,int,int)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","101","org.jcodec.codecs.prores.ProresDecoder.readDCCoeffs(BitReader,int[],int[],int,int)","2","org.jcodec.codecs.prores.ProresDecoderTest.testQuaverSize2Frames [],org.jcodec.codecs.prores.ProresDecoderTest.testHalfSize2Frames []"
"jcodec","102","org.jcodec.codecs.h264.decode.CAVLCReader.readUE(BitReader)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","103","org.jcodec.codecs.h264.io.CABAC.readMVD(MDecoder,int,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","104","org.jcodec.codecs.h264.decode.SliceDecoder.decodeMBlockP(MBlock,Picture,Frame[][])","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","105","org.jcodec.codecs.h264.decode.BlockInterpolator.merge(byte[],byte[],int,int,int,int)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","106","org.jcodec.codecs.h264.io.CAVLC.writeChrDCBlock(BitWriter,int[],VLC[],int,int,int[])","2","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","107","org.jcodec.codecs.h264.encode.MBEncoderHelper.putBlk(byte[],int[],byte[],int,int,int,int,int)","2","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","108","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictHorizontal(int[][],boolean,byte[],int,byte[])","2","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","109","org.jcodec.codecs.h264.decode.SliceReader.readChromaAC(boolean,boolean,int,int,MBType,int[],int,int,int)","2","org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","110","org.jcodec.common.model.Picture.getPlaneData(int)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","111","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predVerticalSAD(int,boolean,byte[],byte[])","2","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","112","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma00Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","113","org.jcodec.codecs.mpeg4.MPEG4Interpolator.vertMiddle8Safe(byte[],int,byte[],int,int,int,int)","2","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","114","org.jcodec.codecs.h264.encode.MBWriterINxN.encodeMacroblock(EncodingContext,Picture,int,int,BitWriter,EncodedMB,int,NonRdVector)","2","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","115","org.jcodec.codecs.h264.decode.SliceReader.readLumaAC8x8(int,int,int[])","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","116","org.jcodec.common.dct.SparseIDCT.coeff(int[],int,int)","2","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","117","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.buildPred(int,int,boolean,boolean,byte[],byte[],byte,byte[][])","2","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","118","org.jcodec.common.ArrayUtil.toByteArrayShifted(int[])","2","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC []"
"jcodec","119","org.jcodec.codecs.h264.encode.CQPRateControl.calcVar(byte[],int)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","120","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.buildPredVert(int,boolean,byte[],byte[][])","2","org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","121","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSubtractSafe(byte[],int,int,int,int,int[],byte[],int,int)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","122","org.jcodec.codecs.h264.decode.CoeffTransformer.fdct4x4(int[])","2","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","123","org.jcodec.codecs.h264.decode.SliceHeaderReader.readDecoderPicMarking(NALUnit,SliceHeader,BitReader)","2","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CABAC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 []"
"jcodec","124","org.jcodec.codecs.h264.decode.CoeffTransformer.fvdDC4x4(int[])","2","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","125","org.jcodec.common.io.BitReader.checkNBit(int)","2","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","126","org.jcodec.codecs.h264.encode.MBDeblocker._filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int,boolean)","2","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","127","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPredVerticalLeft(boolean,boolean,boolean,byte[],byte[],byte,int,int,byte[])","2","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","128","org.jcodec.codecs.h264.decode.SliceDecoder.decodeMacroblocks(Frame[][])","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","129","org.jcodec.containers.mp4.muxer.MP4Muxer.addTrackWithId(MP4TrackType,Codec,int)","2","org.jcodec.containers.mp4.muxer.MP4MuxerTest.testAddTrackWithId [],org.jcodec.containers.mp4.muxer.MP4MuxerTest.testAddTrackWithSameId []"
"jcodec","130","org.jcodec.codecs.h264.encode.MBWriterP16x16.chroma(EncodingContext,int[],int[],int,int,BitWriter,int)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","131","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","132","org.jcodec.codecs.h264.decode.SliceDecoder.initContext()","2","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC1 []"
"jcodec","133","org.jcodec.codecs.h264.decode.CoeffTransformer.idct8x8(int[])","2","org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","134","org.jcodec.codecs.common.biari.MDecoder.renormalize()","2","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 []"
"jcodec","135","org.jcodec.codecs.png.PNGEncoder.encodeFrame(Picture,ByteBuffer)","2","org.jcodec.codecs.png.PNGEncoderTest.testPNG []"
"jcodec","136","org.jcodec.common.IntArrayList.toArray()","2","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC3 []"
"jcodec","137","org.jcodec.containers.mkv.MKVParser.parse()","2","org.jcodec.containers.mkv.MKVDemuxerTest._testAudio [],org.jcodec.containers.mkv.MKVDemuxerTest.showAll []"
"jcodec","138","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictHorizontalDown(int[],boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","2","org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","139","org.jcodec.codecs.h264.decode.SliceReader.readMBlock8x8(MBlock)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","140","org.jcodec.codecs.h264.encode.MBEncoderHelper.pubBlkOnePlane(byte[],int,byte[],int,int,int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","141","org.jcodec.codecs.h264.decode.CAVLCReader.readBool(BitReader,String)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess []"
"jcodec","142","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrack.getNextFrame(ByteBuffer)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","143","org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeAC8x8(int[],int,int[])","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 []"
"jcodec","144","org.jcodec.codecs.h264.io.CAVLC.getCoeffTokenVLCForLuma(boolean,MBType,int,boolean,MBType,int)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","145","org.jcodec.codecs.h264.decode.PredictionMerger.mergeAvg(byte[],byte[],int,PartPred,int,int,int,byte[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","146","org.jcodec.codecs.common.biari.MDecoder.decodeFinalBin()","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","147","org.jcodec.codecs.mpeg4.MPEG4Interpolator.vertMiddle16Safe(byte[],byte[],int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","148","org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode8x16(MBlock,Picture,Frame[][],PartPred,PartPred)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","149","org.jcodec.common.model.Picture.getPlaneHeight(int)","1","org.jcodec.scale.ResamplerTest.testRandomBicubic []"
"jcodec","150","org.jcodec.codecs.h264.decode.CoeffTransformer.idct4x4(int[])","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","151","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPredVerticalRight(boolean,boolean,byte[],byte[],byte,int,int,byte[])","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","152","org.jcodec.codecs.mpeg4.MPEG4Bitstream.readDCSizeChrom(BitReader)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","153","org.jcodec.scale.Yuv420pToRgb.YUV420pToRGBN2N(byte,byte,byte,byte[],int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","154","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02NoRoundInt(int[],int,int[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","155","org.jcodec.common.JCodecUtil2.getAsIntArray(ByteBuffer,int)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC []"
"jcodec","156","org.jcodec.codecs.h264.io.CABAC.readSubMbTypeP(MDecoder)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","157","org.jcodec.codecs.h264.decode.PredictionMerger.mergePrediction(SliceHeader,int,int,PartPred,int,byte[],byte[],int,int,int,int,byte[],Frame[][],int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","158","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveMvsIntra(DeblockerInput,int,int)","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict4 []"
"jcodec","159","org.jcodec.common.io.NIOUtils.readableChannel(File)","1","org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit []"
"jcodec","160","org.jcodec.codecs.h264.decode.SliceReader.readResidualInter(MBlock,boolean,boolean,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","161","org.jcodec.containers.mp4.boxes.Header.write(ByteBuffer)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","162","org.jcodec.containers.mxf.model.MXFStructuralComponent.read(Map<Integer,ByteBuffer>)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset []"
"jcodec","163","org.jcodec.codecs.h264.encode.MBWriterI16x16.chroma(EncodingContext,Picture,int,int,MBType,BitWriter,int,Picture,int)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","164","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma03(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","165","org.jcodec.common.io.FileChannelWrapper.setPosition(long)","1","org.jcodec.containers.mkv.DisplayTimecodesTest.test []"
"jcodec","166","org.jcodec.codecs.h264.decode.CoeffTransformer.invDC4x4(int[])","1","org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","167","org.jcodec.common.IntIntMap.get(int)","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict4 []"
"jcodec","168","org.jcodec.common.io.VLCBuilder.setInt(int,int,int)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRefCAVLC []"
"jcodec","169","org.jcodec.common.model.Picture.cropSub(byte[],int,int,int,int,int,int,byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","170","org.jcodec.codecs.h264.decode.SliceReader.readMBlockI(MBlock)","1","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","171","org.jcodec.codecs.h264.io.CAVLC.writeTrailingOnes(BitWriter,int[],int,int)","1","org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","172","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDCTopBorder(int[][],int,int,int,boolean,boolean,byte[],byte[],byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","173","org.jcodec.common.model.Packet.createPacket(ByteBuffer,long,int,long,long,FrameType,TapeTimecode)","1","org.jcodec.movtool.StripTest.testIntervals []"
"jcodec","174","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPredVertical(boolean,boolean,byte[],byte[],byte,int,int,byte[])","1","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 []"
"jcodec","175","org.jcodec.codecs.h264.encode.MBEncoderHelper.putBlkPic(Picture,Picture,int,int)","1","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 []"
"jcodec","176","org.jcodec.common.tools.MathUtil.log2(int)","1","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing []"
"jcodec","177","org.jcodec.codecs.h264.decode.SliceReader.read16x16AC(boolean,boolean,int,int,int[],int,int,int,int)","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","178","org.jcodec.containers.mp4.boxes.NodeBox.findAllPath(Box,Class<T>,String[])","1","org.jcodec.movtool.StripTest.testIntervals []"
"jcodec","179","org.jcodec.common.io.BitWriter.writeNBit(int,int)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","180","org.jcodec.codecs.h264.decode.SliceReader.readPredictionInter16x8(MBlock,int,boolean,boolean,PartPred,PartPred,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","181","org.jcodec.codecs.raw.RAWVideoDecoder.copy(ByteBuffer,byte[],int)","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","182","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma23(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.codecs.h264.encode.MotionEstimatorTest.testMotionEstimator []"
"jcodec","183","org.jcodec.api.transcode.SourceImpl.removeFirstFixDuration(List<VideoFrameWithPacket>)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","184","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.calcMVPredictionMedian(int,int,int,int,boolean,boolean,boolean,boolean,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","185","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictHorizontal(int[][],int,boolean,byte[],byte[])","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","186","org.jcodec.codecs.h264.H264Encoder.encodeCand(EncodingContext,EncodedMB,SliceType,Picture,int,int,BitWriter,NonRdVector,RdVector)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","187","org.jcodec.common.io.FileChannelWrapper.write(ByteBuffer)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","188","org.jcodec.codecs.h264.io.CABAC.readCodedBlockFlagChromaDC(MDecoder,int,int,MBType,MBType,boolean,boolean,int,int,MBType)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","189","org.jcodec.containers.mxf.model.GenericPictureEssenceDescriptor.read(Map<Integer,ByteBuffer>)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset []"
"jcodec","190","org.jcodec.containers.mp4.BoxFactory.newBox(Header)","1","org.jcodec.movtool.StripTest.testIntervals []"
"jcodec","191","org.jcodec.codecs.h264.decode.SliceReader.readIntra16x16(int,MBlock)","1","org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","192","org.jcodec.codecs.h264.io.CAVLC.writeRuns(BitWriter,int[],int,int)","1","org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","193","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictPlane(int[][],boolean,boolean,byte[],byte[],byte[],int,byte[])","1","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","194","org.jcodec.common.io.BitWriter.writeOther(BitWriter)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","195","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","196","org.jcodec.common.dct.SimpleIDCT10Bit.idctRow(int[],int)","1","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing10Bit []"
"jcodec","197","org.jcodec.codecs.h264.io.CAVLC.unsigned(int)","1","org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","198","org.jcodec.common.dct.SimpleIDCT10Bit.idct10(int[],int)","1","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","199","org.jcodec.codecs.mpeg4.MPEG4DCT.idctColumnsAdd(short[],byte[],int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","200","org.jcodec.common.io.DummyBitstreamReader.readNBit(int)","1","org.jcodec.common.io.BitStreamTest.testRandomNBit []"
"jcodec","201","org.jcodec.containers.mxf.model.UL.equals(Object)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset []"
"jcodec","202","org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma8x8CABAC(MBlock)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","203","org.jcodec.common.IntArrayList.createIntArrayList()","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","204","org.jcodec.containers.mp4.demuxer.CodecMP4DemuxerTrack.nextFrame()","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","205","org.jcodec.codecs.h264.H264Const.buildPixSplitMap2x2()","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRef []"
"jcodec","206","org.jcodec.codecs.mpa.Mp3Mdct.oneLong(float[],float[])","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","207","org.jcodec.codecs.png.PNGDecoder.filterPaeth(byte[],int,byte[],int)","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","208","org.jcodec.containers.mp4.muxer.MP4Muxer.doAddTrack(MP4TrackType,Codec)","1","org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","209","org.jcodec.scale.LanczosResampler.getTapsX(int)","1","org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","210","org.jcodec.codecs.h264.H264Encoder.putLastMBLine()","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","211","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDCLeftBorder(int[][],int,int,int,boolean,boolean,byte[],byte[],byte[])","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","212","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.lumaPredSAD(int,boolean,boolean,byte[],byte[],byte,int,byte[])","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","213","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictVertical(int[][],boolean,byte[],int,byte[])","1","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit []"
"jcodec","214","org.jcodec.codecs.h264.decode.PredictionMerger.weightPrediction(SliceHeader,int,int,byte[],int,int,int,int,byte[])","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCABAC []"
"jcodec","215","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPredHorizontalDown(boolean,boolean,byte[],byte[],byte,int,int,byte[])","1","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 []"
"jcodec","216","org.jcodec.codecs.h264.decode.MBlockSkipDecoder.predictPSkip(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,Picture)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","217","org.jcodec.codecs.mpeg4.MPEG4Interpolator.interpolate8x8PlanarBoth(byte[],int,int,byte[],int,int,int,int,int,boolean)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","218","org.jcodec.codecs.h264.H264Utils.escapeNAL(ByteBuffer,ByteBuffer)","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","219","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.collectChromaPredictors(DecoderState,Picture,int)","1","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC3 []"
"jcodec","220","org.jcodec.common.tools.MD5.getDigest()","1","org.jcodec.common.tools.MD5Test.testmd5sum []"
"jcodec","221","org.jcodec.codecs.h264.io.CAVLC.codeTableLuma(boolean,MBType,int,boolean,MBType,int)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","222","org.jcodec.codecs.h264.decode.CAVLCReader.readSE(BitReader,String)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","223","org.jcodec.containers.mp3.MPEGAudioDemuxer.readFrame(ByteBuffer)","1","org.jcodec.containers.mp3.MPEGAudioDemuxerTest.testParseCBR []"
"jcodec","224","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveVect(MvList,int,int,int,int)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","225","org.jcodec.containers.mp4.boxes.NodeBox.findFirstPath(NodeBox,Class<T>,String[])","1","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testAudioTrack []"
"jcodec","226","org.jcodec.codecs.h264.encode.CQPRateControl.calcAvg(byte[])","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","227","org.jcodec.containers.mp4.boxes.NodeBox.findBox(Box,List<String>,Collection<Box>)","1","org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames []"
"jcodec","228","org.jcodec.codecs.h264.io.CAVLC.readChromaDCBlock(BitReader,int[],boolean,boolean)","1","org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","229","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveMvs(DeblockerInput,MvList,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","230","org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeDC4x4(int[],int)","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","231","org.jcodec.codecs.h264.decode.SliceReader.readMacroblock(MBlock)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","232","org.jcodec.containers.mp4.QTTimeUtil.mediaToEdited(TrakBox,long,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","233","org.jcodec.codecs.h264.H264Utils.skipToNALUnit(ByteBuffer)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","234","org.jcodec.codecs.h264.BufferH264ES.detectPoc(ByteBuffer,NALUnit,SliceHeader)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CAVLC []"
"jcodec","235","org.jcodec.containers.mp4.boxes.TimeToSampleBox.parse(ByteBuffer)","1","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","236","org.jcodec.codecs.h264.encode.MBWriterI16x16.writeAC(CAVLC,int,int,BitWriter,int,int,int[][],int,MBType,MBType,MBType,int[])","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","237","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma32Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","238","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictDiagonalDownRight(int[],boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","239","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma22(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","240","org.jcodec.codecs.h264.decode.SliceReader.readInter16x16(PartPred,MBlock)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","241","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictVertical(int[],boolean,byte[],int,int,int,byte[])","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess []"
"jcodec","242","org.jcodec.codecs.h264.encode.MBDeblocker.deblockBorderChroma(int[],int,byte[],int,byte[],int,int[][],int[][],boolean)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","243","org.jcodec.codecs.h264.encode.MBWriterI16x16.chromaResidual(int,int,BitWriter,int,int[][],int[][],CAVLC,CAVLC,MBType,MBType,MBType)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","244","org.jcodec.codecs.h264.decode.SliceDecoder.decodeFromReader(SliceReader)","1","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC2 []"
"jcodec","245","org.jcodec.codecs.vpx.vp9.Residual.readOneTU(int,int,int,int,boolean,int,VPXBooleanDecoder,DecodingContext)","1","org.jcodec.codecs.vpx.vp9.ResidualTest.testResidualIntraBlk928x8 []"
"jcodec","246","org.jcodec.codecs.prores.ProresDecoder.readCodeword(BitReader,Codebook)","1","org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames []"
"jcodec","247","org.jcodec.common.io.IOUtils.readFileToByteArray(File)","1","org.jcodec.containers.mkv.BlockOrderingTest.testFixedLacing []"
"jcodec","248","org.jcodec.common.ArrayUtil.randomIntArray(int,int,int)","1","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing10Bit []"
"jcodec","249","org.jcodec.containers.mkv.MKVParser.nextElement()","1","org.jcodec.containers.mkv.MKVDemuxerTest._testVideo []"
"jcodec","250","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.buildPredDCLft(int,int,int,boolean,boolean,byte[],byte[],byte[])","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","251","org.jcodec.scale.BaseResampler.getPel(Picture,int,int,int)","1","org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","252","org.jcodec.containers.mp3.MPEGAudioDemuxer.validHeader(int)","1","org.jcodec.movtool.MetadataEditorTest.testInplace []"
"jcodec","253","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.lumaHorizontalPred(boolean,byte[],int,byte[][])","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","254","org.jcodec.scale.RgbToYuv420j.rgb2yuv(byte,byte,byte,int[])","1","org.jcodec.scale.ResamplerTest.testRandomBicubic []"
"jcodec","255","org.jcodec.codecs.h264.decode.MBlockDecoderBDirect.predictBSpatialDirect(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,PartPred[],Picture,int[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","256","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.lumaVerticalPredSAD(boolean,byte[],int,byte[])","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","257","org.jcodec.codecs.h264.io.CABAC.readMBQpDelta(MDecoder,MBType)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","258","org.jcodec.common.IntObjectMap.keys()","1","org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","259","org.jcodec.containers.mp3.MPEGAudioDemuxer.readMoreData()","1","org.jcodec.containers.mp3.MPEGAudioDemuxerTest.testParseCBR []"
"jcodec","260","org.jcodec.codecs.h264.H264Utils.gotoNALUnitWithArray(ByteBuffer)","1","org.jcodec.api.Issue380Test.testFrameGrabCanExtractOrientation []"
"jcodec","261","org.jcodec.codecs.h264.decode.CoeffTransformer.invDC2x2(int[])","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCAVLC []"
"jcodec","262","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predHorizontalSAD(int,boolean,byte[],byte[])","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","263","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRoundInt(int[],int,int[],int,int,int,int,int,int)","1","org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","264","org.jcodec.codecs.h264.decode.SliceDecoder.fillCoeff(MBlock,int,int)","1","org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","265","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","266","org.jcodec.codecs.h264.decode.SliceReader.readMBlockP(MBlock)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","267","org.jcodec.codecs.h264.decode.PredictionMerger._mergePrediction(byte[],byte[],int,PartPred,int,int,int,byte[])","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialCAVLC []"
"jcodec","268","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma33(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","269","org.jcodec.codecs.h264.encode.MBDeblocker.deblockMBGeneric(EncodedMB,EncodedMB,EncodedMB,int[][],int[][])","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","270","org.jcodec.codecs.h264.decode.MBlockSkipDecoder.decodeSkip(MBlock,Frame[][],Picture,SliceType)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","271","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictDC(int[],boolean,boolean,byte[],byte[],int,int,int,byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","272","org.jcodec.codecs.mpeg4.MPEG4DCT.idctColumnsPut(short[],byte[],int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","273","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02NoRound(byte[],int,int[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","274","org.jcodec.containers.mp4.MP4Util.parseFullMovieChannel(SeekableByteChannel)","1","org.jcodec.movtool.StripTest.testIntervals []"
"jcodec","275","org.jcodec.codecs.h264.decode.SliceReader.readMVD(int,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","276","org.jcodec.codecs.common.biari.MDecoder.decodeBin(int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","277","org.jcodec.codecs.h264.encode.IntraPredEstimator.getLumaMode(Picture,EncodingContext,int,int)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","278","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","279","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPredDiagonalDownRight(boolean,boolean,byte[],byte[],byte,int,int,byte[])","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","280","org.jcodec.codecs.h264.decode.PredictionMerger._weightPrediction(byte[],byte[],int,int,int,int,int,int,int,int,int,byte[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","281","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictVerticalLeft(int[],boolean,boolean,byte[],byte[],int,int,int,byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","282","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma22Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","283","org.jcodec.codecs.h264.decode.SliceReader.readPrediction8x8P(MBlock,int,boolean,boolean)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","284","org.jcodec.codecs.h264.H264Encoder.doEncodeFrame(Picture,ByteBuffer,boolean,int,SliceType)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","285","org.jcodec.codecs.h264.encode.MBDeblocker.deblockMBP(EncodedMB,EncodedMB,EncodedMB)","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","286","org.jcodec.codecs.h264.decode.SliceReader.readChromaDC(int,boolean,boolean,int[],int,MBType)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","287","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.fillAdd(int[],int,int,byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","288","org.jcodec.common.io.NIOUtils.toArray(ByteBuffer)","1","org.jcodec.movtool.MetadataEditorTest.testKeyedWriteFast []"
"jcodec","289","org.jcodec.codecs.h264.decode.CoeffTransformer.reorderDC4x4(int[])","1","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","290","org.jcodec.codecs.h264.decode.FrameReader.createSliceReader(ByteBuffer,NALUnit)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CABAC []"
"jcodec","291","org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.predict8x8P(MBlock,Picture[],Picture,boolean,int,int,boolean,boolean,boolean,boolean,MvList,PartPred[])","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CABAC []"
"jcodec","292","org.jcodec.codecs.h264.encode.MBWriterI16x16.restorePlane(int[],int[][],int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","293","org.jcodec.scale.BicubicResampler.buildFilterTaps(int,int)","1","org.jcodec.scale.ResamplerTest.testRandomBicubic []"
"jcodec","294","org.jcodec.codecs.h264.decode.SliceDecoder.decodeMBlockIInt(MBlock,Picture)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","295","org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma0X(byte[],int,int,byte[],int,int,int,int,int,int,int)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
