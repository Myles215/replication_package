"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.Gson.newJsonReader(Reader)","17","com.google.gson.functional.ObjectTest.testSingletonLists [gson],com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject [gson],com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField [gson],com.google.gson.functional.JavaUtilTest.testProperties [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper [gson],com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization [gson],com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization [gson],com.google.gson.JavaSerializationTest.testListIsSerializable [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicLongArray [gson],com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails [gson],com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicLong [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization [gson]"
"gson","2","com.google.gson.Gson.newJsonWriter(Writer)","7","com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault [gson],com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration [gson],com.google.gson.functional.ArrayTest.testNullsInArraySerialization [gson],com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod [gson],com.google.gson.functional.InheritanceTest.testSubClassSerialization [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses [gson],com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization [gson]"
"gson","3","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","7","com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType [gson],com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue [gson],com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization [gson],com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList [gson],com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero [gson],com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization [gson]"
"gson","4","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>getBoundFields(Gson,TypeToken<?>,Class<?>)","5","com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause [gson],com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization [gson],com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter [gson],com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization [gson]"
"gson","5","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>)","4","com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testNullSafeObjectFromJson [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicLongWithStringSerializationPolicy [gson],com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization [gson]"
"gson","6","com.google.gson.Gson.getAdapter(TypeToken<T>)","3","com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization [gson],com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer [gson],com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization [gson]"
"gson","7","com.google.gson.stream.JsonReader.peek()","3","com.google.gson.functional.JsonParserTest.testParseInvalidJson [gson],com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects [gson]"
"gson","8","com.google.gson.GsonBuilder.create()","3","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap [gson],com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException [gson],com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes [gson]"
"gson","9","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)","3","com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation [gson],com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization [gson]"
"gson","10","com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>)","3","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize1dArray [gson],com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields [gson],com.google.gson.functional.InheritanceTest.testSubClassSerialization [gson]"
"gson","11","com.google.gson.Gson.fromJson(Reader,Type)","2","com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization [gson]"
"gson","12","com.google.gson.TypeAdapter.nullSafe()","2","com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives [gson],com.google.gson.functional.MapTest.testMapDeserialization [gson]"
"gson","13","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(JsonWriter,T)","2","com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization [gson],com.google.gson.functional.CircularReferenceTest.testCircularSerialization [gson]"
"gson","14","com.google.gson.Gson.fromJson(JsonElement,Type)","2","com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree [gson],com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree [gson]"
"gson","15","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","2","com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber [gson]"
"gson","16","com.google.gson.Gson.toJsonTree(Object,Type)","2","com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson],com.google.gson.functional.JsonTreeTest.testJsonTreeNull [gson]"
"gson","17","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","2","com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization [gson],com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings [gson]"
"gson","18","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter [gson]"
"gson","19","com.google.gson.Gson.toJson(Object,Type,Appendable)","1","com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault [gson]"
"gson","20","com.google.gson.internal.bind.MapTypeAdapterFactory.getKeyAdapter(Gson,Type)","1","com.google.gson.functional.MapTest.testMapOfMapSerialization [gson]"
"gson","21","com.google.gson.internal.LinkedTreeMap.V>find(K,boolean)","1","com.google.gson.JavaSerializationTest.testMapIsSerializable [gson]"
"gson","22","com.google.gson.stream.JsonReader.nextQuotedValue(char)","1","com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization [gson]"
"gson","23","com.google.gson.Gson.fromJson(JsonReader,Type)","1","com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal [gson]"
"gson","24","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull [gson]"
"gson","25","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","1","com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers [gson]"
"gson","26","com.google.gson.JsonObject.createJsonElement(Object)","1","com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization [gson]"
"gson","27","com.google.gson.internal.LinkedTreeMap.rebalance(Node<K,V>,boolean)","1","com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys [gson]"
"gson","28","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive [gson]"
"gson","29","com.google.gson.internal.Primitives.add(Map<Class<?>,Class<?>>,Map<Class<?>,Class<?>>,Class<?>,Class<?>)","1","com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization [gson]"
"gson","30","com.google.gson.Gson.toJson(Object,Type,JsonWriter)","1","com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization [gson]"
"gson","31","com.google.gson.stream.JsonReader.fillBuffer(int)","1","com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithIntegers [gson]"
"gson","32","com.google.gson.Gson.fromJson(String,Class<T>)","1","com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization [gson]"
"gson","33","com.google.gson.Gson.doubleAdapter(boolean)","1","com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter [gson]"
"gson","34","com.google.gson.GsonBuilder.addTypeAdaptersForDate(String,int,int,List<TypeAdapterFactory>)","1","com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection [gson]"
"gson","35","com.google.gson.stream.JsonReader.doPeek()","1","com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization [gson]"
"gson","36","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming [gson]"
"gson","37","com.google.gson.Gson.toJson(Object,Type)","1","com.google.gson.functional.VersioningTest.testVersionedUntilSerialization [gson]"
"gson","38","com.google.gson.internal.Excluder.excludeField(Field,boolean)","1","com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects [gson]"
"gson","39","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.PrimitiveTest.testByteSerialization [gson]"
"gson","40","com.google.gson.Gson.floatAdapter(boolean)","1","com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization [gson]"
