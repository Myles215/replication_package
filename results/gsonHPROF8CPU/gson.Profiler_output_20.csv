"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.Gson.newJsonReader(Reader)","19","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter [gson],com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization [gson],com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization [gson],com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming [gson],com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization [gson],com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter [gson],com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization [gson],com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter [gson],com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonSerializerDeserializerBasedJsonAdapterOnFields [gson],com.google.gson.JavaSerializationTest.testListIsSerializable [gson],com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper [gson],com.google.gson.functional.ObjectTest.testEmptyStringDeserialization [gson],com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault [gson],com.google.gson.functional.MapTest.testMapDeserializationWithLongKeys [gson]"
"gson","2","com.google.gson.Gson.newJsonWriter(Writer)","10","com.google.gson.functional.ObjectTest.testInnerClassSerialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization [gson],com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization [gson],com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault [gson],com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration [gson],com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization [gson],com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization [gson],com.google.gson.functional.ArrayTest.testArrayElementsAreArrays [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization [gson],com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization [gson]"
"gson","3","com.google.gson.Gson.getAdapter(TypeToken<T>)","8","com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub [gson],com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization [gson],com.google.gson.functional.MapTest.testComplexKeysDeserialization [gson],com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization [gson],com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization [gson],com.google.gson.functional.StringTest.testAssignmentCharSerialization [gson],com.google.gson.functional.MapTest.testHashMapDeserialization [gson]"
"gson","4","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","6","com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper [gson],com.google.gson.MixedStreamTest.testWriteHtmlSafe [gson],com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported [gson],com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization [gson],com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization [gson],com.google.gson.functional.JavaUtilTest.testProperties [gson]"
"gson","5","com.google.gson.TypeAdapter.nullSafe()","5","com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper [gson],com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero [gson],com.google.gson.JsonPrimitiveTest.testValidJsonOnToString [gson],com.google.gson.functional.ArrayTest.testEmptyArraySerialization [gson],com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization [gson]"
"gson","6","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","3","com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter [gson],com.google.gson.functional.MapTest.testHashMapDeserialization [gson]"
"gson","7","com.google.gson.Gson.fromJson(String,Class<T>)","3","com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails [gson],com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter [gson]"
"gson","8","com.google.gson.Gson.doubleAdapter(boolean)","3","com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization [gson],com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization [gson],com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull [gson]"
"gson","9","com.google.gson.Gson.toJson(Object,Type)","3","com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization [gson],com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays [gson],com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization [gson]"
"gson","10","com.google.gson.Gson.floatAdapter(boolean)","3","com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization [gson],com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization [gson],com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported [gson]"
"gson","11","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","2","com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers [gson],com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree [gson]"
"gson","12","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>getBoundFields(Gson,TypeToken<?>,Class<?>)","2","com.google.gson.functional.ObjectTest.testSingletonLists [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode [gson]"
"gson","13","com.google.gson.GsonBuilder.create()","2","com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation [gson],com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization [gson]"
"gson","14","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","2","com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization [gson],com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException [gson]"
"gson","15","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","2","com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration [gson],com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization [gson]"
"gson","16","com.google.gson.internal.Excluder.excludeClass(Class<?>,boolean)","2","com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization [gson],com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization [gson]"
"gson","17","com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>)","2","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField [gson],com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization [gson]"
"gson","18","com.google.gson.internal.LinkedTreeMap.V>>entrySet()","1","com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects [gson]"
"gson","19","com.google.gson.internal.bind.ArrayTypeAdapter.write(JsonWriter,Object)","1","com.google.gson.functional.MapTest.testGeneralMapField [gson]"
"gson","20","com.google.gson.Gson.toJson(Object,Type,Appendable)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical [gson]"
"gson","21","com.google.gson.stream.JsonReader.peek()","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical [gson]"
"gson","22","com.google.gson.Gson.toJson(Object)","1","com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization [gson]"
"gson","23","com.google.gson.reflect.TypeToken.equals(Object)","1","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation [gson]"
"gson","24","com.google.gson.FieldNamingPolicy.separateCamelCase(String,String)","1","com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores [gson]"
"gson","25","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)","1","com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization [gson]"
"gson","26","com.google.gson.JsonObject.createJsonElement(Object)","1","com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers [gson]"
"gson","27","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","1","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter [gson]"
"gson","28","com.google.gson.internal.Primitives.add(Map<Class<?>,Class<?>>,Map<Class<?>,Class<?>>,Class<?>,Class<?>)","1","com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization [gson]"
"gson","29","com.google.gson.JsonParser.parse(Reader)","1","com.google.gson.internal.bind.JsonElementReaderTest.testWrongType [gson]"
"gson","30","com.google.gson.internal.UnsafeAllocator.create()","1","com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization [gson]"
"gson","31","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(Field,boolean,Excluder)","1","com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization [gson]"
"gson","32","com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)","1","com.google.gson.stream.JsonReaderTest.testFailWithPositionGreaterThanBufferSize [gson]"
"gson","33","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.getRuntimeTypeIfMoreSpecific(Type,Object)","1","com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause [gson]"
