"Project","Rank","Method","Count","Tests"
"Project","MethodIndex","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,boolean)","15","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.CookiesIntegrationTest.testRemoveCookie [],spark.StaticFilesMemberTest.testExternalStaticFile [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.StaticFilesMemberTest.testStaticFilePageHtml [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withThreadPool [],spark.RedirectTest.testRedirectAnyGet [],spark.MultipleServicesTest.testGetHello [],spark.GzipTest.testStaticFileCssStyleCss [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.ResponseBodyTest.testMAXIME [],spark.staticfiles.StaticFilesTest.testExternalStaticFile [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","7","spark.MultipleFiltersTest.testMultipleFilters [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.RedirectTest.testRedirectAnyDelete [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally [],spark.staticfiles.StaticFilesTest.testExternalStaticFile [],spark.FilterTest.testJustFilter [],spark.RedirectTest.testRedirectPutWithSpecificCode []"
"spark","3","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","6","spark.GenericIntegrationTest.testEchoParam2 [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.GenericIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","4","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","5","spark.MultipleServicesTest.testGetHello [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst []"
"spark","5","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","5","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.RedirectTest.testRedirectAnyDelete [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.FilterTest.testJustFilter []"
"spark","6","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","4","spark.MultipleFiltersTest.testMultipleFilters [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.RedirectTest.testRedirectAnyPutWithSpecificCode [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml []"
"spark","7","spark.http.matching.Body.serializeTo(HttpServletResponse,SerializerChain,HttpServletRequest)","2","spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.testPostProcessBodyForFinally []"
"spark","8","spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)","2","spark.StaticFilesMemberTest.testStaticFilePageHtml [],spark.GenericIntegrationTest.testGetBinaryHi []"
"spark","9","spark.Service.stop()","1","spark.GenericIntegrationTest.testSessionReset []"
"spark","10","spark.embeddedserver.EmbeddedServers.initialize()","1","spark.RedirectTest.testRedirectPost []"
"spark","11","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","1","spark.GenericSecureIntegrationTest.testPatch []"
"spark","12","spark.utils.StringUtils.delimitedListToStringArray(String,String,String)","1","spark.GenericIntegrationTest.testParamWithEncodedSlash []"
"spark","13","spark.embeddedserver.EmbeddedServers.create(Object,Routes,StaticFilesConfiguration,boolean)","1","spark.GenericIntegrationTest.testEchoParam1 []"
"spark","14","spark.utils.StringUtils.replace(String,String,String)","1","spark.GenericIntegrationTest.testParamAndWild []"
"spark","15","spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish()","1","spark.ResponseBodyTest.testPORAKATIKAOKAO []"
"spark","16","spark.route.Routes.add(HttpMethod,String,String,Object)","1","spark.staticfiles.StaticFilesTest.testExceptionMapping404 []"
"spark","17","spark.utils.urldecoding.UrlDecode.path(String,int,int)","1","spark.GenericIntegrationTest.testParamWithEncodedSlash []"
"spark","18","spark.Service.initializeRouteMatcher()","1","spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader []"
"spark","19","spark.route.Routes.findTargetWithGivenAcceptType(List<RouteEntry>,String)","1","spark.RedirectTest.testRedirectAnyGet []"
"spark","20","spark.Routable.post(String,Route)","1","spark.RedirectTest.testRedirectAnyPost []"
"spark","21","spark.utils.ResourceUtils.toURI(String)","1","spark.staticfiles.StaticFilesTest.testDirectoryTraversalProtectionLocal []"
"spark","22","spark.utils.StringUtils.collectionToDelimitedString(Collection<?>,String)","1","spark.servlet.ServletTest.testGetHiAfterFilter []"
"spark","23","spark.Service.addFilter(HttpMethod,FilterImpl)","1","spark.GenericSecureIntegrationTest.testHiHead []"
"spark","24","spark.Routable.get(String,Route)","1","spark.StaticFilesMemberTest.testExceptionMapping404 []"
