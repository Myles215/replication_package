"Project","Rank","Method","Count","Tests"
"Project","MethodIndex","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,boolean)","18","spark.embeddedserver.EmbeddedServersTest.testAdd_whenConfigureRoutes_createsCustomServer [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.GenericIntegrationTest.testHiHead [],spark.GenericIntegrationTest.testSessionReset [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.StaticFilesMemberTest.testStaticFileHeaders [],spark.BooksIntegrationTest.canDeleteBook [],spark.MultipleFiltersTest.testMultipleFilters [],spark.RedirectTest.testRedirectAnyGetWithSpecificCode [],spark.MultipleServicesTest.testGetHello [],spark.GenericIntegrationTest.testXForwardedFor [],spark.staticfiles.StaticFilesTest.testMimeTypes [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericIntegrationTest.testEchoParam3 [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.RedirectTest.testRedirectDeleteWithSpecificCode []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","6","spark.MultipleServicesTest.testGetHello [],spark.BooksIntegrationTest.canCreateBook [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.GenericIntegrationTest.testParamAndWild [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst []"
"spark","3","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","5","spark.GenericIntegrationTest.testGetByteBufferHi [],spark.GenericIntegrationTest.testUnauthorized [],spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericIntegrationTest.testGetHi []"
"spark","4","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","3","spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create [],spark.embeddedserver.jetty.SocketConnectorFactoryTest.testCreateSocketConnector [],spark.StaticFilesMemberTest.testExceptionMapping404 []"
"spark","5","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","3","spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.RedirectTest.testRedirectGet [],spark.GenericSecureIntegrationTest.testGetRoot []"
"spark","6","spark.staticfiles.StaticFilesConfiguration.configureExternal(String)","2","spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.GenericIntegrationTest.testNotFoundExceptionMapper []"
"spark","7","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","2","spark.servlet.ServletTest.testEchoParam1 [],spark.RedirectTest.testRedirectDelete []"
"spark","8","spark.resource.AbstractFileResolvingResource.getFile()","1","spark.servlet.ServletTest.testPost []"
"spark","9","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","1","spark.GenericSecureIntegrationTest.testPatch []"
"spark","10","spark.embeddedserver.EmbeddedServers.initialize()","1","spark.staticfiles.StaticFilesTest.testDirectoryTraversalProtectionLocal []"
"spark","11","spark.Request.changeMatch(RouteMatch)","1","spark.MultipleServicesTest.testGetHello []"
"spark","12","spark.resource.ClassPathResource.isInvalidPath(String)","1","spark.servlet.ServletTest.testGetRoot []"
"spark","13","spark.utils.MimeParse.bestMatch(Collection<String>,String)","1","spark.BooksIntegrationTest.canCreateBook []"
"spark","14","spark.Redirect.redirectRoute(String,Status)","1","spark.RedirectTest.testRedirectAnyPost []"
"spark","15","spark.Service.initializeRouteMatcher()","1","spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond []"
"spark","16","spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)","1","spark.GenericIntegrationTest.testEchoParamWithMaj []"
"spark","17","spark.Routable.get(String,Route)","1","spark.RedirectTest.testRedirectAnyGet []"
"spark","18","spark.route.Routes.create()","1","spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml []"
"spark","19","spark.Request.getParams(List<String>,List<String>)","1","spark.GenericSecureIntegrationTest.testEchoParamWithMaj []"
"spark","20","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","1","spark.MultipleServicesTest.testGetRedirectedHi []"
"spark","21","spark.Service.getPaths()","1","spark.StaticFilesMemberTest.testStaticFileCssStyleCss []"
"spark","22","spark.route.Routes.add(HttpMethod,String,String,Object)","1","spark.GenericIntegrationTest.testExceptionMapper []"
"spark","23","spark.Service.webSocket(String,Class<?>)","1","spark.GenericIntegrationTest.testGetByteBufferHi []"
"spark","24","spark.staticfiles.StaticFilesFolder.externalConfiguredTo(String)","1","spark.StaticFilesMemberTest.testExceptionMapping404 []"
"spark","25","spark.Service.addRoute(HttpMethod,RouteImpl)","1","spark.RedirectTest.testRedirectGetWithSpecificCode []"
"spark","26","spark.route.Routes.find(HttpMethod,String,String)","1","spark.customerrorpages.CustomErrorPagesTest.testGetHi []"
"spark","27","spark.Service.addFilter(HttpMethod,FilterImpl)","1","spark.GenericIntegrationTest.paths_should_be_nestable []"
"spark","28","spark.resource.ExternalResource.exists()","1","spark.GenericIntegrationTest.testNotFoundExceptionMapper []"
