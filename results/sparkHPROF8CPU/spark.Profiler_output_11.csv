"Project","Rank","Method","Count","Tests"
"Project","MethodIndex","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,boolean)","18","spark.StaticFilesMemberTest.testExternalStaticFile [],spark.GenericIntegrationTest.testParamAndWild [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.RedirectTest.testRedirectPutWithSpecificCode [],spark.MultipleServicesTest.testGetHello [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.GzipTest.testStaticFileCssStyleCss [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.RedirectTest.testRedirectGet [],spark.GenericIntegrationTest.testEchoParam3 [],spark.GzipTest.checkGzipCompression [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","5","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst []"
"spark","3","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","4","spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.testPatch [],spark.GzipTest.checkGzipCompression []"
"spark","4","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","3","spark.GenericIntegrationTest.testPost [],spark.GenericIntegrationTest.testUnauthorized [],spark.GenericIntegrationTest.testParamWithEncodedSlash []"
"spark","5","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","3","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst []"
"spark","6","spark.staticfiles.StaticFilesConfiguration.configure(String)","2","spark.GenericIntegrationTest.testGetInputStreamHi [],spark.GenericIntegrationTest.testSplatWithEncodedSlash []"
"spark","7","spark.route.Routes.add(HttpMethod,String,String,Object)","2","spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.BooksIntegrationTest.canUpdateBook []"
"spark","8","spark.staticfiles.StaticFilesConfiguration.consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)","2","spark.staticfiles.StaticFilesTest.testMimeTypes [],spark.StaticFilesMemberTest.testStaticFileExpireTime []"
"spark","9","spark.staticfiles.StaticFilesConfiguration.configureExternal(String)","1","spark.servlet.ServletTest.testPost []"
"spark","10","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","1","spark.GenericSecureIntegrationTest.testPatch []"
"spark","11","spark.embeddedserver.jetty.SocketConnectorFactory.initializeConnector(ServerConnector,String,int)","1","spark.StaticFilesMemberTest.testStaticFilePageHtml []"
"spark","12","spark.resource.ExternalResourceHandler.getResource(String)","1","spark.GenericIntegrationTest.testGetBinaryHi []"
"spark","13","spark.servlet.SparkFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","1","spark.servlet.ServletTest.testEchoParam2 []"
"spark","14","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","1","spark.GenericIntegrationTest.testNotFound []"
"spark","15","spark.utils.MimeParse.bestMatch(Collection<String>,String)","1","spark.RedirectTest.testRedirectAnyGet []"
"spark","16","spark.Service.webSocket(String,Class<?>)","1","spark.GenericIntegrationTest.testStaticFile []"
"spark","17","spark.resource.UriPath.canonical(String)","1","spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","18","spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)","1","spark.RedirectTest.testRedirectAnyPut []"
"spark","19","spark.route.Routes.findTargetWithGivenAcceptType(List<RouteEntry>,String)","1","spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml []"
"spark","20","spark.Service.initializeRouteMatcher()","1","spark.GzipTest.testStaticFileCssStyleCss []"
"spark","21","spark.resource.ClassPathResourceHandler.getResource(String)","1","spark.GenericIntegrationTest.testUnauthorized []"
"spark","22","spark.Service.addFilter(HttpMethod,FilterImpl)","1","spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","23","spark.serialization.Serializer.processElement(OutputStream,Object)","1","spark.ResponseBodyTest.testMAXIME []"
