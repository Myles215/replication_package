"Project","Rank","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","64","spark.RedirectTest.testRedirectAnyPut [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create [],spark.RequestTest.testQueryParamsValues_whenParamExists [],spark.RequestTest.testContextPath [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.RedirectTest.testRedirectAnyGet [],spark.GenericSecureIntegrationTest.testNotFound [],spark.staticfiles.StaticFilesTest.testMimeTypes [],spark.StaticFilesMemberTest.testStaticFileMjs [],spark.GzipTest.checkGzipCompression [],spark.GenericSecureIntegrationTest.testPost [],spark.RequestTest.testProtocol [],spark.GenericIntegrationTest.testSessionReset [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal [],spark.RequestTest.testCookie_whenCookiesAreNotPresent [],spark.BooksIntegrationTest.canGetUpdatedBook [],spark.StaticFilesMemberTest.testStaticFilePageHtml [],spark.RequestTest.testQueryParamsValues_whenParamDoesNotExists [],spark.GenericSecureIntegrationTest.testGetHi [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.GenericIntegrationTest.testParamAndWild [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.GenericIntegrationTest.testGetRoot [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testInheritanceExceptionMapper [],spark.GenericIntegrationTest.testNotFound [],spark.RequestTest.testSessionNpParams_afterSessionInvalidate [],spark.GenericIntegrationTest.testPost [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.GenericSecureIntegrationTest.testPatch [],spark.GenericSecureIntegrationTest.testHiHead [],spark.staticfiles.StaticFilesTest.testDirectoryTraversalProtectionLocal [],spark.GenericIntegrationTest.path_should_prefix_routes [],spark.ResponseBodyTest.testHELLO [],spark.BooksIntegrationTest.canCreateBook [],spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.RedirectTest.testRedirectAnyGetWithSpecificCode [],spark.MultipleServicesTest.testGetHello [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.GenericIntegrationTest.testPatch [],spark.BooksIntegrationTest.canGetBook []"
"spark","2","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,ExceptionMapper,boolean)","26","spark.GenericIntegrationTest.testParamAndWild [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.RequestTest.testSession_whenCreateIsTrue_afterSessionInvalidate [],spark.GenericSecureIntegrationTest.testEchoParam1 [],spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.MultipleFiltersTest.testMultipleFilters [],spark.RedirectTest.testRedirectAnyGet [],spark.RequestTest.testIp [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.StaticFilesMemberTest.testStaticFileMjs [],spark.GenericSecureIntegrationTest.testPatch [],spark.GenericSecureIntegrationTest.testHiHead [],spark.GenericIntegrationTest.path_should_prefix_routes [],spark.ResponseBodyTest.testSPECIAL [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.RequestTest.testContentType [],spark.RedirectTest.testRedirectGetWithSpecificCode [],spark.RedirectTest.testRedirectPost [],spark.BooksIntegrationTest.canDeleteBook [],spark.FilterTest.testJustFilter [],spark.BooksIntegrationTest.canGetUpdatedBook [],spark.MultipleServicesTest.testGetAllRoutesFromBothServices [],spark.InitExceptionHandlerTest.testInitExceptionHandler []"
"spark","3","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","19","spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreadsOnly_thenUseDefaultMinThreadsAndTimeout [],spark.ResponseBodyTest.testHELLO [],spark.RedirectTest.testRedirectGetWithSpecificCode [],spark.BooksIntegrationTest.canListBooks [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_useDefaults [],spark.RequestTest.shouldBeAbleToGetTheMatchedPath [],spark.RequestTest.testContextPath [],spark.RedirectTest.testRedirectPost [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreads_isLessThanDefaultMinThreads [],spark.GenericIntegrationTest.testInheritanceExceptionMapper [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.MultipleFiltersTest.testMultipleFilters [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.RequestTest.testPathInfo [],spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml [],spark.GenericSecureIntegrationTest.testPatch [],spark.RequestTest.testURI [],spark.ResponseBodyTest.testMAXIME []"
"spark","4","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","12","spark.GenericIntegrationTest.testHiHead [],spark.GenericIntegrationTest.testSessionReset [],spark.GenericIntegrationTest.testEchoParam2 [],spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.GenericIntegrationTest.testGetRoot [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.GenericIntegrationTest.testSplatWithEncodedSlash [],spark.GenericIntegrationTest.testTypedExceptionMapper [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware []"
"spark","5","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","10","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.StaticFilesMemberTest.testExternalStaticFile [],spark.RequestTest.queryParamOrDefault_shouldReturnDefault_whenQueryParamIsNull [],spark.RequestTest.testCookies_whenCookiesArePresent [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.RequestTest.testSession_2times [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","6","spark.embeddedserver.EmbeddedServers.initialize()","10","spark.MultipleServicesTest.testGetHello [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.UnmapTest.testUnmap [],spark.GenericIntegrationTest.testEchoParam3 [],spark.RequestTest.testContentLength [],spark.RequestTest.testURI [],spark.RequestTest.testContextPath [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.ResponseBodyTest.testMAXIME [],spark.BooksIntegrationTest.wontFindBook []"
"spark","7","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","9","spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.MultipleFiltersTest.testMultipleFilters [],spark.GenericIntegrationTest.testPost [],spark.RedirectTest.testRedirectAnyGet [],spark.CookiesIntegrationTest.testRemoveCookie [],spark.RedirectTest.testRedirectGetWithSpecificCode [],spark.GenericIntegrationTest.testExceptionMapper [],spark.BooksIntegrationTest.canUpdateBook [],spark.embeddedserver.jetty.SocketConnectorFactoryTest.testCreateSocketConnector []"
"spark","8","spark.http.matching.Body.serializeTo(HttpServletResponse,SerializerChain,HttpServletRequest)","9","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.CookiesIntegrationTest.testRemoveCookie [],spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.RequestTest.shouldBeAbleToGetTheMatchedPath [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute [],spark.GenericSecureIntegrationTest.testXForwardedFor []"
"spark","9","spark.Service.getPaths()","6","spark.RedirectTest.testRedirectAnyGetWithSpecificCode [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.RequestTest.testQueryParamsValues_whenParamDoesNotExists [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.BooksIntegrationTest.canGetBook []"
"spark","10","spark.embeddedserver.jetty.websocket.WebSocketHandlerWrapper.validateHandlerClass(Class<?>)","4","spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.GenericIntegrationTest.testNotFound []"
"spark","11","spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish()","4","spark.BooksIntegrationTest.canGetUpdatedBook [],spark.BooksIntegrationTest.canCreateBook [],spark.GenericIntegrationTest.testEchoParam1 [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj []"
"spark","12","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","3","spark.GenericSecureIntegrationTest.testGetRoot [],spark.GenericSecureIntegrationTest.testPatch []"
"spark","13","spark.utils.SparkUtils.convertRouteToList(String)","2","spark.servlet.ServletTest.testEchoParam1 [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName []"
"spark","14","spark.staticfiles.StaticFilesConfiguration.consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)","2","spark.servlet.ServletTest.testStaticWelcomeResource [],spark.StaticFilesMemberTest.testExternalStaticFile []"
"spark","15","spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)","2","spark.ResponseBodyTest.testSPECIAL [],spark.BodyAvailabilityTest.testPost []"
"spark","16","spark.Service.initiateStop()","2","spark.staticfiles.DisableMimeGuessingTest.testMimeTypes [],spark.GenericIntegrationTest.testNotFoundExceptionMapper []"
"spark","17","spark.Response.type()","1","spark.ResponseTest.testGetType []"
"spark","18","spark.Service.awaitInitialization()","1","spark.RequestTest.testSessionNoParams_whenSessionIsNull []"
"spark","19","spark.utils.StringUtils.collectionToDelimitedString(Collection<?>,String,String,String)","1","spark.GenericIntegrationTest.testGetByteBufferHi []"
"spark","20","spark.utils.MimeParse.toFloat(String,float)","1","spark.BooksIntegrationTest.canListBooks []"
"spark","21","spark.Redirect.redirectRoute(String,Status)","1","spark.RedirectTest.testRedirectPostWithSpecificCode []"
"spark","22","spark.resource.ClassPathResource.exists()","1","spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss []"
"spark","23","spark.resource.ExternalResource.getURL()","1","spark.GenericIntegrationTest.testTypedExceptionMapper []"
