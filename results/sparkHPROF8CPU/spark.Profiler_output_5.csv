"Project","Rank","Method","Count","Tests"
"Project","MethodIndex","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,boolean)","20","spark.GenericSecureIntegrationTest.testHiHead [],spark.ResponseBodyTest.testSPECIAL [],spark.ResponseBodyTest.testHELLO [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.RedirectTest.testRedirectPost [],spark.BooksIntegrationTest.canDeleteBook [],spark.customerrorpages.CustomErrorPagesTest.testGetHi [],spark.MultipleServicesTest.testGetHello [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.GenericIntegrationTest.testUnauthorized [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.GenericIntegrationTest.testPatch [],spark.CookiesIntegrationTest.testCreateCookie [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.GenericIntegrationTest.testPathParamsWithPlusSign [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","9","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.GenericIntegrationTest.testHiHead [],spark.staticfiles.DisableMimeGuessingTest.testMimeTypes [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericIntegrationTest.testEchoParam3 [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.BooksIntegrationTest.canGetBook [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware []"
"spark","3","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","5","spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.MultipleServicesTest.testGetHello [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.BooksIntegrationTest.wontFindBook []"
"spark","4","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","4","spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware []"
"spark","5","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","2","spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreadOnly_thenUseDefaultMinThreadAndTimeout [],spark.MultipleServicesTest.testGetRedirectedHi []"
"spark","6","spark.Routable.get(String,Route)","2","spark.MultipleServicesTest.testGetRedirectedHi [],spark.staticfiles.StaticFilesTest.testExternalStaticFile []"
"spark","7","spark.Request.getParams(List<String>,List<String>)","1","spark.servlet.ServletTest.testPost []"
"spark","8","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","1","spark.GenericSecureIntegrationTest.testGetRoot []"
"spark","9","spark.staticfiles.StaticFilesConfiguration.configureExternal(String)","1","spark.StaticFilesMemberTest.testStaticFileHeaders []"
"spark","10","spark.http.matching.Routes.execute(RouteContext)","1","spark.ResponseBodyTest.testSPECIAL []"
"spark","11","spark.staticfiles.StaticFilesFolder.localConfiguredTo(String)","1","spark.GenericIntegrationTest.routes_should_be_accept_type_aware []"
"spark","12","spark.servlet.SparkFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","1","spark.servlet.ServletTest.testHiHead []"
"spark","13","spark.Routable.get(String,TemplateViewRoute,TemplateEngine)","1","spark.GenericIntegrationTest.testWebSocketConversation []"
"spark","14","spark.Routable.get(String,String,Route)","1","spark.GenericIntegrationTest.testSessionReset []"
"spark","15","spark.Routable.before(String,Filter)","1","spark.GenericIntegrationTest.path_should_prefix_routes []"
"spark","16","spark.staticfiles.MimeType.shouldGuess()","1","spark.servlet.ServletTest.testStaticWelcomeResource []"
"spark","17","spark.Redirect.get(String,String,Status)","1","spark.RedirectTest.testRedirectGetWithSpecificCode []"
"spark","18","spark.Service.externalStaticFileLocation(String)","1","spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName []"
"spark","19","spark.route.Routes.routeWithGivenAcceptType(String)","1","spark.servlet.ServletTest.testUnauthorized []"
