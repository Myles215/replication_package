"Project","Rank","Method","Count","Tests"
"Project","MethodIndex","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,boolean)","18","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testParamWithEncodedSlash [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.CookiesIntegrationTest.testEmptyCookies [],spark.MultipleFiltersTest.testMultipleFilters [],spark.RedirectTest.testRedirectAnyGetWithSpecificCode [],spark.MultipleServicesTest.testGetHello [],spark.GzipTest.testStaticFileCssStyleCss [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.RedirectTest.testRedirectGet [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.BooksIntegrationTest.canGetBook [],spark.RedirectTest.testRedirectDeleteWithSpecificCode []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","5","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.MultipleServicesTest.testGetHello [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst []"
"spark","3","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","4","spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.staticfiles.DisableMimeGuessingTest.testCustomMimeType [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.StaticFilesMemberTest.testStaticFileCssStyleCss []"
"spark","4","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","4","spark.staticfiles.StaticFilesTest.testMimeTypes [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.staticfiles.StaticFilesTest.testExternalStaticFile [],spark.GenericIntegrationTest.testNotFound []"
"spark","5","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","4","spark.MultipleServicesTest.testGetHello [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName []"
"spark","6","spark.Service.getPaths()","3","spark.GenericSecureIntegrationTest.testUnauthorized [],spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml []"
"spark","7","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","3","spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.GenericIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testSplatWithEncodedSlash []"
"spark","8","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","2","spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst []"
"spark","9","spark.Service.initializeRouteMatcher()","2","spark.StaticFilesFromArchiveTest.testCss [],spark.GenericSecureIntegrationTest.testEchoParam1 []"
"spark","10","spark.Request.getParams(List<String>,List<String>)","1","spark.BooksIntegrationTest.canGetUpdatedBook []"
"spark","11","spark.staticfiles.StaticFilesConfiguration.configure(String)","1","spark.MultipleServicesTest.testGetHello []"
"spark","12","spark.staticfiles.StaticFilesConfiguration.configureExternal(String)","1","spark.GenericIntegrationTest.testExternalStaticFile []"
"spark","13","spark.resource.AbstractFileResolvingResource.getFile()","1","spark.servlet.ServletTest.testStaticResource []"
"spark","14","spark.embeddedserver.EmbeddedServers.initialize()","1","spark.GenericIntegrationTest.paths_should_be_nestable []"
"spark","15","spark.Request.changeMatch(RouteMatch)","1","spark.RequestTest.testCookies_whenCookiesArePresent []"
"spark","16","spark.Routable.patch(String,Route)","1","spark.GenericIntegrationTest.testGetByteBufferHi []"
"spark","17","spark.utils.SparkUtils.convertRouteToList(String)","1","spark.RequestTest.testHeaders []"
"spark","18","spark.staticfiles.StaticFilesFolder.localConfiguredTo(String)","1","spark.GenericIntegrationTest.testGetHi []"
"spark","19","spark.route.Routes.add(HttpMethod,String,String,Object)","1","spark.embeddedserver.EmbeddedServersTest.testAdd_whenConfigureRoutes_createsCustomServer []"
"spark","20","spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)","1","spark.ResponseBodyTest.testPORAKATIKAOKAO []"
"spark","21","spark.staticfiles.StaticFilesConfiguration.consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)","1","spark.staticfiles.DisableMimeGuessingTest.testCustomMimeType []"
"spark","22","spark.route.Routes.find(HttpMethod,String,String)","1","spark.GenericSecureIntegrationTest.testGetRoot []"
