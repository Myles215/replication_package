"Project","Rank","Method","Count","Tests"
"Project","MethodIndex","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,boolean)","24","spark.GenericSecureIntegrationTest.testHiHead [],spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml [],spark.CookiesIntegrationTest.testRemoveCookie [],spark.GenericIntegrationTest.testSessionReset [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.StaticFilesMemberTest.testStaticFileExpireTime [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.StaticFilesMemberTest.testExceptionMapping404 [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.MultipleServicesTest.testGetHello [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.GenericSecureIntegrationTest.testNotFound [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.RedirectTest.testRedirectAnyPost [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericSecureIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.BooksIntegrationTest.canUpdateBook [],spark.CookiesIntegrationTest.testCreateCookie [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","6","spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withThreadPool [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.GenericIntegrationTest.testGetHi [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute []"
"spark","3","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","6","spark.ResponseBodyTest.testHELLO [],spark.GenericIntegrationTest.testUnauthorized [],spark.GenericIntegrationTest.testParamAndWild [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.StaticFilesFromArchiveTest.testCss []"
"spark","4","spark.staticfiles.StaticFilesConfiguration.configure(String)","3","spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.GenericIntegrationTest.testGetHi [],spark.servlet.ServletTest.testUnauthorized []"
"spark","5","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","3","spark.customerrorpages.CustomErrorPagesTest.testGetHi [],spark.GenericIntegrationTest.testParamAndWild [],spark.GenericIntegrationTest.testPostProcessBodyForFinally []"
"spark","6","spark.Service.getPaths()","2","spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute [],spark.FilterTest.testJustFilter []"
"spark","7","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","2","spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.GenericIntegrationTest.testPostProcessBodyForFinally []"
"spark","8","spark.Service.initializeRouteMatcher()","2","spark.BooksIntegrationTest.canGetUpdatedBook [],spark.GenericSecureIntegrationTest.testHiHead []"
"spark","9","spark.Routable.get(String,Route)","2","spark.MultipleServicesTest.testGetRedirectedHi [],spark.StaticFilesMemberTest.testStaticFileCssStyleCss []"
"spark","10","spark.Request.getParams(List<String>,List<String>)","1","spark.RequestTest.testSession_whenCreateIsFalse []"
"spark","11","spark.http.matching.GeneralError.modify(HttpServletRequest,HttpServletResponse,Body,RequestWrapper,ResponseWrapper,Exception)","1","spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute []"
"spark","12","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","1","spark.GenericSecureIntegrationTest.testXForwardedFor []"
"spark","13","spark.staticfiles.StaticFilesConfiguration.configureExternal(String)","1","spark.GenericIntegrationTest.testGetRoot []"
"spark","14","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","1","spark.GenericIntegrationTest.testPathParamsWithPlusSign []"
"spark","15","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","1","spark.RedirectTest.testRedirectPostWithSpecificCode []"
"spark","16","spark.Routable.post(String,Route)","1","spark.BooksIntegrationTest.canGetBook []"
