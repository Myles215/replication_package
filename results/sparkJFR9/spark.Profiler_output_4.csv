"Project","Rank","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","49","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.RequestTest.testSession_whenCreateIsTrue [],spark.GenericIntegrationTest.testGetRoot [],spark.GenericIntegrationTest.testParamWithEncodedSlash [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml [],spark.GenericIntegrationTest.testInheritanceExceptionMapper [],spark.BooksIntegrationTest.wontFindBook [],spark.RedirectTest.testRedirectPutWithSpecificCode [],spark.CookiesIntegrationTest.testEmptyCookies [],spark.customerrorpages.CustomErrorPagesTest.testGetHi [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.RequestTest.testScheme [],spark.MultipleFiltersTest.testMultipleFilters [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.GenericSecureIntegrationTest.testNotFound [],spark.GzipTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.testUnauthorized [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.GenericIntegrationTest.testEchoParam3 [],spark.StaticFilesMemberTest.testStaticFileMjs [],spark.RequestTest.testUserAgent [],spark.CookiesIntegrationTest.testCreateCookie [],spark.ResponseBodyTest.testMAXIME [],spark.RequestTest.testHost [],spark.RequestTest.testSession_2times [],spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.RedirectTest.testRedirectGetWithSpecificCode [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.RedirectTest.testRedirectAnyDelete [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally [],spark.RequestTest.testQueryParams [],spark.FilterTest.testJustFilter [],spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.RequestTest.queryParamShouldBeParsedAsHashMap [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.BooksIntegrationTest.canGetBook [],spark.GenericSecureIntegrationTest.testXForwardedFor []"
"spark","2","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,ExceptionMapper,boolean)","35","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.CookiesIntegrationTest.testRemoveCookie [],spark.RedirectTest.testRedirectAnyPut [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.GenericIntegrationTest.testParamWithEncodedSlash [],spark.GenericIntegrationTest.testSplatWithEncodedSlash [],spark.StaticFilesMemberTest.testStaticFileCssStyleCss [],spark.RedirectTest.testRedirectPutWithSpecificCode [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.RequestTest.testSession_whenCreateIsFalse [],spark.GenericSecureIntegrationTest.testNotFound [],spark.GenericIntegrationTest.testXForwardedFor [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withoutHttpOnly [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.RequestTest.testCookies_whenCookiesArePresent [],spark.GenericIntegrationTest.testGetHi [],spark.CookiesIntegrationTest.testCreateCookie [],spark.RedirectTest.testRedirectAnyPutWithSpecificCode [],spark.RequestTest.shouldBeAbleToGetTheServletPath [],spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.BooksIntegrationTest.canCreateBook [],spark.RequestTest.testHeaders [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.BodyAvailabilityTest.testPost [],spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.RequestTest.testCookie_whenCookiesAreNotPresent [],spark.MultipleServicesTest.testGetHello [],spark.RedirectTest.testRedirectGet [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericIntegrationTest.testPatch [],spark.GenericIntegrationTest.testPathParamsWithPlusSign []"
"spark","3","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","21","spark.staticfiles.StaticFilesTest.testDirectoryTraversalProtectionLocal [],spark.BooksIntegrationTest.canCreateBook [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.RedirectTest.testRedirectAnyDelete [],spark.BooksIntegrationTest.wontFindBook [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.MultipleFiltersTest.testMultipleFilters [],spark.RedirectTest.testRedirectAnyGet [],spark.GenericIntegrationTest.testEchoParam1 [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withoutHttpOnly [],spark.RedirectTest.testRedirectAnyPost [],spark.RequestTest.testPathInfo [],spark.RedirectTest.testRedirectGet [],spark.RequestTest.queryParamOrDefault_shouldReturnQueryParam_whenQueryParamExists [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.RedirectTest.testRedirectAnyPutWithSpecificCode [],spark.RequestTest.testHost [],spark.GenericSecureIntegrationTest.testPost []"
"spark","4","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","17","spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreadsOnly_thenUseDefaultMinThreadsAndTimeout [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.RequestTest.testHeaders [],spark.RedirectTest.testRedirectAnyPut [],spark.BooksIntegrationTest.canListBooks [],spark.GenericIntegrationTest.testGetRoot [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.RequestTest.testContentLength [],spark.StaticFilesMemberTest.testStaticFileCssStyleCss [],spark.StaticFilesMemberTest.testStaticFilePageHtml [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.CookiesIntegrationTest.testCreateCookie [],spark.GzipTest.checkGzipCompression [],spark.GenericSecureIntegrationTest.testPost [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","5","spark.http.matching.Body.serializeTo(HttpServletResponse,SerializerChain,HttpServletRequest)","16","spark.staticfiles.StaticFilesTest.testDirectoryTraversalProtectionLocal [],spark.ResponseBodyTest.testSPECIAL [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.BooksIntegrationTest.canCreateBook [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.RedirectTest.testRedirectPut [],spark.BooksIntegrationTest.wontFindBook [],spark.GenericSecureIntegrationTest.testEchoParam1 [],spark.BooksIntegrationTest.canGetUpdatedBook [],spark.customerrorpages.CustomErrorPagesTest.testGetHi [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.servlet.ServletTest.testEchoParam2 [],spark.MultipleFiltersTest.testMultipleFilters [],spark.ResponseBodyTest.testPORAKATIKAOKAO []"
"spark","6","spark.embeddedserver.EmbeddedServers.initialize()","15","spark.staticfiles.StaticFilesTest.testDirectoryTraversalProtectionLocal [],spark.RedirectTest.testRedirectAnyPut [],spark.RequestTest.testContentType [],spark.RequestTest.testCookie_whenCookiesArePresent [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.StaticFilesMemberTest.testStaticFileHeaders [],spark.RequestTest.testSession_whenCreateIsFalse [],spark.GenericIntegrationTest.testEchoParam1 [],spark.GenericIntegrationTest.testUnauthorized [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.RequestTest.testCookies_whenCookiesAreNotPresent [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.CookiesIntegrationTest.testCreateCookie []"
"spark","7","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","10","spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.GenericIntegrationTest.testSessionReset [],spark.GenericIntegrationTest.testUnauthorized [],spark.GenericIntegrationTest.testExceptionMapper [],spark.GenericIntegrationTest.testEchoParam2 [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.GenericIntegrationTest.testPathParamsWithPlusSign []"
"spark","8","spark.Service.getPaths()","8","spark.GenericIntegrationTest.testXForwardedFor [],spark.GenericIntegrationTest.testUnauthorized [],spark.GenericIntegrationTest.testGetRoot [],spark.RequestTest.testQueryParamsValues_whenParamExists [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericSecureIntegrationTest.testPatch [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.RequestTest.testHost []"
"spark","9","spark.staticfiles.StaticFilesConfiguration.consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)","6","spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.StaticFilesMemberTest.testStaticFilePageHtml [],spark.staticfiles.StaticFilesTest.testMimeTypes [],spark.StaticFilesMemberTest.testExternalStaticFile [],spark.StaticFilesMemberTest.testStaticFileMjs [],spark.staticfiles.StaticFilesTest.testExternalStaticFile []"
"spark","10","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","5","spark.RequestTest.testSession_whenCreateIsFalse [],spark.ResponseBodyTest.testHELLO [],spark.BooksIntegrationTest.canListBooks [],spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.RequestTest.testQueryParams []"
"spark","11","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","4","spark.GenericSecureIntegrationTest.testPatch [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.embeddedserver.jetty.SocketConnectorFactoryTest.testCreateSecureSocketConnector []"
"spark","12","spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish()","3","spark.GenericIntegrationTest.testGetInputStreamHi [],spark.CookiesIntegrationTest.testCreateCookie [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj []"
"spark","13","spark.staticfiles.StaticFilesConfiguration.configureExternal(String)","2","spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.staticfiles.DisableMimeGuessingTest.testMimeTypes []"
"spark","14","spark.Response.redirect(String)","2","spark.RedirectTest.testRedirectAnyGet [],spark.RedirectTest.testRedirectPost []"
"spark","15","spark.Service.initiateStop()","2","spark.servlet.ServletTest.testStaticWelcomeResource [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal []"
"spark","16","spark.embeddedserver.jetty.websocket.WebSocketHandlerWrapper.validateHandlerClass(Class<?>)","1","spark.GenericIntegrationTest.testParamWithEncodedSlash []"
"spark","17","spark.route.RouteEntry.toString()","1","spark.CookiesIntegrationTest.testRemoveCookie []"
"spark","18","spark.Service.awaitInitialization()","1","spark.RequestTest.testServletPath []"
"spark","19","spark.Response.cookie(String,String,String,String,int,boolean,boolean)","1","spark.ResponseTest.testCookie_whenNameValueAndMaxAgeParameters_shouldAddCookieSuccessfully []"
"spark","20","spark.resource.ClassPathResource.exists()","1","spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName []"
"spark","21","spark.Redirect.redirectRoute(String,Status)","1","spark.MultipleServicesTest.testGetRedirectedHi []"
"spark","22","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","1","spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml []"
"spark","23","spark.embeddedserver.EmbeddedServers.defaultIdentifier()","1","spark.ServiceTest.testPort_whenInitializedFalse []"
"spark","24","spark.Service.init()","1","spark.RequestTest.queryParamOrDefault_shouldReturnDefault_whenQueryParamIsNull []"
