"Project","Rank","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","73","spark.CookiesIntegrationTest.testRemoveCookie [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.staticfiles.DisableMimeGuessingTest.testCustomMimeType [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.RequestTest.testSession_whenCreateIsTrue [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create [],spark.RequestTest.testContextPath [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.customerrorpages.CustomErrorPagesTest.testGetHi [],spark.GenericSecureIntegrationTest.testNotFound [],spark.RequestTest.testServletPath [],spark.GzipTest.checkGzipCompression [],spark.RequestTest.testSessionNoParams_whenSessionIsNull [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.GenericSecureIntegrationTest.testPost [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.RedirectTest.testRedirectAnyDelete [],spark.RequestTest.testQueryParams [],spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withThreadPool [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.GenericIntegrationTest.testStaticFile [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.GenericIntegrationTest.testPathParamsWithPlusSign [],spark.GenericIntegrationTest.testTypedExceptionMapper [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.GenericIntegrationTest.testParamAndWild [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.testNotFound [],spark.RequestTest.testSessionNpParams_afterSessionInvalidate [],spark.RequestTest.testScheme [],spark.RequestTest.testIp [],spark.GenericIntegrationTest.testExceptionMapper [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withoutHttpOnly [],spark.RequestTest.testPathInfo [],spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml [],spark.GenericIntegrationTest.testEchoParam3 [],spark.GenericSecureIntegrationTest.testPatch [],spark.ResponseBodyTest.testMAXIME [],spark.RequestTest.testSession_2times [],spark.GenericIntegrationTest.path_should_prefix_routes [],spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.embeddedserver.EmbeddedServersTest.testAdd_whenConfigureRoutes_createsCustomServer [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.BooksIntegrationTest.canCreateBook [],spark.RequestTest.testHeaders [],spark.RequestTest.testContentType [],spark.StaticFilesMemberTest.testExceptionMapping404 [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally [],spark.FilterTest.testJustFilter [],spark.RequestTest.testUrl [],spark.MultipleServicesTest.testGetHello [],spark.MultipleServicesTest.testGetAllRoutesFromBothServices [],spark.RequestTest.queryParamShouldBeParsedAsHashMap [],spark.RequestTest.shouldBeAbleToGetTheContextPath [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","2","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,ExceptionMapper,boolean)","26","spark.CookiesIntegrationTest.testRemoveCookie [],spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.RedirectTest.testRedirectAnyPut [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testParamWithEncodedSlash [],spark.GenericIntegrationTest.testInheritanceExceptionMapper [],spark.RequestTest.testSessionNpParams_afterSessionInvalidate [],spark.GzipTest.testStaticFileCssStyleCss [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.RequestTest.testCookies_whenCookiesAreNotPresent [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.staticfiles.StaticFilesTest.testExternalStaticFile [],spark.embeddedserver.EmbeddedServersTest.testAdd_whenConfigureRoutes_createsCustomServer [],spark.GenericIntegrationTest.testHiHead [],spark.RequestTest.testSession_whenCreateIsFalse_afterSessionInvalidate [],spark.RequestTest.testCookie_whenCookiesArePresent [],spark.BooksIntegrationTest.canDeleteBook [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.GenericIntegrationTest.testEchoParam2 [],spark.RequestTest.queryParamOrDefault_shouldReturnQueryParam_whenQueryParamExists [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.GenericIntegrationTest.testStaticFile [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.RequestTest.testRequestMethod [],spark.GenericSecureIntegrationTest.testXForwardedFor []"
"spark","3","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","26","spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.BooksIntegrationTest.canCreateBook [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.RequestTest.testContentType [],spark.RedirectTest.testRedirectGetWithSpecificCode [],spark.RequestTest.testQueryParamsValues_whenParamExists [],spark.embeddedserver.jetty.SocketConnectorFactoryTest.testCreateSocketConnector [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally [],spark.RequestTest.testCookie_whenCookiesAreNotPresent [],spark.BooksIntegrationTest.canDeleteBook [],spark.StaticFilesMemberTest.testStaticFilePageHtml [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.GenericIntegrationTest.testEchoParam1 [],spark.RequestTest.queryParamShouldBeParsedAsHashMap [],spark.RedirectTest.testRedirectAnyPost [],spark.RequestTest.testCookies_whenCookiesArePresent [],spark.RequestTest.testUserAgent [],spark.BooksIntegrationTest.canUpdateBook [],spark.GzipTest.checkGzipCompression [],spark.GenericIntegrationTest.testPathParamsWithPlusSign [],spark.RequestTest.testSessionNoParams_whenSessionIsNull [],spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","4","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","22","spark.GenericIntegrationTest.testHiHead [],spark.GenericIntegrationTest.testGetRoot [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_useDefaults [],spark.GenericIntegrationTest.testParamWithEncodedSlash [],spark.RequestTest.testPort [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreads_isLessThanDefaultMinThreads [],spark.RequestTest.testCookie_whenCookiesAreNotPresent [],spark.BooksIntegrationTest.canDeleteBook [],spark.BooksIntegrationTest.wontFindBook [],spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.GenericIntegrationTest.testPost [],spark.MultipleServicesTest.testGetHello [],spark.RequestTest.queryParamOrDefault_shouldReturnDefault_whenQueryParamIsNull [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.RedirectTest.testRedirectGet [],spark.GenericIntegrationTest.testEchoParam3 [],spark.GenericIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.GzipTest.checkGzipCompression [],spark.RequestTest.testSession_2times [],spark.RequestTest.shouldBeAbleToGetTheServletPath []"
"spark","5","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","13","spark.GenericIntegrationTest.testPost [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.GenericIntegrationTest.testSessionReset [],spark.GenericIntegrationTest.testParamAndWild [],spark.GenericIntegrationTest.testExceptionMapper [],spark.GenericIntegrationTest.testEchoParam2 [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericIntegrationTest.testEchoParam3 [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware []"
"spark","6","spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish()","12","spark.ResponseBodyTest.testHELLO [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.MultipleServicesTest.testGetAllRoutesFromBothServices [],spark.GenericIntegrationTest.testSessionReset [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.GenericIntegrationTest.testEchoParam2 [],spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.GenericSecureIntegrationTest.testXForwardedFor []"
"spark","7","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","9","spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.RequestTest.testSession_whenCreateIsFalse [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.GenericIntegrationTest.testEchoParam2 [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware []"
"spark","8","spark.Service.getPaths()","8","spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.GenericIntegrationTest.testPost [],spark.GzipTest.testStaticFileCssStyleCss [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally []"
"spark","9","spark.http.matching.Body.serializeTo(HttpServletResponse,SerializerChain,HttpServletRequest)","6","spark.GenericSecureIntegrationTest.testHiHead [],spark.RedirectTest.testRedirectAnyGet [],spark.BooksIntegrationTest.canCreateBook [],spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.RedirectTest.testRedirectAnyDelete [],spark.GenericSecureIntegrationTest.testEchoParam2 []"
"spark","10","spark.embeddedserver.jetty.websocket.WebSocketHandlerWrapper.validateHandlerClass(Class<?>)","4","spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.GenericIntegrationTest.testExceptionMapper [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.GenericIntegrationTest.testPathParamsWithPlusSign []"
"spark","11","spark.embeddedserver.EmbeddedServers.initialize()","4","spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.MultipleServicesTest.testGetAllRoutesFromBothServices [],spark.RequestTest.testSession_whenCreateIsTrue [],spark.GenericIntegrationTest.testParamWithEncodedSlash []"
"spark","12","spark.Response.cookie(String,String,String,String,int,boolean,boolean)","4","spark.ResponseTest.testCookie_whenPathNameValueMaxAgeSecuredAndHttpOnlyParameters_shouldAddCookieSuccessfully [],spark.ResponseTest.testCookie_whenPathNameValueMaxAgeAndSecuredParameters_shouldAddCookieSuccessfully [],spark.ResponseTest.testCookie_whenNameValueAndMaxAgeParameters_shouldAddCookieSuccessfully [],spark.CookiesIntegrationTest.testCreateCookie []"
"spark","13","spark.Service.initiateStop()","2","spark.CookiesIntegrationTest.testRemoveCookie [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status []"
"spark","14","spark.resource.ExternalResource.getURL()","2","spark.GenericIntegrationTest.testXForwardedFor [],spark.staticfiles.DisableMimeGuessingTest.testMimeTypes []"
"spark","15","spark.Routable.createRouteImpl(String,Route)","1","spark.CookiesIntegrationTest.testCreateCookie []"
"spark","16","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","1","spark.GenericSecureIntegrationTest.testGetHi []"
"spark","17","spark.RouteImpl.withPrefix(String)","1","spark.GenericIntegrationTest.testStaticFile []"
"spark","18","spark.utils.MimeParse.fitnessAndQualityParsed(String,Collection<ParseResults>)","1","spark.MultipleServicesTest.testGetRedirectedHi []"
"spark","19","spark.Response.redirect(String,int)","1","spark.RedirectTest.testRedirectPutWithSpecificCode []"
"spark","20","spark.resource.ClassPathResource.exists()","1","spark.GenericIntegrationTest.testPostProcessBodyForFinally []"
"spark","21","spark.Service.init()","1","spark.RequestTest.shouldBeAbleToGetTheMatchedPath []"
