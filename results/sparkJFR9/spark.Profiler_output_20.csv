"Project","Rank","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","66","spark.CookiesIntegrationTest.testRemoveCookie [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create [],spark.RedirectTest.testRedirectPut [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml [],spark.BooksIntegrationTest.wontFindBook [],spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.GenericSecureIntegrationTest.testNotFound [],spark.staticfiles.StaticFilesTest.testMimeTypes [],spark.RequestTest.testServletPath [],spark.RedirectTest.testRedirectAnyPutWithSpecificCode [],spark.GzipTest.checkGzipCompression [],spark.GenericSecureIntegrationTest.testPost [],spark.RequestTest.testSession_whenCreateIsFalse_afterSessionInvalidate [],spark.GenericIntegrationTest.testSessionReset [],spark.RequestTest.testCookie_whenCookiesArePresent [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute [],spark.BooksIntegrationTest.canDeleteBook [],spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.RedirectTest.testRedirectPostWithSpecificCode [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withNullThreadPool [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.GenericIntegrationTest.testPathParamsWithPlusSign [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.GenericIntegrationTest.testGetRoot [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testSplatWithEncodedSlash [],spark.GenericIntegrationTest.testNotFound [],spark.RequestTest.testSessionNpParams_afterSessionInvalidate [],spark.RequestTest.testScheme [],spark.GenericIntegrationTest.testXForwardedFor [],spark.GenericIntegrationTest.testUnauthorized [],spark.RequestTest.queryParamOrDefault_shouldReturnDefault_whenQueryParamIsNull [],spark.RequestTest.testPathInfo [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml [],spark.GenericSecureIntegrationTest.testPatch [],spark.ResponseBodyTest.testMAXIME [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.staticfiles.StaticFilesTest.testDirectoryTraversalProtectionLocal [],spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml [],spark.ResponseBodyTest.testSPECIAL [],spark.embeddedserver.EmbeddedServersTest.testAdd_whenConfigureRoutes_createsCustomServer [],spark.ResponseBodyTest.testHELLO [],spark.RedirectTest.testRedirectDelete [],spark.BooksIntegrationTest.canCreateBook [],spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.MultipleServicesTest.testGetHello [],spark.RequestTest.shouldBeAbleToGetTheContextPath [],spark.RequestTest.queryParamOrDefault_shouldReturnQueryParam_whenQueryParamExists [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","2","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,ExceptionMapper,boolean)","27","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.staticfiles.DisableMimeGuessingTest.testCustomMimeType [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.RequestTest.testSession_whenCreateIsTrue_afterSessionInvalidate [],spark.GenericSecureIntegrationTest.testNotFound [],spark.GenericIntegrationTest.testXForwardedFor [],spark.RequestTest.testPathInfo [],spark.RequestTest.testSessionNoParams_whenSessionIsNull [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.GenericIntegrationTest.path_should_prefix_routes [],spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml [],spark.embeddedserver.EmbeddedServersTest.testAdd_whenConfigureRoutes_createsCustomServer [],spark.BooksIntegrationTest.canCreateBook [],spark.StaticFilesMemberTest.testStaticFileHeaders [],spark.RequestTest.testContentLength [],spark.StaticFilesMemberTest.testExceptionMapping404 [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.RequestTest.testUrl [],spark.StaticFilesMemberTest.testStaticFilePageHtml [],spark.RedirectTest.testRedirectAnyGetWithSpecificCode [],spark.RequestTest.testQueryParamsValues_whenParamDoesNotExists [],spark.RequestTest.queryParamOrDefault_shouldReturnQueryParam_whenQueryParamExists [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.GenericIntegrationTest.testPatch [],spark.BooksIntegrationTest.canGetBook []"
"spark","3","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","24","spark.ResponseBodyTest.testSPECIAL [],spark.ResponseBodyTest.testHELLO [],spark.RequestTest.testSession_whenCreateIsFalse_afterSessionInvalidate [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create [],spark.BodyAvailabilityTest.testPost [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.RequestTest.testPort [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml [],spark.BooksIntegrationTest.wontFindBook [],spark.GenericSecureIntegrationTest.testEchoParam1 [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.GenericIntegrationTest.testXForwardedFor [],spark.RedirectTest.testRedirectPostWithSpecificCode [],spark.RedirectTest.testRedirectGet [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericIntegrationTest.testEchoParam3 [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.CookiesIntegrationTest.testCreateCookie [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.RequestTest.testSession_2times []"
"spark","4","spark.embeddedserver.EmbeddedServers.initialize()","14","spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.RequestTest.shouldBeAbleToGetTheMatchedPath [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.CookiesIntegrationTest.testEmptyCookies [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.RequestTest.testUrl [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.GenericIntegrationTest.testEchoParam1 [],spark.RequestTest.testQueryParamsValues_whenParamDoesNotExists [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.RedirectTest.testRedirectGet [],spark.GenericIntegrationTest.testGetHi [],spark.GenericSecureIntegrationTest.testPatch [],spark.GenericSecureIntegrationTest.testXForwardedFor []"
"spark","5","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","12","spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.GenericIntegrationTest.testPost [],spark.GenericIntegrationTest.testXForwardedFor [],spark.GenericIntegrationTest.testParamAndWild [],spark.GenericIntegrationTest.testExceptionMapper [],spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.GenericIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testPatch [],spark.GenericIntegrationTest.testGetBinaryHi []"
"spark","6","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","10","spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreadsOnly_thenUseDefaultMinThreadsAndTimeout [],spark.MultipleServicesTest.testGetHello [],spark.StaticFilesMemberTest.testExternalStaticFile [],spark.GzipTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.testExceptionMapper [],spark.GenericSecureIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testParamWithEncodedSlash [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreads_isLessThanDefaultMinThreads []"
"spark","7","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","8","spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withNullThreadPool [],spark.GzipTest.testStaticFileCssStyleCss [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withoutHttpOnly [],spark.RequestTest.shouldBeAbleToGetTheContextPath [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.CookiesIntegrationTest.testEmptyCookies []"
"spark","8","spark.Service.getPaths()","8","spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.GenericIntegrationTest.testEchoParam1 [],spark.servlet.ServletTest.testStaticResource [],spark.GenericIntegrationTest.testParamAndWild [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.BodyAvailabilityTest.testPost [],spark.GenericSecureIntegrationTest.testPatch [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName []"
"spark","9","spark.http.matching.Body.serializeTo(HttpServletResponse,SerializerChain,HttpServletRequest)","7","spark.GenericSecureIntegrationTest.testHiHead [],spark.servlet.ServletTest.testEchoParam1 [],spark.MultipleServicesTest.testGetHello [],spark.StaticFilesMemberTest.testExternalStaticFile [],spark.BooksIntegrationTest.canListBooks [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.UnmapTest.testUnmap []"
"spark","10","spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish()","7","spark.GenericIntegrationTest.testPost [],spark.CookiesIntegrationTest.testRemoveCookie [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.GenericIntegrationTest.testEchoParam1 [],spark.GenericIntegrationTest.testParamWithEncodedSlash [],spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","11","spark.embeddedserver.jetty.websocket.WebSocketHandlerWrapper.validateHandlerClass(Class<?>)","4","spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally []"
"spark","12","spark.utils.SparkUtils.convertRouteToList(String)","2","spark.staticfiles.StaticFilesTest.testExternalStaticFile [],spark.RequestTest.shouldBeAbleToGetTheServletPath []"
"spark","13","spark.resource.ClassPathResource.exists()","2","spark.servlet.ServletTest.testStaticWelcomeResource [],spark.GenericIntegrationTest.testRuntimeExceptionForDone []"
"spark","14","spark.Response.type(String)","2","spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal []"
"spark","15","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","1","spark.GenericSecureIntegrationTest.testUnauthorized []"
"spark","16","spark.Routable.before(String,Filter)","1","spark.RequestTest.queryParamOrDefault_shouldReturnQueryParam_whenQueryParamExists []"
"spark","17","spark.Routable.createRouteImpl(String,String,Route)","1","spark.GenericIntegrationTest.routes_should_be_accept_type_aware []"
"spark","18","spark.staticfiles.StaticFilesConfiguration.consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)","1","spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml []"
"spark","19","spark.Service.initiateStop()","1","spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss []"
"spark","20","spark.resource.ClassPathResourceHandler.getResource(String)","1","spark.GenericIntegrationTest.testXForwardedFor []"
"spark","21","spark.utils.ResourceUtils.getFile(URL,String)","1","spark.GenericIntegrationTest.testGetInputStreamHi []"
"spark","22","spark.route.Routes.add(HttpMethod,String,String,Object)","1","spark.GenericIntegrationTest.testGetInputStreamHi []"
"spark","23","spark.utils.MimeParse.fitnessAndQualityParsed(String,Collection<ParseResults>)","1","spark.GenericIntegrationTest.testUnauthorized []"
"spark","24","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","1","spark.GenericSecureIntegrationTest.testEchoParam1 []"
"spark","25","spark.Spark.getInstance()","1","spark.BooksIntegrationTest.wontFindBook []"
