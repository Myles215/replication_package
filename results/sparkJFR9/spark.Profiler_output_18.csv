"Project","Rank","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","50","spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.staticfiles.DisableMimeGuessingTest.testCustomMimeType [],spark.GenericIntegrationTest.testParamAndWild [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create [],spark.RequestTest.testQueryParamsValues_whenParamExists [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml [],spark.StaticFilesMemberTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.GenericIntegrationTest.testPost [],spark.RequestTest.testIp [],spark.GenericSecureIntegrationTest.testNotFound [],spark.GenericIntegrationTest.testUnauthorized [],spark.GenericIntegrationTest.testExceptionMapper [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.StaticFilesMemberTest.testStaticFileMjs [],spark.GenericSecureIntegrationTest.testPatch [],spark.CookiesIntegrationTest.testCreateCookie [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.RequestTest.testProtocol [],spark.GenericIntegrationTest.testHiHead [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.RequestTest.shouldBeAbleToGetTheMatchedPath [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.FilterTest.testJustFilter [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withThreadPool [],spark.MultipleServicesTest.testGetHello [],spark.RequestTest.queryParamShouldReturnsParametersFromQueryString [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericIntegrationTest.testPatch [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.RequestTest.testRequestMethod [],spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","2","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,ExceptionMapper,boolean)","28","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.CookiesIntegrationTest.testRemoveCookie [],spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.staticfiles.DisableMimeGuessingTest.testCustomMimeType [],spark.GenericIntegrationTest.testParamAndWild [],spark.RequestTest.testQueryParamsValues_whenParamExists [],spark.RequestTest.testContextPath [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.RedirectTest.testRedirectPut [],spark.GenericIntegrationTest.testInheritanceExceptionMapper [],spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.customerrorpages.CustomErrorPagesTest.testGetHi [],spark.MultipleFiltersTest.testMultipleFilters [],spark.GenericIntegrationTest.testXForwardedFor [],spark.GenericIntegrationTest.testEchoParam3 [],spark.RequestTest.testUserAgent [],spark.GzipTest.checkGzipCompression [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.RequestTest.testSession_2times [],spark.RequestTest.testProtocol [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.BooksIntegrationTest.canCreateBook [],spark.RedirectTest.testRedirectGetWithSpecificCode [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute [],spark.RedirectTest.testRedirectAnyDelete [],spark.UnmapTest.testUnmap [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.GenericIntegrationTest.testWebSocketConversation []"
"spark","3","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","18","spark.GenericIntegrationTest.testSessionReset [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.RequestTest.testContextPath [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally [],spark.GenericIntegrationTest.testInheritanceExceptionMapper [],spark.BooksIntegrationTest.canGetUpdatedBook [],spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.RequestTest.testUrl [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withThreadPool [],spark.RedirectTest.testRedirectAnyGet [],spark.RequestTest.testIp [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.GenericIntegrationTest.testEchoParam2 [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.BooksIntegrationTest.canUpdateBook [],spark.BooksIntegrationTest.canGetBook [],spark.RequestTest.testSession_2times []"
"spark","4","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","11","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.GenericIntegrationTest.testPost [],spark.GenericIntegrationTest.testParamAndWild [],spark.RequestTest.queryParamShouldBeParsedAsHashMap [],spark.GenericSecureIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.BooksIntegrationTest.canUpdateBook [],spark.RedirectTest.testRedirectPost [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.RedirectTest.testRedirectDeleteWithSpecificCode []"
"spark","5","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","8","spark.RequestTest.testUrl [],spark.RequestTest.testCookie_whenCookiesArePresent [],spark.RequestTest.queryParamShouldBeParsedAsHashMap [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal [],spark.GenericIntegrationTest.testSplatWithEncodedSlash [],spark.RedirectTest.testRedirectAnyDelete [],spark.GenericIntegrationTest.testNotFound []"
"spark","6","spark.http.matching.Body.serializeTo(HttpServletResponse,SerializerChain,HttpServletRequest)","8","spark.ResponseBodyTest.testHELLO [],spark.CookiesIntegrationTest.testRemoveCookie [],spark.BooksIntegrationTest.canCreateBook [],spark.RedirectTest.testRedirectAnyPut [],spark.GenericSecureIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testSplatWithEncodedSlash [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","7","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","8","spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.GenericIntegrationTest.testUnauthorized [],spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue []"
"spark","8","spark.embeddedserver.EmbeddedServers.initialize()","7","spark.customerrorpages.CustomErrorPagesTest.testGetHi [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.RedirectTest.testRedirectGet [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally [],spark.RequestTest.shouldBeAbleToGetTheServletPath []"
"spark","9","spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish()","6","spark.BooksIntegrationTest.canGetUpdatedBook [],spark.StaticFilesMemberTest.testStaticFilePageHtml [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.StaticFilesMemberTest.testStaticFileExpireTime [],spark.GenericIntegrationTest.testTypedExceptionMapper [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","10","spark.staticfiles.StaticFilesConfiguration.consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)","3","spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.StaticFilesMemberTest.testStaticFileExpireTime [],spark.staticfiles.StaticFilesTest.testExternalStaticFile []"
"spark","11","spark.Service.getPaths()","3","spark.customerrorpages.CustomErrorPagesTest.testGetHi [],spark.RequestTest.testRequestMethod [],spark.RequestTest.testSession_2times []"
"spark","12","spark.resource.ClassPathResource.exists()","2","spark.servlet.ServletTest.testGetHiAfterFilter [],spark.GenericIntegrationTest.testGetRoot []"
"spark","13","spark.embeddedserver.jetty.websocket.WebSocketHandlerWrapper.validateHandlerClass(Class<?>)","2","spark.GenericIntegrationTest.testEchoParam1 [],spark.ServiceTest.testWebSocket_whenInitializedTrue_thenThrowIllegalStateException []"
"spark","14","spark.Response.cookie(String,String,String,String,int,boolean,boolean)","2","spark.ResponseTest.testCookie_whenPathNameValueMaxAgeSecuredAndHttpOnlyParameters_shouldAddCookieSuccessfully [],spark.ResponseTest.testCookie_whenPathNameValueMaxAgeAndSecuredParameters_shouldAddCookieSuccessfully []"
"spark","15","spark.staticfiles.DirectoryTraversal.unixifyPath(String)","1","spark.servlet.ServletTest.testExternalStaticFile []"
"spark","16","spark.resource.AbstractFileResolvingResource.isReadable()","1","spark.StaticFilesMemberTest.testStaticFilePageHtml []"
"spark","17","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","1","spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","18","spark.Routable.createRouteImpl(String,String,Route)","1","spark.GenericIntegrationTest.paths_should_be_very_nestable []"
"spark","19","spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)","1","spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute []"
"spark","20","spark.resource.ExternalResource.getURL()","1","spark.GenericIntegrationTest.testInheritanceExceptionMapper []"
"spark","21","spark.Service.init()","1","spark.RequestTest.testSession_whenCreateIsTrue_afterSessionInvalidate []"
"spark","22","spark.staticfiles.StaticFilesConfiguration.configureExternal(String)","1","spark.GenericIntegrationTest.testStaticFile []"
"spark","23","spark.Service.awaitInitialization()","1","spark.BooksIntegrationTest.canGetBook []"
"spark","24","spark.servlet.SparkFilter.getApplications(FilterConfig)","1","spark.servlet.ServletTest.testEchoParam1 []"
"spark","25","spark.Request.body()","1","spark.BodyAvailabilityTest.testPost []"
"spark","26","spark.embeddedserver.jetty.websocket.WebSocketCreatorFactory.create(WebSocketHandlerWrapper)","1","spark.GenericIntegrationTest.testParamAndWild []"
"spark","27","spark.Routable.get(String,TemplateViewRoute,TemplateEngine)","1","spark.GenericIntegrationTest.filters_should_be_accept_type_aware []"
"spark","28","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","1","spark.GenericSecureIntegrationTest.testXForwardedFor []"
"spark","29","spark.serialization.DefaultSerializer.process(OutputStream,Object)","1","spark.customerrorpages.CustomErrorPagesTest.testCustomInternal []"
