"Project","MethodIndex","Method","Count","Tests"
"jcodec","1","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int,boolean)","59","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testSpatialDirect []"
"jcodec","2","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeVert(Picture,int,int,int,int,int,int,int)","27","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","3","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSafe(byte[],int,int,int,int,byte[],int,int)","23","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","4","org.jcodec.codecs.h264.encode.MotionEstimator.estimateQPix(Picture,byte[],int[],int,int)","21","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.MotionEstimatorTest.testMotionEstimator [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","5","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeHoris(Picture,int,int,int,int,int,int,int)","21","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","6","org.jcodec.codecs.h264.encode.IntraPredEstimator.getLumaPred4x4(Picture,EncodingContext,int,int,int)","16","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","7","org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma4x4(MBlock)","15","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","8","org.jcodec.scale.RgbToYuv420j.transform(Picture,Picture)","13","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","9","org.jcodec.common.io.BitReader.checkNBitDontCare(int)","13","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","10","org.jcodec.codecs.h264.decode.MBlockDecoderBase.predictChromaInter(Frame[][],MvList,int,int,int,Picture,PartPred[])","12","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","11","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeExtendBorder(byte[],int,int,int,int,byte[],int,int)","11","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","12","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.mergeResidual(Picture,int[][][],int[][],int[][])","10","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","13","org.jcodec.scale.BaseResampler.resample(Picture,Picture)","10","org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","14","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictDC(int[][],boolean,boolean,byte[],byte[],int,byte[])","9","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","15","org.jcodec.codecs.h264.decode.PredictionMerger.copyPrediction(byte[],int,int,int,int,byte[])","9","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","16","org.jcodec.codecs.h264.decode.CAVLCReader.readZeroBitCount(BitReader,String)","8","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","17","org.jcodec.codecs.h264.encode.MotionEstimator.sad(byte[],int,byte[],int,int)","8","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","18","org.jcodec.common.model.Picture.getPlaneWidth(int)","8","org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","19","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsH(Picture,int,int[][])","7","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","20","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02(byte[],int,byte[],int,int,int,int,int,int)","7","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","21","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBs4(int,int,byte[],byte[],int,int,int,int,int,int,int,int,boolean)","7","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","22","org.jcodec.codecs.h264.decode.MBlockDecoderBase.chromaAC(boolean,boolean,int,int,int[],int,int,MBType,boolean,int[][])","6","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","23","org.jcodec.codecs.h264.io.CAVLC.readCoeffs(BitReader,VLC,VLC[],int[],int,int,int[])","6","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","24","org.jcodec.common.io.DummyBitstreamReader.readNBit(int)","6","org.jcodec.common.io.BitStreamTest.testRandomNBit []"
"jcodec","25","org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaXX(byte[],int,int,byte[],int,int,int,int,int,int,int,int)","6","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","26","org.jcodec.codecs.h264.io.CAVLC.writeBlockGen(BitWriter,int[],VLC[],int,int,int[],VLC)","5","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","27","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBoundaryStrenth(boolean,boolean,boolean,int,int,int,int,int,int,int,int)","5","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","28","org.jcodec.codecs.h264.H264Utils.unescapeNAL(ByteBuffer)","5","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue380Test.testFrameGrabCanExtractOrientation []"
"jcodec","29","org.jcodec.codecs.h264.decode.SliceDecoder.putMacroblock(Picture,Picture,int,int)","5","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","30","org.jcodec.containers.mp3.MPEGAudioDemuxer.skipJunkBB(int,ByteBuffer)","5","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteFast [],org.jcodec.movtool.MetadataEditorTest.testKeyedRead [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","31","org.jcodec.containers.mxf.model.MXFMetadata.readDate(ByteBuffer)","5","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset [],org.jcodec.containers.mxf.MXFDemuxerTest.testMxfTimecode [],org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset2 []"
"jcodec","32","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsV(Picture,int,int[][])","5","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","33","org.jcodec.codecs.h264.encode.MBEncoderHelper.pubBlkOnePlane(byte[],int,byte[],int,int,int,int)","4","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 []"
"jcodec","34","org.jcodec.codecs.h264.decode.MBlockDecoderIntra16x16.residualLumaI16x16(MBlock,boolean,boolean,int,int)","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","35","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predVerticalSAD(int,boolean,byte[],byte[])","4","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","36","org.jcodec.common.io.VLC.invert(int,int,int,IntArrayList,IntArrayList)","4","org.jcodec.codecs.h264.ResidualBlockTest.testLuma1CAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testSpatialDirect [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC []"
"jcodec","37","org.jcodec.codecs.h264.decode.CoeffTransformer._idct4x4(int[],int[])","4","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","38","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillVerticalEdge(Picture,int,int,int[][])","4","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","39","org.jcodec.common.model.Picture.createCropped(int,int,ColorSpace,Rect)","4","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","40","org.jcodec.scale.Yuv420pToRgb.transform(Picture,Picture)","4","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","41","org.jcodec.codecs.h264.decode.MBlock.clear()","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","42","org.jcodec.common.io.VLC.readVLC(BitReader)","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","43","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)","4","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","44","org.jcodec.codecs.h264.H264Utils.gotoNALUnitWithArray(ByteBuffer)","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","45","org.jcodec.codecs.common.biari.MDecoder.renormalize()","4","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","46","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02NoRound(byte[],int,int[],int,int,int,int,int,int)","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","47","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPred(int,boolean,boolean,boolean,byte[],byte[],byte,int,int,byte[])","4","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 []"
"jcodec","48","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRound(byte[],int,int[],int,int,int,int,int,int)","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","49","org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode16x16(MBlock,Picture,Frame[][],PartPred)","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","50","org.jcodec.codecs.h264.encode.MBWriterI16x16.chroma(EncodingContext,Picture,int,int,MBType,BitWriter,int,Picture,int)","3","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","51","org.jcodec.codecs.h264.decode.PredictionMerger.weight(byte[],int,int,int,int,int,int,int,byte[])","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","52","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","3","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","53","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillHorizontalEdge(Picture,int,int,int[][])","3","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC1 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","54","org.jcodec.codecs.h264.io.CABAC.initModels(int[][],SliceType,int,int)","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","55","org.jcodec.codecs.h264.io.CAVLC.readACBlock(BitReader,int[],int,int,boolean,MBType,boolean,MBType,int,int,int[])","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","56","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.copyCol(byte[],int,int,int,byte[])","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","57","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","58","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveVect(MvList,int,int,int,int)","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","59","org.jcodec.codecs.h264.io.CAVLC.readChromaDCBlock(BitReader,int[],boolean,boolean)","3","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","60","org.jcodec.codecs.h264.decode.SliceReader.readMacroblock(MBlock)","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","61","org.jcodec.codecs.h264.decode.SliceReader.readInter16x16(PartPred,MBlock)","3","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","62","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictVertical(int[],boolean,byte[],int,int,int,byte[])","3","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess []"
"jcodec","63","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20(byte[],int,byte[],int,int,int,int,int,int)","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","64","org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma0X(byte[],int,int,byte[],int,int,int,int,int,int,int)","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","65","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.deblockFrame(Picture)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","66","org.jcodec.codecs.common.biari.MDecoder.decodeFinalBin()","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","67","org.jcodec.common.IntArrayList.fill(int,int,int)","2","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CAVLC []"
"jcodec","68","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02NoRoundInt(int[],int,int[],int,int,int,int,int,int)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","69","org.jcodec.codecs.h264.decode.MBlockDecoderBase.decodeChroma(MBlock,int,int,boolean,boolean,Picture,int)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","70","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDC(int[][],int,boolean,boolean,byte[],byte[],byte[])","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","71","org.jcodec.codecs.h264.decode.CAVLCReader.readUE(BitReader)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","72","org.jcodec.codecs.h264.io.model.SeqParameterSet.read(ByteBuffer)","2","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CAVLC [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","73","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPredDiagonalDownLeft(boolean,boolean,boolean,byte[],byte[],byte,int,int,byte[])","2","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","74","org.jcodec.codecs.h264.encode.MBEncoderHelper.putBlk(byte[],int[],byte[],int,int,int,int,int)","2","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","75","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSubtractUnsafe(byte[],int,int,int,int,int[],byte[],int,int)","2","org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","76","org.jcodec.codecs.vpx.vp9.InterModeInfo.readInterMode(int,int,int,VPXBooleanDecoder,DecodingContext)","2","org.jcodec.codecs.vpx.vp9.InterModeInfoTest.testReadInterMode [],org.jcodec.codecs.vpx.vp9.InterModeInfoTest.testReadInterModeSub []"
"jcodec","77","org.jcodec.containers.dpx.DPXReader.date(String,String)","2","org.jcodec.containers.dpx.DPXReaderTest.testParseMetadata_DPXV2 [],org.jcodec.containers.dpx.DPXReaderTest.testParseMetadata_DPXV1 []"
"jcodec","78","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma00Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","79","org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter8x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,PartPred,PartPred)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","80","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.calcMVPredictionMedian(int,int,int,int,boolean,boolean,boolean,boolean,int,int)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","81","org.jcodec.codecs.h264.io.CABAC.readCoeffs(MDecoder,BlockType,int[],int,int,int[],int[],int[])","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","82","org.jcodec.codecs.h264.decode.CoeffTransformer.fdct4x4(int[])","2","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","83","org.jcodec.containers.mps.MPSDemuxer.probe(ByteBuffer)","2","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow []"
"jcodec","84","org.jcodec.codecs.h264.encode.EncodingContext.fork()","2","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","85","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDCInside(int[][],int,int,int,boolean,boolean,byte[],byte[],byte[])","2","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CABAC []"
"jcodec","86","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictDiagonalDownRight(int[],boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","2","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 []"
"jcodec","87","org.jcodec.codecs.h264.H264Encoder.encodeSlice(SeqParameterSet,PictureParameterSet,Picture,ByteBuffer,boolean,int,SliceType,int)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","88","org.jcodec.codecs.prores.ProresDecoder.readACCoeffs(BitReader,int[],int[],int,int[],int,int)","2","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing [],org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit []"
"jcodec","89","org.jcodec.common.tools.MathUtil.clip(int,int,int)","2","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","90","org.jcodec.codecs.h264.decode.MBlockDecoderBDirect.predictBSpatialDirect(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,PartPred[],Picture,int[])","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","91","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predHorizontalSAD(int,boolean,byte[],byte[])","2","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","92","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRoundInt(int[],int,int[],int,int,int,int,int,int)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","93","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictDC(int[],boolean,boolean,byte[],byte[],int,int,int,byte[])","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","94","org.jcodec.codecs.h264.decode.BlockInterpolator.getBlockLuma(Picture,Picture,int,int,int,int,int)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","95","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma21(byte[],int,byte[],int,int,int,int,int,int)","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","96","org.jcodec.codecs.png.PNGDecoder.decodeData(IHDR,PLTE,TRNS,List<ByteBuffer>,byte[][])","2","org.jcodec.codecs.png.PNGDecoderTest.testPNG [],org.jcodec.codecs.png.PNGEncoderTest.testPNG []"
"jcodec","97","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictVerticalRight(int[],boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","98","org.jcodec.codecs.h264.decode.CAVLCReader.readBool(BitReader,String)","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","99","org.jcodec.common.io.BitWriter.fork()","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","100","org.jcodec.api.transcode.Transcoder.printLegend(int,int,Packet)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","101","org.jcodec.codecs.h264.decode.CAVLCReader.readUEtrace(BitReader,String)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","102","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.getIdxBeta(int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","103","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma03Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","104","org.jcodec.codecs.h264.io.CAVLC.getCoeffTokenVLCForLuma(boolean,MBType,int,boolean,MBType,int)","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","105","org.jcodec.codecs.h264.BufferH264ES.nextFrame()","1","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC2 []"
"jcodec","106","org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaX0(byte[],int,int,byte[],int,int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","107","org.jcodec.common.dct.SimpleIDCT10Bit.idctCol(int[],int)","1","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","108","org.jcodec.common.dct.SimpleIDCT10Bit.fdctRow(int[],int)","1","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing []"
"jcodec","109","org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode8x16(MBlock,Picture,Frame[][],PartPred,PartPred)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","110","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPredVerticalRight(boolean,boolean,byte[],byte[],byte,int,int,byte[])","1","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 []"
"jcodec","111","org.jcodec.codecs.h264.decode.CoeffTransformer.idct4x4(int[])","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","112","org.jcodec.codecs.h264.decode.aso.FlatMBlockMapper.leftAvailable(int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","113","org.jcodec.codecs.h264.decode.FrameReader.readFrame(List<ByteBuffer>)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","114","org.jcodec.codecs.h264.io.CABAC.codedBlockPatternIntra(MDecoder,boolean,boolean,int,int,MBType,MBType)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","115","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveMvsIntra(DeblockerInput,int,int)","1","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","116","org.jcodec.codecs.mpeg4.MPEG4Bitstream.dequantMpegIntra(MPEG4DecodingContext,short[],int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","117","org.jcodec.codecs.png.PNGDecoder.decodeFrame(ByteBuffer,byte[][])","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","118","org.jcodec.common.IntArrayList.set(int,int)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRefCAVLC []"
"jcodec","119","org.jcodec.codecs.mpeg4.MPEG4Interpolator.horzMiddle8(byte[],int,byte[],int,int,int,int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","120","org.jcodec.scale.LanczosResampler.getTapsY(int)","1","org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","121","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma23Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","122","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.copyAdd(byte[],int,int[],int,int,byte[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","123","org.jcodec.codecs.png.PNGDecoder.filterUp(byte[],int,byte[])","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","124","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictHorizontal(int[][],boolean,byte[],int,byte[])","1","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","125","org.jcodec.codecs.h264.decode.SliceReader.readChromaAC(boolean,boolean,int,int,MBType,int[],int,int,int)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","126","org.jcodec.codecs.h264.io.CAVLC.writeTrailingOnes(BitWriter,int[],int,int)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","127","org.jcodec.codecs.h264.io.CAVLC.writeLevels(BitWriter,int[],int,int)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","128","org.jcodec.common.model.Picture.getPlaneData(int)","1","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC2 []"
"jcodec","129","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma12Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","130","org.jcodec.codecs.prores.ProresDecoder.nZeros(int)","1","org.jcodec.codecs.prores.ProresDecoderTest.testHalfSize2Frames []"
"jcodec","131","org.jcodec.codecs.raw.RAWVideoDecoder.copy(ByteBuffer,byte[],int)","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","132","org.jcodec.codecs.h264.encode.MBDeblocker.filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","133","org.jcodec.codecs.h264.encode.MBWriterINxN.encodeMacroblock(EncodingContext,Picture,int,int,BitWriter,EncodedMB,int,NonRdVector)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","134","org.jcodec.codecs.h264.decode.SliceReader.readLuma8x8CABAC(MBlock,int,int)","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 []"
"jcodec","135","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","136","org.jcodec.codecs.h264.io.CABAC.readRefIdx(MDecoder,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","137","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma12(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","138","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma10(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","139","org.jcodec.codecs.h264.io.CAVLC.writeRuns(BitWriter,int[],int,int)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","140","org.jcodec.codecs.h264.decode.SliceReader.readLuma(MBlock,boolean,boolean,int,int)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","141","org.jcodec.containers.mxf.model.FileDescriptor.read(Map<Integer,ByteBuffer>)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset2 []"
"jcodec","142","org.jcodec.codecs.common.biari.MDecoder.readOneByte()","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 []"
"jcodec","143","org.jcodec.common.dct.SimpleIDCT10Bit.idctRow(int[],int)","1","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","144","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.interpolateTop(boolean,boolean,byte[],byte[],int,int,byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","145","org.jcodec.common.dct.SparseIDCT.coeff(int[],int,int)","1","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","146","org.jcodec.codecs.png.PNGDecoder.filterPaeth(byte[],int,byte[],int)","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","147","org.jcodec.codecs.h264.H264Encoder.putLastMBLine()","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","148","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDCLeftBorder(int[][],int,int,int,boolean,boolean,byte[],byte[],byte[])","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","149","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictVertical(int[][],boolean,byte[],int,byte[])","1","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","150","org.jcodec.common.io.BitReader.nextIgnore16()","1","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing10Bit []"
"jcodec","151","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.mvThresh(int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","152","org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter16x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,int,PartPred)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","153","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma01Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","154","org.jcodec.codecs.h264.encode.MBWriterP16x16.luma(EncodingContext,int[],int,int,BitWriter,int,int[])","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","155","org.jcodec.codecs.h264.decode.PredictionMerger.weightPrediction(SliceHeader,int,int,byte[],int,int,int,int,byte[])","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","156","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPredHorizontalDown(boolean,boolean,byte[],byte[],byte,int,int,byte[])","1","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 []"
"jcodec","157","org.jcodec.codecs.h264.encode.CQPRateControl.calcVar(byte[],int)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","158","org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeAC(int[],int,int[])","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","159","org.jcodec.codecs.h264.H264Utils.escapeNAL(ByteBuffer,ByteBuffer)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","160","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.collectChromaPredictors(DecoderState,Picture,int)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess []"
"jcodec","161","org.jcodec.codecs.aac.ADTSParser.read(ByteBuffer)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","162","org.jcodec.codecs.h264.decode.CAVLCReader.readSE(BitReader,String)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","163","org.jcodec.codecs.prores.ProresEncoder.dctOnePlane(int,byte[],byte[],int[])","1","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing10Bit []"
"jcodec","164","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSubtractSafe(byte[],int,int,int,int,int[],byte[],int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","165","org.jcodec.codecs.common.biari.MDecoder.decodeBinBypass()","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","166","org.jcodec.codecs.h264.decode.SliceReader.readPredictionInter16x16(MBlock,int,boolean,boolean,int,PartPred)","1","org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","167","org.jcodec.codecs.mpeg4.MPEG4Interpolator.horzMiddle16(byte[],byte[],int,int,int,int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","168","org.jcodec.common.IntArrayList.get(int)","1","org.jcodec.api.Issue380Test.testFrameGrabCanExtractOrientation []"
"jcodec","169","org.jcodec.scale.LanczosResampler.buildTaps(int,int,double,short[][])","1","org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","170","org.jcodec.containers.mp4.boxes.NodeBox.findBox(Box,List<String>,Collection<Box>)","1","org.jcodec.movtool.StripTest.testIntervals []"
"jcodec","171","org.jcodec.codecs.h264.encode.MBWriterI16x16.hasNz(int[])","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","172","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveMvs(DeblockerInput,MvList,int,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","173","org.jcodec.codecs.h264.decode.BlockInterpolator.initSafe()","1","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC3 []"
"jcodec","174","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma32Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","175","org.jcodec.common.io.DummyBitstreamReader.advance1()","1","org.jcodec.common.io.BitStreamTest.testRandom1Bit []"
"jcodec","176","org.jcodec.codecs.mpeg4.MPEG4Interpolator.qOffSafe(byte[],byte[],int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","177","org.jcodec.codecs.mpa.ChannelSynthesizer.distributeSamples(int,float[],float[],float[])","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","178","org.jcodec.codecs.h264.encode.MBWriterI16x16.predictChroma(EncodingContext,Picture,int[][],byte[][],int,int,int,int)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","179","org.jcodec.codecs.png.PNGDecoder.filterAvg3(byte[],byte[],int)","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","180","org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma00Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","181","org.jcodec.codecs.mpa.Mp3Decoder.antialias(Granule,float[])","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","182","org.jcodec.codecs.prores.ProresDecoder.readCodeword(BitReader,Codebook)","1","org.jcodec.codecs.prores.ProresDecoderTest.testQuaverSize2Frames []"
"jcodec","183","org.jcodec.codecs.h264.decode.SliceDecoder.decodeMacroblocks(Frame[][])","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","184","org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma0XUnsafe(byte[],int,int,byte[],int,int,int,int,int,int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","185","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPredHorizontal(boolean,boolean,byte[],byte[],byte,int,int,byte[])","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","186","org.jcodec.scale.RgbToYuv420j.rgb2yuv(byte,byte,byte,int[])","1","org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","187","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.lumaVerticalPredSAD(boolean,byte[],int,byte[])","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","188","org.jcodec.containers.mp4.demuxer.AbstractMP4DemuxerTrack.readPacketData(SeekableByteChannel,ByteBuffer,long,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","189","org.jcodec.codecs.png.IHDR.parse(ByteBuffer)","1","org.jcodec.scale.ResamplerTest.testRandomBicubic []"
"jcodec","190","org.jcodec.codecs.mpeg4.MPEG4Interpolator.fulpel8x8(byte[],int,int,byte[],int,int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","191","org.jcodec.codecs.h264.encode.MBWriterI16x16.extractDC(int[][])","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","192","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPredHorizontalUp(boolean,boolean,byte[],byte[],byte,int,int,byte[])","1","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 []"
"jcodec","193","org.jcodec.platform.Platform.newInstance(Class<T>,Object[])","1","org.jcodec.containers.mp4.SampleOffsetUtilsTest.testGetChunkBySample []"
"jcodec","194","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma10Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","195","org.jcodec.codecs.common.biari.MDecoder.decodeBin(int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","196","org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaXXUnsafe(byte[],int,int,byte[],int,int,int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","197","org.jcodec.codecs.h264.decode.PredictionMerger._weightPrediction(byte[],byte[],int,int,int,int,int,int,int,int,int,byte[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","198","org.jcodec.codecs.h264.decode.SliceReader._readChromaAC(boolean,boolean,int,int[],int,MBType,boolean,int[][])","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","199","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictHorizontalUp(int[],boolean,byte[],int,int,int,byte[])","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","200","org.jcodec.codecs.h264.decode.SliceReader.readPrediction8x8P(MBlock,int,boolean,boolean)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","201","org.jcodec.common.dct.DCTRef.fdct(int[],int)","1","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","202","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.getIdxAlpha(int,int)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CAVLC []"
"jcodec","203","org.jcodec.codecs.h264.decode.SliceReader.readPredInter8x16(MBlock,int,boolean,boolean,int,PartPred,PartPred)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","204","org.jcodec.common.tools.Debug.print8x8i(int[])","1","org.jcodec.common.dct.FfmpegIntDctTest.testIdct []"
"jcodec","205","org.jcodec.codecs.h264.decode.SliceReader.readChromaResidual(MBlock,boolean,boolean,int)","1","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC3 []"
"jcodec","206","org.jcodec.codecs.mpeg4.MPEG4Decoder.putPix(Picture,Macroblock,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
