"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","682","com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish []"
"disruptor","2","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","484","com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfHandlerIsNotAlreadyConsuming [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish []"
"disruptor","3","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","228","com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstCustomProcessorsImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish []"
"disruptor","4","com.lmax.disruptor.BusySpinWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","5","com.lmax.disruptor.BusySpinWaitStrategyTest.shouldWaitForValue []"
"disruptor","5","com.lmax.disruptor.WorkProcessor.run()","3","com.lmax.disruptor.WorkerPoolTest.shouldProcessOnlyOnceItHasBeenPublished [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor []"
"disruptor","6","com.lmax.disruptor.RingBuffer.getCursor()","3","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable [],com.lmax.disruptor.dsl.DisruptorTest.shouldBatchOfEvents [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","7","com.lmax.disruptor.dsl.EventProcessorInfo.getSequences()","2","com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForWorkProcessorIfAddedAfterPublish []"
"disruptor","8","com.lmax.disruptor.dsl.Disruptor.checkOnlyStartedOnce()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","9","com.lmax.disruptor.BlockingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers []"
"disruptor","10","com.lmax.disruptor.Sequence.get()","1","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsThreeArgWhenBatchExtendsPastEndOfArray []"
"disruptor","11","com.lmax.disruptor.BlockingWaitStrategy.signalAllWhenBlocking()","1","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsIfBatchIsLargerThanRingBuffer []"
"disruptor","12","com.lmax.disruptor.dsl.Disruptor.handleExceptionsFor(EventHandler<T>)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependencyAndProcessFirstEventAsSoonAsItIsAvailable []"
"disruptor","13","com.lmax.disruptor.RingBuffer.createSingleProducer(EventFactory<E>,int,WaitStrategy)","1","com.lmax.disruptor.RingBufferTest.shouldClaimAndGet []"
"disruptor","14","com.lmax.disruptor.SequenceGroups.addSequences(T,AtomicReferenceFieldUpdater<T,Sequence[]>,Cursored,Sequence...)","1","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsThreeArgWhenBatchExtendsPastEndOfArray []"
