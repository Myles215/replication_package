"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","517","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors []"
"disruptor","2","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","378","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors []"
"disruptor","3","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","192","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors []"
"disruptor","4","com.lmax.disruptor.BusySpinWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","7","com.lmax.disruptor.BusySpinWaitStrategyTest.shouldWaitForValue [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","5","com.lmax.disruptor.MultiProducerSequencer.getHighestPublishedSequence(long,long)","5","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","6","com.lmax.disruptor.BatchEventProcessor.processEvents()","3","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","7","com.lmax.disruptor.MultiProducerSequencer.next(int)","2","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","8","com.lmax.disruptor.RingBuffer.next()","2","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","9","com.lmax.disruptor.dsl.EventProcessorInfo.getSequences()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors []"
"disruptor","10","com.lmax.disruptor.RingBuffer.getCursor()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldMakeEntriesAvailableToFirstHandlersImmediately []"
"disruptor","11","com.lmax.disruptor.MultiProducerSequencer.next()","1","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","12","com.lmax.disruptor.RingBuffer.publish(long)","1","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
