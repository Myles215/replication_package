"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","510","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","2","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","421","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolWithADependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportUsingWorkerPoolAsDependency [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowSpecifyingSpecificEventProcessorsToWaitFor [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","3","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","132","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldCreateEventProcessorGroupForFirstEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","4","com.lmax.disruptor.BatchEventProcessor.processEvents()","6","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","5","com.lmax.disruptor.MultiProducerSequencer.getHighestPublishedSequence(long,long)","3","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","6","com.lmax.disruptor.BusySpinWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","3","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","7","com.lmax.disruptor.RingBuffer.get(long)","2","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","8","com.lmax.disruptor.MultiProducerSequencer.next(int)","2","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","9","com.lmax.disruptor.ProcessingSequenceBarrier.checkAlert()","2","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","10","com.lmax.disruptor.MultiProducerSequencer.initialiseAvailableBuffer()","1","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","11","com.lmax.disruptor.BlockingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","1","com.lmax.disruptor.SequenceBarrierTest.shouldWaitForWorkCompleteWhereCompleteWorkThresholdIsAhead []"
"disruptor","12","com.lmax.disruptor.MultiProducerSequencer.next()","1","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","13","com.lmax.disruptor.RingBuffer.publish(long)","1","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","14","com.lmax.disruptor.dsl.EventProcessorInfo.getSequences()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish []"
"disruptor","15","com.lmax.disruptor.MultiProducerSequencer.calculateIndex(long)","1","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","16","com.lmax.disruptor.AbstractSequencer.addGatingSequences(Sequence...)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors []"
"disruptor","17","com.lmax.disruptor.AbstractSequencer.getCursor()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor []"
"disruptor","18","com.lmax.disruptor.RingBuffer.translateAndPublish(EventTranslatorThreeArg<E,A,B,C>,long,A,B,C)","1","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsThreeArgWhenBatchSizeIsNegative []"
"disruptor","19","com.lmax.disruptor.MultiProducerSequencer.isAvailable(long)","1","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
