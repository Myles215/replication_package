"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","274","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing []"
"disruptor","2","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","236","com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing []"
"disruptor","3","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","95","com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldAddEventProcessorsAfterPublishing []"
"disruptor","4","com.lmax.disruptor.BusySpinWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","11","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","5","com.lmax.disruptor.BatchEventProcessor.processEvents()","9","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportHandlersAsDependenciesToCustomProcessors []"
"disruptor","6","com.lmax.disruptor.MultiProducerSequencer.next(int)","3","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","7","com.lmax.disruptor.WorkProcessor.run()","2","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","8","com.lmax.disruptor.MultiProducerSequencer.getHighestPublishedSequence(long,long)","2","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","9","com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long)","2","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","10","com.lmax.disruptor.RingBuffer.next()","2","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads [],com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
"disruptor","11","com.lmax.disruptor.SleepingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","12","com.lmax.disruptor.dsl.Disruptor.handleEventsWith(EventHandler<?superT>...)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally []"
"disruptor","13","com.lmax.disruptor.MultiProducerSequencer.next()","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","14","com.lmax.disruptor.RingBuffer.publish(long)","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","15","com.lmax.disruptor.RingBuffer.createMultiProducer(EventFactory<E>,int,WaitStrategy)","1","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsIfBatchIsLargerThanRingBuffer []"
"disruptor","16","com.lmax.disruptor.dsl.EventProcessorInfo.getSequences()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies []"
"disruptor","17","com.lmax.disruptor.RingBuffer.get(long)","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","18","com.lmax.disruptor.dsl.EventHandlerGroup.and(EventProcessor...)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsToWorkHandlers []"
"disruptor","19","com.lmax.disruptor.dsl.BasicExecutor.execute(Runnable)","1","com.lmax.disruptor.DisruptorStressTest.shouldHandleLotsOfThreads []"
