"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","360","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor []"
"disruptor","2","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","258","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldBlockProducerUntilAllEventProcessorsHaveAdvanced [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionIfStartIsCalledTwice [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor []"
"disruptor","3","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","126","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldTrackRemainingCapacity [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors []"
"disruptor","4","com.lmax.disruptor.BatchEventProcessor.notifyStart()","1","com.lmax.disruptor.BatchEventProcessorTest.shouldCallExceptionHandlerOnUncaughtException []"
"disruptor","5","com.lmax.disruptor.dsl.EventProcessorInfo.getSequences()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish []"
"disruptor","6","com.lmax.disruptor.RingBuffer.createSingleProducer(EventFactory<E>,int,WaitStrategy)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies []"
"disruptor","7","com.lmax.disruptor.dsl.ConsumerRepository.add(EventProcessor)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldTrackEventHandlersByIdentityNotEquality []"
"disruptor","8","com.lmax.disruptor.BatchEventProcessor.isRunning()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldApplyDefaultExceptionHandlerToExistingEventProcessors []"
"disruptor","9","com.lmax.disruptor.dsl.Disruptor.updateGatingSequencesForNextInChain(Sequence[],Sequence[])","1","com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor []"
"disruptor","10","com.lmax.disruptor.SequenceGroups.addSequences(T,AtomicReferenceFieldUpdater<T,Sequence[]>,Cursored,Sequence...)","1","com.lmax.disruptor.RingBufferTest.shouldThrowExceptionIfBufferIsFull []"
