"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","269","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies []"
"disruptor","2","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","266","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies []"
"disruptor","3","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","79","com.lmax.disruptor.dsl.DisruptorTest.shouldThrowTimeoutExceptionIfShutdownDoesNotCompleteNormally [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAsDependencies [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated []"
"disruptor","4","com.lmax.disruptor.MultiProducerSequencer.getHighestPublishedSequence(long,long)","6","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","5","com.lmax.disruptor.RingBuffer.next()","6","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","6","com.lmax.disruptor.BusySpinWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","4","com.lmax.disruptor.BusySpinWaitStrategyTest.shouldWaitForValue []"
"disruptor","7","com.lmax.disruptor.SleepingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","3","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","8","com.lmax.disruptor.MultiProducerSequencer.next(int)","3","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","9","com.lmax.disruptor.BlockingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","2","com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleImmediateSequenceChange [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies []"
"disruptor","10","com.lmax.disruptor.dsl.ConsumerRepository.add(EventProcessor,EventHandler<?superT>,SequenceBarrier)","1","com.lmax.disruptor.dsl.ConsumerRepositoryTest.shouldGetLastEventProcessorsInChain []"
"disruptor","11","com.lmax.disruptor.WorkProcessor.run()","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","12","com.lmax.disruptor.RingBuffer.publish(long)","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","13","com.lmax.disruptor.util.Util.getMinimumSequence(Sequence[],long)","1","com.lmax.disruptor.WorkerStressTest.shouldHandleLotsOfThreads []"
"disruptor","14","com.lmax.disruptor.RingBuffer.create(ProducerType,EventFactory<E>,int,WaitStrategy)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingADefaultExceptionHandlerForEventProcessors []"
"disruptor","15","com.lmax.disruptor.PhasedBackoffWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","1","com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleImmediateSequenceChange []"
"disruptor","16","com.lmax.disruptor.ProcessingSequenceBarrier.checkAlert()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCustomProcessorsAndHandlersAsDependencies []"
