"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","502","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","2","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","378","com.lmax.disruptor.dsl.DisruptorTest.shouldSetSequenceForHandlerIfAddedAfterPublish [],com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.should [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldProvideEventsMultipleWorkHandlers [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldBeAbleToOverrideTheExceptionHandlerForAEventProcessor [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","3","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","123","com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitOnAllProducersJoinedByAnd [],com.lmax.disruptor.dsl.DisruptorTest.shouldWaitUntilAllFirstEventProcessorsProcessEventBeforeMakingItAvailableToDependentEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldThrowExceptionWhenAddingEventProcessorsAfterTheProducerBarrierHasBeenCreated [],com.lmax.disruptor.dsl.DisruptorTest.shouldHonourDependenciesForCustomProcessors []"
"disruptor","4","com.lmax.disruptor.dsl.EventProcessorInfo.getSequences()","6","com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportCombiningWorkerPoolWithEventHandlerAsDependencyWhenNotPreviouslyRegistered [],com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors [],com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
"disruptor","5","com.lmax.disruptor.BusySpinWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","5","com.lmax.disruptor.BusySpinWaitStrategyTest.shouldWaitForValue []"
"disruptor","6","com.lmax.disruptor.PhasedBackoffWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","1","com.lmax.disruptor.PhasedBackoffWaitStrategyTest.shouldHandleSequenceChangeWithOneMillisecondDelay []"
"disruptor","7","com.lmax.disruptor.dsl.ConsumerRepository.add(EventProcessor)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldProcessMessagesPublishedBeforeStartIsCalled []"
"disruptor","8","com.lmax.disruptor.dsl.ExceptionHandlerSetting.with(ExceptionHandler<?superT>)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldSupportSpecifyingAExceptionHandlerForEventProcessors []"
"disruptor","9","com.lmax.disruptor.dsl.BasicExecutor.execute(Runnable)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldAllowEventHandlerWithSuperType []"
