"Project","Rank","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","66","spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.GenericSecureIntegrationTest.testNotFound [],spark.RequestTest.testCookies_whenCookiesAreNotPresent [],spark.GenericIntegrationTest.testGetHi [],spark.RequestTest.testUserAgent [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.RequestTest.testHost [],spark.RequestTest.testProtocol [],spark.GenericIntegrationTest.testSessionReset [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.BodyAvailabilityTest.testPost [],spark.StaticFilesMemberTest.testStaticFileHeaders [],spark.StaticFilesMemberTest.testStaticFileExpireTime [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal [],spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.RedirectTest.testRedirectPostWithSpecificCode [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withNullThreadPool [],spark.RedirectTest.testRedirectAnyPost [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericSecureIntegrationTest.testGetHi [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.GenericIntegrationTest.testPathParamsWithPlusSign [],spark.GenericIntegrationTest.testTypedExceptionMapper [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.GenericIntegrationTest.testGetRoot [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.RequestTest.testSession_whenCreateIsTrue_afterSessionInvalidate [],spark.RedirectTest.testRedirectPutWithSpecificCode [],spark.RequestTest.testSessionNpParams_afterSessionInvalidate [],spark.GenericIntegrationTest.testUnauthorized [],spark.GenericIntegrationTest.testExceptionMapper [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withoutHttpOnly [],spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml [],spark.GenericSecureIntegrationTest.testPatch [],spark.staticfiles.StaticFilesTest.testDirectoryTraversalProtectionLocal [],spark.embeddedserver.EmbeddedServersTest.testAdd_whenConfigureRoutes_createsCustomServer [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.RequestTest.testHeaders [],spark.StaticFilesMemberTest.testExternalStaticFile [],spark.RedirectTest.testRedirectGetWithSpecificCode [],spark.StaticFilesMemberTest.testExceptionMapping404 [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally [],spark.RequestTest.queryParamShouldReturnsParametersFromQueryString [],spark.RequestTest.shouldBeAbleToGetTheContextPath [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.RequestTest.testRequestMethod [],spark.GenericSecureIntegrationTest.testXForwardedFor []"
"spark","2","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,ExceptionMapper,boolean)","24","spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml [],spark.ResponseBodyTest.testHELLO [],spark.CookiesIntegrationTest.testRemoveCookie [],spark.RequestTest.testHeaders [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.GenericIntegrationTest.testSessionReset [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.RequestTest.testPort [],spark.RequestTest.testSession_whenCreateIsTrue_afterSessionInvalidate [],spark.RequestTest.testQueryParams [],spark.RedirectTest.testRedirectPutWithSpecificCode [],spark.RedirectTest.testRedirectAnyGet [],spark.MultipleServicesTest.testGetHello [],spark.RequestTest.queryParamShouldReturnsParametersFromQueryString [],spark.RequestTest.testQueryParamsValues_whenParamDoesNotExists [],spark.GenericIntegrationTest.testExceptionMapper [],spark.RedirectTest.testRedirectGet [],spark.RequestTest.testServletPath [],spark.RequestTest.testCookies_whenCookiesAreNotPresent [],spark.GenericSecureIntegrationTest.testPatch [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericIntegrationTest.testTypedExceptionMapper [],spark.GenericSecureIntegrationTest.testPost []"
"spark","3","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","19","spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreadsOnly_thenUseDefaultMinThreadsAndTimeout [],spark.RedirectTest.testRedirectDelete [],spark.RedirectTest.testRedirectAnyPut [],spark.GenericIntegrationTest.testParamAndWild [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_useDefaults [],spark.RequestTest.testPort [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreads_isLessThanDefaultMinThreads [],spark.GenericSecureIntegrationTest.testEchoParam1 [],spark.RedirectTest.testRedirectAnyGet [],spark.MultipleServicesTest.testGetHello [],spark.RequestTest.testQueryParamsValues_whenParamDoesNotExists [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.RequestTest.testPathInfo [],spark.RedirectTest.testRedirectGet [],spark.RequestTest.queryParamOrDefault_shouldReturnQueryParam_whenQueryParamExists [],spark.GenericIntegrationTest.testPathParamsWithPlusSign []"
"spark","4","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","17","spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.RedirectTest.testRedirectAnyPut [],spark.BooksIntegrationTest.canListBooks [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.embeddedserver.jetty.SocketConnectorFactoryTest.testCreateSocketConnector [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.GenericIntegrationTest.testXForwardedFor [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.GenericIntegrationTest.testUnauthorized [],spark.RequestTest.testPathInfo [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml [],spark.RedirectTest.testRedirectAnyPutWithSpecificCode [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.RequestTest.testRequestMethod [],spark.RequestTest.testSession_2times []"
"spark","5","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","16","spark.BooksIntegrationTest.canCreateBook [],spark.RequestTest.testHeaders [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally [],spark.RequestTest.testCookie_whenCookiesAreNotPresent [],spark.StaticFilesMemberTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.customerrorpages.CustomErrorPagesTest.testGetHi [],spark.RequestTest.testSession_whenCreateIsFalse [],spark.RequestTest.testIp [],spark.GenericIntegrationTest.testXForwardedFor [],spark.GenericIntegrationTest.testStaticFile [],spark.RequestTest.testUserAgent [],spark.BooksIntegrationTest.canGetBook [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.RequestTest.testProtocol []"
"spark","6","spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish()","10","spark.BooksIntegrationTest.canGetUpdatedBook [],spark.GenericIntegrationTest.testHiHead [],spark.BooksIntegrationTest.canListBooks [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withoutHttpOnly [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.CookiesIntegrationTest.testCreateCookie [],spark.StaticFilesMemberTest.testStaticFileExpireTime [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.GenericIntegrationTest.testInheritanceExceptionMapper []"
"spark","7","spark.embeddedserver.EmbeddedServers.initialize()","9","spark.CookiesIntegrationTest.testRemoveCookie [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.GzipTest.testStaticFileCssStyleCss [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal [],spark.GenericSecureIntegrationTest.testPost [],spark.FilterTest.testJustFilter [],spark.BooksIntegrationTest.wontFindBook []"
"spark","8","spark.Service.getPaths()","9","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.RequestTest.testPathInfo [],spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.RequestTest.testURI [],spark.GenericIntegrationTest.testPatch [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.RequestTest.testSessionNoParams_whenSessionIsNull [],spark.RedirectTest.testRedirectPutWithSpecificCode []"
"spark","9","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","8","spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.GenericIntegrationTest.testUnauthorized [],spark.GenericIntegrationTest.testParamAndWild [],spark.GenericIntegrationTest.testExceptionMapper [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.GenericIntegrationTest.testInheritanceExceptionMapper [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware []"
"spark","10","spark.http.matching.Body.serializeTo(HttpServletResponse,SerializerChain,HttpServletRequest)","7","spark.ResponseBodyTest.testSPECIAL [],spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.RedirectTest.testRedirectAnyPut [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.RedirectTest.testRedirectGet [],spark.GenericIntegrationTest.testPostProcessBodyForFinally []"
"spark","11","spark.Service.init()","3","spark.RequestTest.testCookies_whenCookiesArePresent [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.GenericSecureIntegrationTest.testXForwardedFor []"
"spark","12","spark.embeddedserver.jetty.websocket.WebSocketHandlerWrapper.validateHandlerClass(Class<?>)","2","spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.GenericIntegrationTest.testPostProcessBodyForFinally []"
"spark","13","spark.Response.cookie(String,String,String,String,int,boolean,boolean)","2","spark.ResponseTest.testCookie_whenNameValueAndMaxAgeParameters_shouldAddCookieSuccessfully [],spark.ResponseTest.testCookie_whenNameAndValueParameters_shouldAddCookieSuccessfully []"
"spark","14","spark.staticfiles.StaticFilesConfiguration.consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)","2","spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml [],spark.StaticFilesMemberTest.testExternalStaticFile []"
"spark","15","spark.staticfiles.StaticFilesConfiguration.configure(String)","1","spark.GenericIntegrationTest.testGetByteBufferHi []"
"spark","16","spark.Service.awaitInitialization()","1","spark.GenericSecureIntegrationTest.testUnauthorized []"
"spark","17","spark.route.RouteEntry.matches(HttpMethod,String)","1","spark.GenericIntegrationTest.testGetByteBufferHi []"
"spark","18","spark.route.Routes.add(HttpMethod,String,String,Object)","1","spark.GenericIntegrationTest.testGetHiAfterFilter []"
"spark","19","spark.utils.MimeParse.fitnessAndQualityParsed(String,Collection<ParseResults>)","1","spark.servlet.ServletTest.testPost []"
"spark","20","spark.Session.attribute(String,Object)","1","spark.SessionTest.testAttribute_whenAttributeIsSet []"
"spark","21","spark.route.Routes.findMultiple(HttpMethod,String,String)","1","spark.BooksIntegrationTest.canGetBook []"
"spark","22","spark.Spark.getInstance()","1","spark.BooksIntegrationTest.canCreateBook []"
"spark","23","spark.Service.addFilter(HttpMethod,FilterImpl)","1","spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName []"
"spark","24","spark.Response.type(String)","1","spark.ResponseTest.testSetType []"
