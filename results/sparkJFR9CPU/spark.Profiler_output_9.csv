"Project","Rank","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","68","spark.CookiesIntegrationTest.testRemoveCookie [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create [],spark.RequestTest.testContextPath [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.GenericSecureIntegrationTest.testEchoParam1 [],spark.CookiesIntegrationTest.testEmptyCookies [],spark.MultipleFiltersTest.testMultipleFilters [],spark.GenericSecureIntegrationTest.testNotFound [],spark.staticfiles.StaticFilesTest.testMimeTypes [],spark.GenericIntegrationTest.testEchoParam1 [],spark.GzipTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.RedirectTest.testRedirectAnyPutWithSpecificCode [],spark.RequestTest.shouldBeAbleToGetTheServletPath [],spark.RequestTest.testProtocol [],spark.GenericIntegrationTest.testHiHead [],spark.BooksIntegrationTest.canListBooks [],spark.BodyAvailabilityTest.testPost [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal [],spark.BooksIntegrationTest.canDeleteBook [],spark.BooksIntegrationTest.canGetUpdatedBook [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.GenericIntegrationTest.testEchoParam2 [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericSecureIntegrationTest.testGetHi [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.GenericIntegrationTest.testGetRoot [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testPost [],spark.GenericIntegrationTest.testXForwardedFor [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml [],spark.GenericIntegrationTest.testEchoParam3 [],spark.RequestTest.testSession_2times [],spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.FilterTest.testJustFilter [],spark.RequestTest.testUrl [],spark.MultipleServicesTest.testGetHello [],spark.MultipleServicesTest.testGetAllRoutesFromBothServices [],spark.UnmapTest.testUnmap [],spark.RequestTest.queryParamOrDefault_shouldReturnQueryParam_whenQueryParamExists [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.RequestTest.testRequestMethod [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","29","spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.staticfiles.DisableMimeGuessingTest.testCustomMimeType [],spark.RequestTest.testSession_whenCreateIsTrue [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.RedirectTest.testRedirectAnyGet [],spark.RequestTest.testIp [],spark.staticfiles.StaticFilesTest.testMimeTypes [],spark.GzipTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.testUnauthorized [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withoutHttpOnly [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.GenericSecureIntegrationTest.testPatch [],spark.RequestTest.testSession_2times [],spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml [],spark.RequestTest.testContentType [],spark.BodyAvailabilityTest.testPost [],spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.embeddedserver.jetty.SocketConnectorFactoryTest.testCreateSocketConnector [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal [],spark.RedirectTest.testRedirectAnyDelete [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally [],spark.RedirectTest.testRedirectPostWithSpecificCode [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.RequestTest.testQueryParamsValues_whenParamDoesNotExists [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.RequestTest.testURI [],spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","3","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,ExceptionMapper,boolean)","26","spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.RequestTest.testSession_whenCreateIsTrue [],spark.RequestTest.testContextPath [],spark.GenericIntegrationTest.testNotFound [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.GzipTest.testStaticFileCssStyleCss [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.RequestTest.testHost [],spark.RequestTest.testCookie_whenCookiesArePresent [],spark.RedirectTest.testRedirectPost [],spark.StaticFilesMemberTest.testExceptionMapping404 [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute [],spark.RedirectTest.testRedirectAnyDelete [],spark.BooksIntegrationTest.canGetUpdatedBook [],spark.MultipleServicesTest.testGetHello [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.UnmapTest.testUnmap [],spark.RedirectTest.testRedirectAnyPost [],spark.GenericSecureIntegrationTest.testGetHi [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericIntegrationTest.testPatch [],spark.BooksIntegrationTest.canGetBook [],spark.GenericSecureIntegrationTest.testXForwardedFor []"
"spark","4","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","21","spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.GenericIntegrationTest.testSessionReset [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testPost [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.GenericIntegrationTest.testEchoParam1 [],spark.GenericIntegrationTest.testExceptionMapper [],spark.GenericIntegrationTest.testEchoParam2 [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericIntegrationTest.testEchoParam3 [],spark.GenericIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testPatch [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.GenericIntegrationTest.testPathParamsWithPlusSign []"
"spark","5","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","14","spark.RequestTest.testSession_whenCreateIsFalse_afterSessionInvalidate [],spark.RequestTest.testHeaders [],spark.embeddedserver.jetty.SocketConnectorFactoryTest.testCreateSocketConnector [],spark.GenericIntegrationTest.testSplatWithEncodedSlash [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withThreadPool [],spark.RequestTest.testQueryParamsValues_whenParamDoesNotExists [],spark.GenericIntegrationTest.testEchoParam2 [],spark.UnmapTest.testUnmap [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.RequestTest.queryParamOrDefault_shouldReturnQueryParam_whenQueryParamExists [],spark.GenericIntegrationTest.testPatch [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer []"
"spark","6","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","14","spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreadsOnly_thenUseDefaultMinThreadsAndTimeout [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.RedirectTest.testRedirectDelete [],spark.staticfiles.DisableMimeGuessingTest.testMimeTypes [],spark.RequestTest.testCookie_whenCookiesArePresent [],spark.GenericIntegrationTest.testGetRoot [],spark.RequestTest.testContentLength [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreads_isLessThanDefaultMinThreads [],spark.RequestTest.testSessionNpParams_afterSessionInvalidate [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.GzipTest.testStaticFileCssStyleCss [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.RedirectTest.testRedirectDeleteWithSpecificCode []"
"spark","7","spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish()","10","spark.BooksIntegrationTest.canGetUpdatedBook [],spark.MultipleServicesTest.testGetHello [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.StaticFilesMemberTest.testExceptionMapping404 [],spark.FilterTest.testJustFilter []"
"spark","8","spark.http.matching.Body.serializeTo(HttpServletResponse,SerializerChain,HttpServletRequest)","9","spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.RedirectTest.testRedirectGet [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.GenericIntegrationTest.testEchoParam3 [],spark.GzipTest.checkGzipCompression [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.BooksIntegrationTest.canGetBook [],spark.BooksIntegrationTest.canDeleteBook [],spark.GenericSecureIntegrationTest.testEchoParam1 []"
"spark","9","spark.embeddedserver.EmbeddedServers.initialize()","8","spark.GenericIntegrationTest.testHiHead [],spark.RequestTest.testIp [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.GenericIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.RequestTest.testCookie_whenCookiesAreNotPresent [],spark.GenericIntegrationTest.testTypedExceptionMapper [],spark.BooksIntegrationTest.wontFindBook []"
"spark","10","spark.Service.getPaths()","8","spark.ResponseBodyTest.testSPECIAL [],spark.MultipleFiltersTest.testMultipleFilters [],spark.GenericIntegrationTest.testHiHead [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.RequestTest.testURI [],spark.GenericIntegrationTest.testNotFoundExceptionMapper []"
"spark","11","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","3","spark.GenericSecureIntegrationTest.testUnauthorized [],spark.GenericSecureIntegrationTest.testGetHi [],spark.embeddedserver.jetty.SocketConnectorFactoryTest.testCreateSecureSocketConnector []"
"spark","12","spark.embeddedserver.jetty.websocket.WebSocketHandlerWrapper.validateHandlerClass(Class<?>)","3","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.GenericIntegrationTest.testPatch [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally []"
"spark","13","spark.Response.cookie(String,String,String,String,int,boolean,boolean)","2","spark.ResponseTest.testRemoveCookie_shouldModifyPropertiesFromCookieSuccessfully [],spark.ResponseTest.testCookie_whenPathNameValueMaxAgeAndSecuredParameters_shouldAddCookieSuccessfully []"
"spark","14","spark.staticfiles.StaticFilesConfiguration.configure(String)","1","spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName []"
"spark","15","spark.utils.StringUtils.cleanPath(String)","1","spark.StaticFilesMemberTest.testStaticFileExpireTime []"
"spark","16","spark.utils.SparkUtils.convertRouteToList(String)","1","spark.RedirectTest.testRedirectDelete []"
"spark","17","spark.utils.MimeParse.bestMatch(Collection<String>,String)","1","spark.GenericIntegrationTest.testInheritanceExceptionMapper []"
"spark","18","spark.servlet.SparkFilter.init(FilterConfig)","1","spark.servlet.ServletTest.testStaticWelcomeResource []"
"spark","19","spark.resource.ClassPathResource.exists()","1","spark.GenericIntegrationTest.testNotFound []"
"spark","20","spark.Response.header(String,java.sql.Date)","1","spark.ResponseTest.testJavaSqlDateHeader []"
"spark","21","spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)","1","spark.ResponseBodyTest.testHELLO []"
"spark","22","spark.Response.type(String)","1","spark.customerrorpages.CustomErrorPagesTest.testCustomInternal []"
"spark","23","spark.route.RouteEntry.matches(HttpMethod,String)","1","spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName []"
"spark","24","spark.Service.awaitInitialization()","1","spark.BooksIntegrationTest.canListBooks []"
"spark","25","spark.staticfiles.StaticFilesConfiguration.consume(HttpServletRequest,HttpServletResponse)","1","spark.staticfiles.StaticFilesTest.testDirectoryTraversalProtectionLocal []"
"spark","26","spark.utils.GzipUtils.checkAndWrap(HttpServletRequest,HttpServletResponse,boolean)","1","spark.FilterTest.testJustFilter []"
"spark","27","spark.route.Routes.add(HttpMethod,String,String,Object)","1","spark.RequestTest.testPathInfo []"
"spark","28","spark.utils.MimeParse.fitnessAndQualityParsed(String,Collection<ParseResults>)","1","spark.BooksIntegrationTest.canGetUpdatedBook []"
"spark","29","spark.Spark.getInstance()","1","spark.GenericIntegrationTest.testHiHead []"
