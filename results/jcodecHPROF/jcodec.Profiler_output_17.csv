"Project","MethodIndex","Method","Count","Tests"
"jcodec","1","org.jcodec.codecs.h264.decode.CoeffTransformer.idct4x4(int[])","53","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","2","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeVert(Picture,int,int,int,int,int,int,int)","47","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","3","org.jcodec.codecs.h264.encode.MBWriterINxN.encodeMacroblock(EncodingContext,Picture,int,int,BitWriter,EncodedMB,int,NonRdVector)","31","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","4","org.jcodec.common.io.VLC.readVLC(BitReader)","23","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","5","org.jcodec.codecs.h264.encode.MBWriterI16x16.chroma(EncodingContext,Picture,int,int,MBType,BitWriter,int,Picture,int)","18","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","6","org.jcodec.codecs.h264.decode.BlockInterpolator.getBlockChroma(byte[],int,int,byte[],int,int,int,int,int,int)","18","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","7","org.jcodec.codecs.h264.encode.MBWriterP16x16.luma(EncodingContext,int[],int,int,BitWriter,int,int[])","15","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","8","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.deblockFrame(Picture)","13","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC3 []"
"jcodec","9","org.jcodec.codecs.h264.encode.MotionEstimator.mvEstimate(Picture,int,int)","13","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","10","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeHoris(Picture,int,int,int,int,int,int,int)","12","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC4 []"
"jcodec","11","org.jcodec.codecs.h264.encode.MBWriterI16x16.luma(EncodingContext,Picture,int,int,BitWriter,int,Picture,int,int[])","11","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","12","org.jcodec.codecs.h264.decode.SliceDecoder.decodeMacroblocks(Frame[][])","10","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","13","org.jcodec.codecs.h264.decode.MBlockDecoderBase.predictChromaInter(Frame[][],MvList,int,int,int,Picture,PartPred[])","9","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","14","org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode16x16(MBlock,Picture,Frame[][],PartPred)","8","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","15","org.jcodec.codecs.h264.decode.MBlockDecoderIntraNxN.decode(MBlock,Picture)","8","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCAVLC [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CABAC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","16","org.jcodec.codecs.h264.io.CAVLC.codeTableChromaDC()","8","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCAVLC [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","17","org.jcodec.common.io.VLC.invert(int,int,int,IntArrayList,IntArrayList)","8","org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testPlane [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CAVLC [],org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testVertical [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRef [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CABAC [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","18","org.jcodec.codecs.h264.decode.SliceDecoder.initContext()","8","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC3 []"
"jcodec","19","org.jcodec.codecs.h264.decode.PredictionMerger.weightPrediction(SliceHeader,int,int,byte[],int,int,int,int,byte[])","7","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","20","org.jcodec.codecs.h264.H264Encoder.encodeSlice(SeqParameterSet,PictureParameterSet,Picture,ByteBuffer,boolean,int,SliceType,int)","7","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","21","org.jcodec.codecs.h264.decode.MBlockDecoderBase.decodeChroma(MBlock,int,int,boolean,boolean,Picture,int)","6","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC3 []"
"jcodec","22","org.jcodec.common.model.Picture.createCropped(int,int,ColorSpace,Rect)","6","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC4 []"
"jcodec","23","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","6","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","24","org.jcodec.codecs.h264.decode.MBlock.clear()","6","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","25","org.jcodec.codecs.h264.decode.SliceReader.readResidualAC(boolean,boolean,int,MBType,int,int,int,int,int,int[])","6","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CABAC [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","26","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsV(Picture,int,int[][])","6","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","27","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPred(int,boolean,boolean,boolean,byte[],byte[],byte,int,int,byte[])","6","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","28","org.jcodec.codecs.h264.decode.MBlockDecoderInter.residualInter(MBlock,Frame[][],boolean,boolean,int,int,int)","5","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","29","org.jcodec.codecs.h264.io.CABAC.initModels(int[][],SliceType,int,int)","5","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInference [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRef []"
"jcodec","30","org.jcodec.containers.mps.MPSDemuxer.probe(ByteBuffer)","5","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteFast [],org.jcodec.movtool.MetadataEditorTest.testKeyedRead []"
"jcodec","31","org.jcodec.codecs.h264.decode.FrameReader.createSliceReader(ByteBuffer,NALUnit)","5","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CABAC [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC3 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialCAVLC []"
"jcodec","32","org.jcodec.codecs.h264.decode.CAVLCReader.readUEtrace(BitReader,String)","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC1 [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","33","org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.decodeSub8x8(MBlock,int,Picture[],int,int,int,int,int,int,boolean,boolean,boolean,boolean,MvList,int,int,int,int,int,Picture,int,int)","4","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","34","org.jcodec.codecs.h264.io.CAVLC.writeACBlock(BitWriter,int,int,MBType,MBType,int[],VLC[],int,int,int[])","4","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","35","org.jcodec.scale.RgbToYuv420j.transform(Picture,Picture)","4","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","36","org.jcodec.codecs.h264.io.CAVLC.readACBlock(BitReader,int[],int,int,boolean,MBType,boolean,MBType,int,int,int[])","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","37","org.jcodec.codecs.h264.H264Utils.unescapeNAL(ByteBuffer)","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.api.Issue380Test.testFrameGrabCanExtractOrientation []"
"jcodec","38","org.jcodec.codecs.h264.decode.SliceReader.readLuma(MBlock,boolean,boolean,int,int)","4","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInferenceCAVLC [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","39","org.jcodec.codecs.h264.encode.MotionEstimator.estimateQPix(Picture,byte[],int[],int,int)","4","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.MotionEstimatorTest.testMotionEstimator [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","40","org.jcodec.codecs.h264.encode.IntraPredEstimator.getLumaPred4x4(Picture,EncodingContext,int,int,int)","4","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","41","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsH(Picture,int,int[][])","4","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","42","org.jcodec.codecs.prores.ProresDecoder.readACCoeffs(BitReader,int[],int[],int,int[],int,int)","4","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing [],org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit [],org.jcodec.codecs.prores.ProresDecoderTest.testHalfSize2Frames [],org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames []"
"jcodec","43","org.jcodec.common.io.BitReader.readInt()","4","org.jcodec.common.io.BitStreamTest.testRandomNBit [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess []"
"jcodec","44","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.mergeResidual(Picture,int[][][],int[][],int[][])","3","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","45","org.jcodec.common.IntArrayList.fill(int,int,int)","3","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC1 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC []"
"jcodec","46","org.jcodec.codecs.h264.io.CAVLC.readCoeffs(BitReader,VLC,VLC[],int[],int,int,int[])","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","47","org.jcodec.codecs.h264.io.CAVLC.writeChrDCBlock(BitWriter,int[],VLC[],int,int,int[])","3","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","48","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBoundaryStrenth(boolean,boolean,boolean,int,int,int,int,int,int,int,int)","3","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","49","org.jcodec.codecs.h264.decode.BlockInterpolator.initUnsafe()","3","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInferenceCAVLC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","50","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma00Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","51","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillVerticalEdge(Picture,int,int,int[][])","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","52","org.jcodec.containers.mp3.MPEGAudioDemuxer.skipJunkBB(int,ByteBuffer)","3","org.jcodec.movtool.MetadataEditorTest.testInplace [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","53","org.jcodec.codecs.h264.io.CABAC.readCoeffs(MDecoder,BlockType,int[],int,int,int[],int[],int[])","3","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","54","org.jcodec.common.io.BitReader.checkNBitDontCare(int)","3","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame [],org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","55","org.jcodec.codecs.h264.decode.CAVLCReader.readSE(BitReader,String)","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","56","org.jcodec.codecs.h264.decode.SliceReader.readMacroblock(MBlock)","3","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","57","org.jcodec.scale.BaseResampler.resample(Picture,Picture)","3","org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","58","org.jcodec.codecs.h264.decode.SliceReader.readLuma8x8CAVLC(MBlock,boolean,boolean,int,int)","3","org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 []"
"jcodec","59","org.jcodec.codecs.h264.encode.MBWriterP16x16.chroma(EncodingContext,int[],int[],int,int,BitWriter,int)","3","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","60","org.jcodec.codecs.h264.decode.BlockInterpolator.getBlockLuma(Picture,Picture,int,int,int,int,int)","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","61","org.jcodec.codecs.png.PNGDecoder.decodeData(IHDR,PLTE,TRNS,List<ByteBuffer>,byte[][])","3","org.jcodec.codecs.png.PNGDecoderTest.testPNG [],org.jcodec.codecs.png.PNGEncoderTest.testPNG [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","62","org.jcodec.common.io.NIOUtils.toArray(ByteBuffer)","3","org.jcodec.containers.mp4.AppleGpsTest.testAppleGps [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit []"
"jcodec","63","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrack.getNextFrame(ByteBuffer)","2","org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames [],org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames []"
"jcodec","64","org.jcodec.codecs.h264.io.CAVLC.getCoeffTokenVLCForLuma(boolean,MBType,int,boolean,MBType,int)","2","org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","65","org.jcodec.codecs.h264.BufferH264ES.nextFrame()","2","org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC1 []"
"jcodec","66","org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode8x16(MBlock,Picture,Frame[][],PartPred,PartPred)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","67","org.jcodec.codecs.h264.decode.MBlockDecoderIntra16x16.residualLumaI16x16(MBlock,boolean,boolean,int,int)","2","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","68","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02NoRoundInt(int[],int,int[],int,int,int,int,int,int)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","69","org.jcodec.containers.mp4.boxes.AudioSampleEntry.getEndian()","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","70","org.jcodec.codecs.h264.io.CAVLC.writeBlockGen(BitWriter,int[],VLC[],int,int,int[],VLC)","2","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","71","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDC(int[][],int,boolean,boolean,byte[],byte[],byte[])","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","72","org.jcodec.common.IntArrayList.set(int,int)","2","org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC3 []"
"jcodec","73","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.collectPredictors(DecoderState,Picture,int)","2","org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","74","org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.decode(MBlock,Frame[][],Picture,SliceType,boolean)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","75","org.jcodec.containers.mkv.MKVType.createByType(MKVType)","2","org.jcodec.containers.mkv.CompareFramesTest.testFramesByTrack [],org.jcodec.containers.mkv.MKVDemuxerTest._testSubtitle []"
"jcodec","76","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictHorizontal(int[][],boolean,byte[],int,byte[])","2","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","77","org.jcodec.codecs.h264.encode.MBEncoderHelper.putBlkPic(Picture,Picture,int,int)","2","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 []"
"jcodec","78","org.jcodec.common.model.Picture.getPlaneData(int)","2","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CAVLC []"
"jcodec","79","org.jcodec.codecs.h264.H264Encoder.encodeCand(EncodingContext,EncodedMB,SliceType,Picture,int,int,BitWriter,NonRdVector,RdVector)","2","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","80","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma12(byte[],int,byte[],int,int,int,int,int,int)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","81","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.lumaHorizontalPredSAD(boolean,byte[],int,byte[])","2","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","82","org.jcodec.codecs.h264.decode.CoeffTransformer._idct4x4(int[],int[])","2","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","83","org.jcodec.codecs.mpeg4.MPEG4Bitstream.initVLCTables()","2","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame [],org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","84","org.jcodec.codecs.h264.io.CAVLC.writeRuns(BitWriter,int[],int,int)","2","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","85","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictPlane(int[][],boolean,boolean,byte[],byte[],byte[],int,byte[])","2","org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","86","org.jcodec.codecs.common.biari.MDecoder.readOneByte()","2","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC1 []"
"jcodec","87","org.jcodec.containers.mkv.demuxer.MKVDemuxer.probe(ByteBuffer)","2","org.jcodec.movtool.MetadataEditorTest.testKeyedRead [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","88","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictDiagonalDownRight(int[],boolean,byte[],byte[],byte[],int,int,int,byte[])","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","89","org.jcodec.codecs.h264.decode.MBlockSkipDecoder.predictPSkip(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,Picture)","2","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","90","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveVect(MvList,int,int,int,int)","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","91","org.jcodec.containers.mxf.model.UL.toString()","2","org.jcodec.containers.mxf.MXFDemuxerTest.testOneMore [],org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset2 []"
"jcodec","92","org.jcodec.codecs.h264.decode.CoeffTransformer.fvdDC4x4(int[])","2","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","93","org.jcodec.codecs.h264.decode.BlockInterpolator.initSafe()","2","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 []"
"jcodec","94","org.jcodec.codecs.h264.encode.MBWriterINxN.lumaAnal(EncodingContext,Picture,int,int,BitWriter,int,EncodedMB,int[],int[][])","2","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","95","org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma0XUnsafe(byte[],int,int,byte[],int,int,int,int,int,int,int)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","96","org.jcodec.common.tools.MathUtil.clip(int,int,int)","2","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CABAC []"
"jcodec","97","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma32(byte[],int,byte[],int,int,int,int,int,int)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","98","org.jcodec.common.IntIntMap.put(int,int)","2","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC2 []"
"jcodec","99","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictVertical(int[][],int,boolean,byte[],byte[])","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","100","org.jcodec.codecs.h264.H264Utils.gotoNALUnitWithArray(ByteBuffer)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","101","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predHorizontalSAD(int,boolean,byte[],byte[])","2","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","102","org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaXX(byte[],int,int,byte[],int,int,int,int,int,int,int,int)","2","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","103","org.jcodec.codecs.h264.decode.SliceReader.readIntraNxN(MBlock)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","104","org.jcodec.common.IntArrayList.toArray()","2","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CAVLC []"
"jcodec","105","org.jcodec.codecs.h264.decode.SliceReader.readPrediction8x8P(MBlock,int,boolean,boolean)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","106","org.jcodec.codecs.h264.encode.MBDeblocker.deblockMBP(EncodedMB,EncodedMB,EncodedMB)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","107","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20(byte[],int,byte[],int,int,int,int,int,int)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MotionEstimatorTest.testMotionEstimator []"
"jcodec","108","org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.predict8x8P(MBlock,Picture[],Picture,boolean,int,int,boolean,boolean,boolean,boolean,MvList,PartPred[])","2","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInference [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","109","org.jcodec.codecs.h264.decode.SliceDecoder.decodeMBlockIInt(MBlock,Picture)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","110","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int,boolean)","2","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC5 []"
"jcodec","111","org.jcodec.codecs.h264.decode.SliceReader.readChromaResidual(MBlock,boolean,boolean,int)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","112","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictDC(int[][],boolean,boolean,byte[],byte[],int,byte[])","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","113","org.jcodec.codecs.h264.decode.CAVLCReader.readZeroBitCount(BitReader,String)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","114","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.getIdxBeta(int,int)","1","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","115","org.jcodec.codecs.h264.decode.CAVLCReader.readNBit(BitReader,int,String)","1","org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC2 []"
"jcodec","116","org.jcodec.containers.mp4.muxer.CodecMP4MuxerTrack.addAudioSampleEntry(AudioFormat)","1","org.jcodec.movtool.StripTest.testIntervals []"
"jcodec","117","org.jcodec.codecs.h264.decode.MBlockDecoderBase.chromaAC(boolean,boolean,int,int,int[],int,int,MBType,boolean,int[][])","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","118","org.jcodec.codecs.mpeg4.MPEG4Interpolator.vertMiddle16Safe(byte[],byte[],int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","119","org.jcodec.common.io.VLCBuilder.set(int,String)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC []"
"jcodec","120","org.jcodec.codecs.h264.decode.SliceReader.read16x16DC(boolean,boolean,int,int[])","1","org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC4 []"
"jcodec","121","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSubtract(byte[],int,int,int,int,int[],byte[],int,int)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","122","org.jcodec.codecs.mpeg4.MPEG4BiRenderer.mergePred(Macroblock)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","123","org.jcodec.common.model.Picture.createPicture(int,int,byte[][],ColorSpace)","1","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC4 []"
"jcodec","124","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRound(byte[],int,int[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","125","org.jcodec.common.io.BitWriter.putInt(int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","126","org.jcodec.codecs.vpx.VP8DCT.decodeDCT(short[])","1","org.jcodec.codecs.vp8.DCTTest.testDCT []"
"jcodec","127","org.jcodec.codecs.h264.decode.PredictionMerger.mergePrediction(SliceHeader,int,int,PartPred,int,byte[],byte[],int,int,int,int,byte[],Frame[][],int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","128","org.jcodec.codecs.h264.io.CABAC.codedBlockPatternIntra(MDecoder,boolean,boolean,int,int,MBType,MBType)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","129","org.jcodec.codecs.mpeg4.MPEG4DecodingContext.readHeaders(ByteBuffer)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","130","org.jcodec.common.io.BitReader.readIntSafe()","1","org.jcodec.common.io.BitStreamTest.testRandomNBit []"
"jcodec","131","org.jcodec.codecs.h264.decode.MBlockSkipDecoder.decodeChromaSkip(Frame[][],MvList,PartPred[],int,int,Picture)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","132","org.jcodec.codecs.h264.encode.MotionEstimator.sad(byte[],int,byte[],int,int)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","133","org.jcodec.codecs.h264.decode.SliceReader.readResidualInter(MBlock,boolean,boolean,int,int)","1","org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","134","org.jcodec.codecs.h264.decode.MBlockDecoderInter.calcMVPrediction16x8Bottom(int,int,int,int,boolean,boolean,boolean,boolean,int,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","135","org.jcodec.codecs.h264.decode.CAVLCReader.readUE(BitReader)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","136","org.jcodec.codecs.h264.io.CABAC.readMVD(MDecoder,int,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","137","org.jcodec.codecs.mpeg4.MPEG4Interpolator.horzMiddle8(byte[],int,byte[],int,int,int,int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","138","org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeDC2x2(int[],int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","139","org.jcodec.codecs.h264.decode.SliceDecoder.decodeMBlockP(MBlock,Picture,Frame[][])","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","140","org.jcodec.codecs.h264.decode.PredictionMerger.mergeWeight(byte[],byte[],int,PartPred,int,int,int,int,int,int,int,int,byte[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","141","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma23Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","142","org.jcodec.codecs.mpeg4.MPEG4Bitstream.getPMV2(MPEG4DecodingContext,int,int,int,int,Macroblock,Macroblock,Macroblock,Macroblock)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","143","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictHorizontal(int[],boolean,byte[],byte[],int,int,int,byte[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","144","org.jcodec.codecs.png.PNGDecoder.filterUp(byte[],int,byte[])","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","145","org.jcodec.codecs.h264.decode.SliceReader.readMBlockI(MBlock)","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","146","org.jcodec.codecs.h264.decode.SliceReader.readChromaAC(boolean,boolean,int,int,MBType,int[],int,int,int)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","147","org.jcodec.codecs.h264.io.CAVLC.writeLevels(BitWriter,int[],int,int)","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","148","org.jcodec.common.dct.IntDCT.prepare_range_limit_table()","1","org.jcodec.common.dct.IntDCTTest.testRangeLimit []"
"jcodec","149","org.jcodec.containers.mkv.demuxer.MKVDemuxer.demux()","1","org.jcodec.containers.mkv.MKVDemuxerTest.showAll []"
"jcodec","150","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma12Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","151","org.jcodec.codecs.h264.decode.CoeffTransformer.fvdDC2x2(int[])","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","152","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.savePrediction8x8(DecoderState,int,MvList)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","153","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictHorizontal(int[],boolean,byte[],int,int,int,byte[])","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess []"
"jcodec","154","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillHorizontalEdge(Picture,int,int,int[][])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","155","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predVerticalSAD(int,boolean,byte[],byte[])","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","156","org.jcodec.codecs.h264.encode.MBWriterP16x16.encodeMacroblock(EncodingContext,Picture,int,int,BitWriter,EncodedMB,int,NonRdVector)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","157","org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter8x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,PartPred,PartPred)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","158","org.jcodec.containers.mp4.boxes.PixelAspectExt.parse(ByteBuffer)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","159","org.jcodec.codecs.h264.io.CABAC.readRefIdx(MDecoder,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","160","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","161","org.jcodec.codecs.h264.decode.SliceReader.readPredictionI4x4Block(boolean,boolean,MBType,MBType,int,int,int)","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","162","org.jcodec.containers.mp4.BoxFactory.newBox(Header)","1","org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames []"
"jcodec","163","org.jcodec.codecs.h264.encode.CQPRateControl.initialQpDelta(Picture,int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","164","org.jcodec.containers.mxf.model.TimelineTrack.read(Map<Integer,ByteBuffer>)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset2 []"
"jcodec","165","org.jcodec.codecs.h264.decode.SliceReader.readLumaAC8x8(int,int,int[])","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 []"
"jcodec","166","org.jcodec.common.io.BitWriter.writeOther(BitWriter)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","167","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 []"
"jcodec","168","org.jcodec.codecs.h264.encode.MBWriterI16x16.putChroma(byte[],int,int,int,int[][],byte[][])","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","169","org.jcodec.common.IntIntMap.createArray(int)","1","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC3 []"
"jcodec","170","org.jcodec.common.dct.SimpleIDCT10Bit.idct10(int[],int)","1","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","171","org.jcodec.codecs.mpa.MpaPqmf.computeFilter(int,float[],short[],int,float)","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","172","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.interpolateTop(boolean,boolean,byte[],byte[],int,int,byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","173","org.jcodec.containers.mp4.boxes.MediaHeaderBox.doWrite(ByteBuffer)","1","org.jcodec.movtool.MoovVersionsTest.testAddVersion []"
"jcodec","174","org.jcodec.codecs.png.PNGDecoder.filterPaeth(byte[],int,byte[],int)","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","175","org.jcodec.codecs.h264.encode.MotionEstimator.estimateFullPix(Picture,byte[],int,int,int,int)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","176","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma01Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","177","org.jcodec.codecs.h264.io.CAVLC.fork()","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","178","org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeAC(int[],int,int[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","179","org.jcodec.codecs.h264.H264Utils.escapeNAL(ByteBuffer,ByteBuffer)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","180","org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaX0Unsafe(byte[],int,int,byte[],int,int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","181","org.jcodec.containers.mp3.MPEGAudioDemuxer.readFrame(ByteBuffer)","1","org.jcodec.containers.mp3.MPEGAudioDemuxerTest.testParseCBR []"
"jcodec","182","org.jcodec.codecs.h264.H264Utils.parseAVCCFromBuffer(ByteBuffer)","1","org.jcodec.containers.mkv.MKVDemuxerTest._testVideo []"
"jcodec","183","org.jcodec.containers.mp4.boxes.TrackHeaderBox.readMatrix(ByteBuffer)","1","org.jcodec.containers.mp4.AppleGpsTest.testAppleGps2Meta []"
"jcodec","184","org.jcodec.containers.mp4.MP4Util.getRootAtoms(SeekableByteChannel)","1","org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit []"
"jcodec","185","org.jcodec.scale.LanczosResampler.buildTaps(int,int,double,short[][])","1","org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","186","org.jcodec.codecs.h264.io.model.Frame.createFrame(Frame)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","187","org.jcodec.codecs.h264.encode.EncodingContext.fork()","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","188","org.jcodec.scale.Yuv420pToRgb.transform(Picture,Picture)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","189","org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode16x8(MBlock,Picture,Frame[][],PartPred,PartPred)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","190","org.jcodec.containers.mp4.boxes.TimeToSampleBox.parse(ByteBuffer)","1","org.jcodec.movtool.MoovVersionsTest.testUndo []"
"jcodec","191","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma32Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","192","org.jcodec.common.ArrayUtil.swap(int[],int,int)","1","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit []"
"jcodec","193","org.jcodec.codecs.h264.decode.SliceReader.readInter16x16(PartPred,MBlock)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","194","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictVertical(int[],boolean,byte[],int,int,int,byte[])","1","org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 []"
"jcodec","195","org.jcodec.codecs.h264.encode.MBEncoderHelper.take(byte[],int,int,int,int,byte[],int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","196","org.jcodec.codecs.h264.decode.SliceDecoder.decodeFromReader(SliceReader)","1","org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC1 []"
"jcodec","197","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.getAudioCodecMeta(AbstractMP4DemuxerTrack,MP4TrackType)","1","org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit []"
"jcodec","198","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.getCodecPrivateOpaque(Codec,SampleEntry)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","199","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predSAD(int,int,boolean,boolean,byte[],byte[],byte,byte[])","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","200","org.jcodec.codecs.h264.H264Decoder.createFrame(SeqParameterSet,byte[][],int,SliceType,MvList2D,Frame[][][],int)","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 []"
"jcodec","201","org.jcodec.codecs.mpeg4.MPEG4Bitstream.readCoeffIntra(BitReader,MPEG4DecodingContext,Macroblock,Macroblock,Macroblock,Macroblock)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","202","org.jcodec.containers.mp3.MPEGAudioDemuxer.validHeader(int)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","203","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode []"
"jcodec","204","org.jcodec.codecs.h264.decode.MBlockDecoderBDirect.predictBSpatialDirect(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,PartPred[],Picture,int[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","205","org.jcodec.common.StringUtils.splitWorker(String,char,boolean)","1","org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames []"
"jcodec","206","org.jcodec.codecs.mpeg4.MPEG4BiRenderer.renderOneDir(MPEG4DecodingContext,Macroblock,boolean,Picture,Vector[],int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","207","org.jcodec.codecs.h264.decode.aso.FlatMBlockMapper.topRightAvailable(int)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","208","org.jcodec.codecs.h264.BufferH264ES.readSliceHeader(ByteBuffer,NALUnit)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testSpatialDirect []"
"jcodec","209","org.jcodec.codecs.mpeg4.MPEG4Interpolator.fulpel8x8(byte[],int,int,byte[],int,int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","210","org.jcodec.codecs.h264.decode.CoeffTransformer.idct8x8(int[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","211","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRoundInt(int[],int,int[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","212","org.jcodec.codecs.common.biari.MDecoder.renormalize()","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","213","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.codecs.h264.encode.MotionEstimatorTest.testMotionEstimator []"
"jcodec","214","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma33(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","215","org.jcodec.common.model.Picture.getCroppedWidth()","1","org.jcodec.codecs.png.PNGEncoderTest.testPNG []"
"jcodec","216","org.jcodec.codecs.h264.decode.MBlockSkipDecoder.decodeSkip(MBlock,Frame[][],Picture,SliceType)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","217","org.jcodec.containers.mp4.demuxer.MP4Demuxer.findMovieBox(SeekableByteChannel)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","218","org.jcodec.codecs.png.PNGEncoder.encodeFrame(Picture,ByteBuffer)","1","org.jcodec.codecs.png.PNGEncoderTest.testPNG []"
"jcodec","219","org.jcodec.platform.Platform.newInstance(Class<T>,Object[])","1","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset2 []"
"jcodec","220","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma10Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","221","org.jcodec.containers.mp4.MP4Util.parseFullMovieChannel(SeekableByteChannel)","1","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testDefaultSampleSize []"
"jcodec","222","org.jcodec.codecs.h264.decode.SliceReader.readMVD(int,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CABAC []"
"jcodec","223","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","224","org.jcodec.containers.mp4.muxer.MP4MuxerTrack.finish(MovieHeaderBox)","1","org.jcodec.movtool.StripTest.testMultipleStrips []"
"jcodec","225","org.jcodec.codecs.h264.decode.SliceReader._readChromaAC(boolean,boolean,int,int[],int,MBType,boolean,int[][])","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","226","org.jcodec.codecs.h264.encode.MBWriterI16x16.transform(Picture,int,int[][],byte[][],int,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","227","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictHorizontalUp(int[],boolean,byte[],int,int,int,byte[])","1","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess []"
"jcodec","228","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma21(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation []"
"jcodec","229","org.jcodec.codecs.h264.H264Encoder.doEncodeFrame(Picture,ByteBuffer,boolean,int,SliceType)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","230","org.jcodec.codecs.mjpeg.tools.Asserts.assertEpsilonEquals(byte[],byte[],int)","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","231","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.getIdxAlpha(int,int)","1","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC3 []"
"jcodec","232","org.jcodec.codecs.h264.decode.SliceReader.readInter16x8(PartPred,PartPred,MBlock)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","233","org.jcodec.common.model.Picture.fromPictureHiBD(PictureHiBD)","1","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing10Bit []"
"jcodec","234","org.jcodec.codecs.h264.decode.SliceReader.readMBlock8x8(MBlock)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","235","org.jcodec.codecs.h264.decode.MBlockDecoderIntra16x16.decode(MBlock,Picture)","1","org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC1 []"
"jcodec","236","org.jcodec.codecs.h264.encode.MBDeblocker.filterBsChr(int,int,int,byte[],byte[],int,int,int,int)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","237","org.jcodec.common.ArrayUtil.fill1D(short[],short[],int)","1","org.jcodec.codecs.vpx.vp9.ResidualTest.testResidualIntraBlk928x8 []"
"jcodec","238","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.lumaPredDC(boolean,boolean,byte[],byte[],byte,int,int,byte[])","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","239","org.jcodec.codecs.h264.io.CAVLC.writeLumaDCBlock(BitWriter,int,int,MBType,MBType,int[],VLC[],int,int,int[])","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
