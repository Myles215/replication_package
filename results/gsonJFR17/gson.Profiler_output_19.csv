"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","4","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","2","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","3","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidDay [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseSpecialTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithDefaultTimezone [gson]"
"gson","3","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","3","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithMilliseconds [gson]"
"gson","4","com.google.gson.internal.Streams.parse(JsonReader)","2","com.google.gson.internal.bind.JsonElementReaderTest.testStrings [gson],com.google.gson.JsonParserTest.testParseEmptyString [gson]"
"gson","5","com.google.gson.Gson.getAdapter(TypeToken<T>)","2","com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry [gson],com.google.gson.functional.Java17RecordTest.testAccessorIsCalled [gson]"
"gson","6","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","2","com.google.gson.internal.bind.RecursiveTypesResolveTest.testRecursiveResolveSimple [gson],com.google.gson.functional.RawSerializationTest.testParameterizedObject [gson]"
"gson","7","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","2","com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming [gson]"
"gson","8","com.google.gson.internal.ConstructorConstructor.get(TypeToken<T>)","2","com.google.gson.functional.MapTest.testMapSubclassSerialization [gson],com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys [gson]"
"gson","9","com.google.gson.internal.Excluder.excludeField(Field,boolean)","2","com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization [gson],com.google.gson.functional.VersioningTest.testVersionedClassesSerialization [gson]"
"gson","10","com.google.gson.internal.bind.ObjectTypeAdapter.newFactory(ToNumberStrategy)","2","com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject [gson],com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails [gson]"
"gson","11","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.EscapingTest.testEscapingObjectFields [gson]"
"gson","12","com.google.gson.internal.Excluder.isAnonymousOrNonStaticLocal(Class<?>)","1","com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper [gson]"
"gson","13","com.google.gson.stream.JsonReader.beginObject()","1","com.google.gson.stream.JsonReaderTest.testStrictSingleQuotedNamesWithSkipValue [gson]"
"gson","14","com.google.gson.stream.JsonWriter.beforeValue()","1","com.google.gson.functional.ArrayTest.testMultidimensionalObjectArraysSerialization [gson]"
"gson","15","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,Method,String,TypeToken<?>,boolean,boolean,boolean)","1","com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree [gson]"
"gson","16","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","1","com.google.gson.functional.MapTest.testSerializeMapOfMaps [gson]"
"gson","17","com.google.gson.stream.JsonReader.doPeek()","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","18","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","1","com.google.gson.functional.FieldNamingTest.testUpperCaseWithUnderscores [gson]"
"gson","19","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.PrimitiveTest.testByteDeserializationLossy [gson]"
"gson","20","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>,FilterResult)","1","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testNullSafeObjectFromJson [gson]"
"gson","21","com.google.gson.stream.JsonReader.hasNext()","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
