"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","4","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidDay [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseSpecialTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidMonth [gson]"
"gson","2","com.google.gson.Gson.getAdapter(TypeToken<T>)","4","com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization [gson],com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization [gson],com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization [gson]"
"gson","3","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","3","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithMilliseconds [gson]"
"gson","4","com.google.gson.stream.JsonReader.peek()","2","com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicLong [gson],com.google.gson.functional.MapTest.testNumberKeyDeserialization [gson]"
"gson","5","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","2","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson]"
"gson","6","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","2","com.google.gson.functional.VersioningTest.testVersionedClassesSerialization [gson],com.google.gson.functional.Java17RecordTest.testFirstNameIsChosenForSerialization [gson]"
"gson","7","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","2","com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization [gson],com.google.gson.JavaSerializationTest.testNumberIsSerializable [gson]"
"gson","8","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>,FilterResult)","2","com.google.gson.functional.FormattingStyleTest.testFormatPrettySingleLine [gson],com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization [gson]"
"gson","9","com.google.gson.internal.ReflectionAccessFilterHelper.getFilterResult(List<ReflectionAccessFilter>,Class<?>)","2","com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy [gson],com.google.gson.functional.MapTest.testMapSerializationWithNullValues [gson]"
"gson","10","com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)","2","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson],com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","11","com.google.gson.stream.JsonReader.doPeek()","2","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson],com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails [gson]"
"gson","12","com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables [gson]"
"gson","13","com.google.gson.FieldAttributes.getAnnotation(Class<T>)","1","com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization [gson]"
"gson","14","com.google.gson.internal.bind.NumberTypeAdapter.newFactory(ToNumberStrategy)","1","com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization [gson]"
"gson","15","com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(String)","1","com.google.gson.FieldNamingPolicyTest.testUpperCaseFirstLetter [gson]"
"gson","16","com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(Type,Class<?superT>)","1","com.google.gson.functional.RawSerializationTest.testCollectionOfObjects [gson]"
"gson","17","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings [gson]"
"gson","18","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","1","com.google.gson.functional.UncategorizedTest.testTrailingWhitespace [gson]"
"gson","19","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization [gson]"
"gson","20","com.google.gson.stream.JsonWriter.string(String)","1","com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration [gson]"
"gson","21","com.google.gson.stream.JsonReader.fillBuffer(int)","1","com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization [gson]"
"gson","22","com.google.gson.reflect.TypeToken.get(Type)","1","com.google.gson.MixedStreamTest.testReadClosed [gson]"
"gson","23","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","1","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter [gson]"
"gson","24","com.google.gson.Gson.fromJson(String,Class<T>)","1","com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization [gson]"
"gson","25","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","1","com.google.gson.functional.SerializedNameTest.testMultipleNamesDeserializedCorrectly [gson]"
"gson","26","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","1","com.google.gson.functional.RawSerializationTest.testParameterizedObject [gson]"
"gson","27","com.google.gson.internal.Excluder.excludeField(Field,boolean)","1","com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization [gson]"
