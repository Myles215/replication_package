"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","3","com.google.gson.functional.CollectionTest.testSetDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical [gson]"
"gson","2","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","3","com.google.gson.functional.MapTest.testConcurrentSkipListMap [gson],com.google.gson.functional.JsonParserTest.testExtraCommasInArrays [gson],com.google.gson.functional.CollectionTest.testLinkedListDeserialization [gson]"
"gson","3","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","3","com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization [gson],com.google.gson.functional.PrimitiveTest.testDoubleSerialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper [gson]"
"gson","4","com.google.gson.internal.Excluder.isAnonymousOrNonStaticLocal(Class<?>)","2","com.google.gson.functional.ReflectionAccessFilterTest.testBlockInaccessibleJava [gson],com.google.gson.functional.FormattingStyleTest.testFormat [gson]"
"gson","5","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","2","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidTime [gson]"
"gson","6","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","2","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithMilliseconds [gson]"
"gson","7","com.google.gson.internal.bind.TreeTypeAdapter.read(JsonReader)","2","com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization [gson]"
"gson","8","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","2","com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant [gson],com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization [gson]"
"gson","9","com.google.gson.Gson.toJson(Object,Type,JsonWriter)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter [gson]"
"gson","10","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.MixedStreamTest.testReadMixedStreamed [gson]"
"gson","11","com.google.gson.internal.Streams.parse(JsonReader)","1","com.google.gson.internal.bind.JsonElementReaderTest.testEmptyObject [gson]"
"gson","12","com.google.gson.stream.JsonReader.peek()","1","com.google.gson.internal.bind.JsonElementReaderTest.testNumbers [gson]"
"gson","13","com.google.gson.Gson.toJsonTree(Object)","1","com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization [gson]"
"gson","14","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","1","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","15","com.google.gson.stream.JsonWriter.beforeValue()","1","com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization [gson]"
"gson","16","com.google.gson.internal.reflect.ReflectionHelper.tryMakeAccessible(Constructor<?>)","1","com.google.gson.functional.CollectionTest.testIssue1107 [gson]"
"gson","17","com.google.gson.JsonParser.parseReader(JsonReader)","1","com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose [gson]"
"gson","18","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","1","com.google.gson.functional.ObjectTest.testSingletonLists [gson]"
"gson","19","com.google.gson.stream.JsonReader.doPeek()","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","20","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","1","com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialized [gson]"
"gson","21","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","1","com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter [gson]"
"gson","22","com.google.gson.internal.ConstructorConstructor.get(TypeToken<T>)","1","com.google.gson.functional.MapTest.testMapSerialization [gson]"
"gson","23","com.google.gson.internal.bind.ObjectTypeAdapter.newFactory(ToNumberStrategy)","1","com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation [gson]"
