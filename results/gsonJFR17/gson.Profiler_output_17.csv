"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","5","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidDay [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidMonth [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithDefaultTimezone [gson]"
"gson","2","com.google.gson.internal.Excluder.excludeField(Field,boolean)","3","com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization [gson],com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization [gson],com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization [gson]"
"gson","3","com.google.gson.Gson.getAdapter(TypeToken<T>)","2","com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization [gson],com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields [gson]"
"gson","4","com.google.gson.stream.JsonReader.peek()","2","com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization [gson],com.google.gson.stream.JsonReaderTest.testDeeplyNestedObjects [gson]"
"gson","5","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","2","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson]"
"gson","6","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","2","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithMilliseconds [gson]"
"gson","7","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","2","com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization [gson],com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes [gson]"
"gson","8","com.google.gson.Gson.fromJson(String,Class<T>)","2","com.google.gson.functional.ObjectTest.testNullFieldsDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant [gson]"
"gson","9","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter [gson]"
"gson","10","com.google.gson.internal.Excluder.isAnonymousOrNonStaticLocal(Class<?>)","1","com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization [gson]"
"gson","11","com.google.gson.internal.Streams.parse(JsonReader)","1","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson]"
"gson","12","com.google.gson.internal.bind.ObjectTypeAdapter.read(JsonReader)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","13","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","1","com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization [gson]"
"gson","14","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization [gson]"
"gson","15","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives [gson]"
"gson","16","com.google.gson.internal.bind.ObjectTypeAdapter.newFactory(ToNumberStrategy)","1","com.google.gson.functional.ObjectTest.testNullArraysDeserialization [gson]"
"gson","17","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization [gson]"
"gson","18","com.google.gson.stream.JsonReader.push(int)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","19","com.google.gson.stream.JsonWriter.string(String)","1","com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization [gson]"
"gson","20","com.google.gson.Gson.toJson(Object,Type,JsonWriter)","1","com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays [gson]"
"gson","21","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization [gson]"
"gson","22","com.google.gson.TypeAdapter.toJson(T)","1","com.google.gson.GsonTest.testGetAdapter_FutureAdapterConcurrency [gson]"
"gson","23","com.google.gson.stream.JsonReader.nextUnquotedValue()","1","com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedString [gson]"
"gson","24","com.google.gson.stream.JsonReader.beginObject()","1","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson]"
"gson","25","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","1","com.google.gson.functional.MapTest.testMapDeserialization [gson]"
"gson","26","com.google.gson.internal.JavaVersion.parseDotted(String)","1","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","27","com.google.gson.stream.JsonReader.syntaxError(String)","1","com.google.gson.stream.JsonReaderTest.testStrictVeryLongNumber [gson]"
"gson","28","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","1","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation [gson]"
"gson","29","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming [gson]"
