"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","7","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","2","com.google.gson.Gson.getAdapter(TypeToken<T>)","6","com.google.gson.functional.MapTest.testInterfaceTypeMap [gson],com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls [gson],com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization [gson],com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization [gson]"
"gson","3","com.google.gson.internal.Streams.parse(JsonReader)","3","com.google.gson.JsonStreamParserTest.testParseTwoStrings [gson],com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails [gson],com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue [gson]"
"gson","4","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","2","com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization [gson],com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields [gson]"
"gson","5","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","2","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseSpecialTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidMonth [gson]"
"gson","6","com.google.gson.stream.JsonReader.peek()","2","com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt [gson]"
"gson","7","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","2","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson]"
"gson","8","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","2","com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization [gson],com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader [gson]"
"gson","9","com.google.gson.internal.Streams.write(JsonElement,JsonWriter)","2","com.google.gson.JsonArrayTest.testBooleanPrimitiveAddition [gson],com.google.gson.internal.bind.JsonTreeWriterTest.testObject [gson]"
"gson","10","com.google.gson.GsonBuilder.addTypeAdaptersForDate(String,int,int,List<TypeAdapterFactory>)","2","com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers [gson],com.google.gson.functional.FormattingStyleTest.testFormatCompact [gson]"
"gson","11","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","2","com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization [gson],com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization [gson]"
"gson","12","com.google.gson.internal.Excluder.isAnonymousOrNonStaticLocal(Class<?>)","1","com.google.gson.functional.FormattingStyleTest.testFormat [gson]"
"gson","13","com.google.gson.internal.reflect.ReflectionHelper.tryMakeAccessible(Constructor<?>)","1","com.google.gson.MixedStreamTest.testWriteMixedStreamed [gson]"
"gson","14","com.google.gson.internal.bind.NumberTypeAdapter.newFactory(ToNumberStrategy)","1","com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper [gson]"
"gson","15","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap [gson]"
"gson","16","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization [gson]"
"gson","17","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.MapTest.testMapOfMapDeserialization [gson]"
"gson","18","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.ReflectionAccessFilterTest.testBlockAllJavaExtendingJdkClass [gson]"
"gson","19","com.google.gson.stream.JsonWriter.open(int,char)","1","com.google.gson.GsonTest.testDefaultGsonNewBuilderModification [gson]"
"gson","20","com.google.gson.internal.bind.MapTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.internal.bind.Java17ReflectiveTypeAdapterFactoryTest.testCustomAdapterForRecords [gson]"
"gson","21","com.google.gson.internal.Excluder.excludeClassChecks(Class<?>)","1","com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization [gson]"
"gson","22","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,Method,String,TypeToken<?>,boolean,boolean,boolean)","1","com.google.gson.functional.InheritanceTest.testSubClassDeserialization [gson]"
"gson","23","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical [gson]"
"gson","24","com.google.gson.stream.JsonReader.doPeek()","1","com.google.gson.JsonParserTest.testParseDeeplyNestedArrays [gson]"
"gson","25","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","1","com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType [gson]"
"gson","26","com.google.gson.internal.Excluder.excludeField(Field,boolean)","1","com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields [gson]"
