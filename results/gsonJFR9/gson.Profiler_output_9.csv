"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.reflect.UnsafeReflectionAccessor.makeAccessibleWithUnsafe(AccessibleObject)","37","com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization [gson],com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization [gson],com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson],com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization [gson],com.google.gson.MixedStreamTest.testWriteMixedStreamed [gson],com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables [gson],com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization [gson],com.google.gson.functional.ReadersWritersTest.testWriterForSerialization [gson],com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization [gson],com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues [gson],com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization [gson],com.google.gson.functional.JsonTreeTest.testJsonTreeNull [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter [gson],com.google.gson.functional.SerializedNameTest.testMultipleNamesDeserializedCorrectly [gson],com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization [gson],com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause [gson],com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize [gson],com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization [gson],com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields [gson],com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization [gson],com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap [gson],com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testNullSafeObjectFromJson [gson],com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation [gson],com.google.gson.regression.JsonAdapterNullSafeTest.testNullSafeBugDeserialize [gson],com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod [gson],com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields [gson]"
"gson","2","com.google.gson.internal.reflect.UnsafeReflectionAccessor.getUnsafeInstance()","7","com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization [gson],com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization [gson],com.google.gson.functional.ObjectTest.testJsonObjectSerialization [gson]"
"gson","3","com.google.gson.GsonBuilder.create()","7","com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization [gson],com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays [gson],com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization [gson],com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers [gson],com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization [gson]"
"gson","4","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","7","com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry [gson],com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization [gson],com.google.gson.functional.MapTest.testComplexKeysDeserialization [gson],com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers [gson],com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization [gson],com.google.gson.functional.InheritanceTest.testSubClassSerialization [gson]"
"gson","5","com.google.gson.internal.Streams.parse(JsonReader)","3","com.google.gson.internal.bind.JsonElementReaderTest.testWrongType [gson],com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays [gson]"
"gson","6","com.google.gson.Gson.newJsonReader(Reader)","3","com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault [gson],com.google.gson.functional.MapTest.testBooleanKeyDeserialization [gson]"
"gson","7","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","3","com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization [gson],com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization [gson],com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects [gson]"
"gson","8","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","3","com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical [gson],com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter [gson]"
"gson","9","com.google.gson.Gson.getAdapter(TypeToken<T>)","2","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize1dArray [gson]"
"gson","10","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","2","com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization [gson],com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization [gson]"
"gson","11","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","2","com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber [gson],com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject [gson]"
"gson","12","com.google.gson.util.VersionUtils.determineMajorJavaVersion()","2","com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation [gson]"
"gson","13","com.google.gson.stream.JsonReader.peek()","1","com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive [gson]"
"gson","14","com.google.gson.Gson.toJson(Object,Type,Appendable)","1","com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass [gson]"
"gson","15","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>)","1","com.google.gson.internal.bind.RecursiveTypesResolveTest.testIssue603PrintStream [gson]"
"gson","16","com.google.gson.reflect.TypeToken.hashCode()","1","com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization [gson]"
"gson","17","com.google.gson.internal.Excluder.create(Gson,TypeToken<T>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe [gson]"
"gson","18","com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(Type,Class<?superT>)","1","com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields [gson]"
"gson","19","com.google.gson.FieldNamingPolicy.separateCamelCase(String,String)","1","com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes [gson]"
"gson","20","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization [gson]"
"gson","21","com.google.gson.internal.LinkedTreeMap.rebalance(Node<K,V>,boolean)","1","com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers [gson]"
"gson","22","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","1","com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType [gson]"
"gson","23","com.google.gson.JsonParser.parse(Reader)","1","com.google.gson.internal.bind.JsonElementReaderTest.testObject [gson]"
"gson","24","com.google.gson.stream.JsonWriter.string(String)","1","com.google.gson.MixedStreamTest.testWriteDoesNotMutateState [gson]"
"gson","25","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault [gson]"
"gson","26","com.google.gson.internal.UnsafeAllocator.create()","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject [gson]"
"gson","27","com.google.gson.stream.JsonReader.nextUnquotedValue()","1","com.google.gson.stream.JsonReaderTest.testVeryLongUnterminatedString [gson]"
"gson","28","com.google.gson.JsonPrimitive.setValue(Object)","1","com.google.gson.JsonPrimitiveTest.testByteEqualsLong [gson]"
"gson","29","com.google.gson.internal.Excluder.excludeClassChecks(Class<?>)","1","com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization [gson]"
"gson","30","com.google.gson.JsonElement.toString()","1","com.google.gson.internal.bind.JsonTreeWriterTest.testArray [gson]"
"gson","31","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>)","1","com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree [gson]"
"gson","32","com.google.gson.DefaultDateTypeAdapter.deserializeToDate(String)","1","com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone [gson]"
"gson","33","com.google.gson.internal.Excluder.excludeClassInStrategy(Class<?>,boolean)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject [gson]"
"gson","34","com.google.gson.JsonParser.parse(JsonReader)","1","com.google.gson.JsonParserTest.testParseInvalidJson [gson]"
