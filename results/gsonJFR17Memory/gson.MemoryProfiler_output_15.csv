"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","24","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","2","com.google.gson.JsonParser.parseReader(Reader)","24","com.google.gson.internal.bind.JsonElementReaderTest.testNextJsonElement [gson],com.google.gson.JsonParserTest.testParseEmptyWhitespaceInput [gson],com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName [gson],com.google.gson.internal.bind.JsonElementReaderTest.testStrings [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings [gson],com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities [gson],com.google.gson.JsonParserTest.testParseInvalidJson [gson],com.google.gson.JsonParserTest.testParseString [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNumbers [gson],com.google.gson.internal.bind.JsonElementReaderTest.testBooleans [gson],com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects [gson],com.google.gson.internal.bind.JsonElementReaderTest.testWrongType [gson],com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue [gson],com.google.gson.internal.bind.JsonElementReaderTest.testArray [gson],com.google.gson.JsonParserTest.testParseDeeplyNestedArrays [gson],com.google.gson.internal.bind.JsonElementReaderTest.testObject [gson]"
"gson","3","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","21","com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy [gson],com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization [gson],com.google.gson.functional.Java17RecordTest.testClassReflectionFilter [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject [gson],com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls [gson],com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized [gson],com.google.gson.functional.CollectionTest.testObjectCollectionSerialization [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers [gson],com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization [gson],com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField [gson],com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization [gson],com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive [gson],com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree [gson],com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization [gson],com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault [gson],com.google.gson.GsonTest.testDefaultGsonNewBuilderModification [gson]"
"gson","4","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","13","com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization [gson],com.google.gson.functional.Java17RecordTest.testMultipleNamesDeserializedCorrectly [gson],com.google.gson.functional.Java17RecordTest.testAccessorIsCalled [gson],com.google.gson.functional.Java17RecordTest.testPrimitiveDefaultValues [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation [gson],com.google.gson.functional.EnumTest.testEnumSubclass [gson],com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization [gson],com.google.gson.functional.Java17RecordTest.testRecordBaseClass [gson],com.google.gson.functional.EnumTest.testEnumToStringReadInterchanged [gson],com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization [gson]"
"gson","5","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","11","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidDay [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseSpecialTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidMonth [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidTime [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithDefaultTimezone [gson]"
"gson","6","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","8","com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization [gson],com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization [gson],com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters [gson],com.google.gson.functional.CircularReferenceTest.testCircularSerialization [gson],com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization [gson],com.google.gson.functional.ToNumberPolicyFunctionalTest.testCustomStrategiesCannotAffectConcreteDeclaredNumbers [gson],com.google.gson.functional.RawSerializationTest.testParameterizedObject [gson]"
"gson","7","com.google.gson.Gson.toJson(Object,Type,Appendable)","8","com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization [gson],com.google.gson.functional.CollectionTest.testPriorityQueue [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails [gson],com.google.gson.functional.CollectionTest.testStack [gson],com.google.gson.GsonBuilderTest.testTransientFieldExclusion [gson],com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonSerializerDeserializerBasedJsonAdapterOnClass [gson],com.google.gson.functional.MapTest.testGeneralMapField [gson],com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonSerializerDeserializerBasedJsonAdapterOnFields [gson]"
"gson","8","com.google.gson.Gson.getAdapter(TypeToken<T>)","7","com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing [gson],com.google.gson.GsonTest.testGetAdapter_FutureAdapterConcurrency [gson],com.google.gson.functional.FormattingStyleTest.testFormat [gson]"
"gson","9","com.google.gson.internal.bind.ObjectTypeAdapter.newFactory(ToNumberStrategy)","7","com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization [gson],com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization [gson],com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate [gson],com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault [gson],com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization [gson]"
"gson","10","com.google.gson.stream.JsonReader.peek()","6","com.google.gson.functional.MapTest.testDeerializeMapOfMaps [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDotPolicyDeserialiation [gson],com.google.gson.stream.JsonReaderTest.testDeeplyNestedArrays [gson],com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate [gson],com.google.gson.functional.MapTest.testStringKeyDeserialization [gson],com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes [gson]"
"gson","11","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","6","com.google.gson.functional.CollectionTest.testNullsInListDeserialization [gson],com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization [gson],com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId [gson],com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization [gson],com.google.gson.JavaSerializationTest.testNumberIsSerializable [gson],com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter [gson]"
"gson","12","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","6","com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter [gson],com.google.gson.functional.GsonVersionDiagnosticsTest.testAssertionErrorInDeserializationPrintsVersion [gson],com.google.gson.functional.GsonVersionDiagnosticsTest.testVersionPattern [gson],com.google.gson.functional.TypeAdapterRuntimeTypeWrapperTest.testJsonDeserializer_SubclassBackwardCompatibility [gson]"
"gson","13","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","5","com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers [gson],com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing [gson],com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses [gson]"
"gson","14","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","5","com.google.gson.functional.ReflectionAccessFilterTest.testBlockInaccessibleJava [gson],com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson],com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization [gson],com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter [gson],com.google.gson.functional.CollectionTest.testObjectCollectionSerialization [gson]"
"gson","15","com.google.gson.internal.UnsafeAllocator.create()","5","com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault [gson],com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonAdapterNullSafe [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault [gson]"
"gson","16","com.google.gson.Gson.fromJson(String,Class<T>)","5","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testNullSafeObjectFromJson [gson],com.google.gson.functional.JavaUtilTest.testProperties [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter [gson],com.google.gson.GsonBuilderTest.testDisableJdkUnsafe [gson]"
"gson","17","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>,FilterResult)","5","com.google.gson.functional.TypeAdapterRuntimeTypeWrapperTest.testJsonSerializer [gson],com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked [gson],com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization [gson],com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace [gson]"
"gson","18","com.google.gson.internal.Streams.parse(JsonReader)","4","com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext [gson],com.google.gson.JsonStreamParserTest.testIterator [gson],com.google.gson.internal.bind.JsonElementReaderTest.testEmptyArray [gson],com.google.gson.JsonParserTest.testParseEmptyString [gson]"
"gson","19","com.google.gson.Gson.toJson(Object,Type,JsonWriter)","4","com.google.gson.functional.SerializedNameTest.testFirstNameIsChosenForSerialization [gson],com.google.gson.functional.ObjectTest.testNullFieldsSerialization [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization [gson],com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization [gson]"
"gson","20","com.google.gson.JsonElement.toString()","4","com.google.gson.JsonArrayTest.testCharPrimitiveAddition [gson],com.google.gson.JsonArrayTest.testNullPrimitiveAddition [gson],com.google.gson.JsonArrayTest.testIntegerPrimitiveAddition [gson],com.google.gson.JsonPrimitiveTest.testValidJsonOnToString [gson]"
"gson","21","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","4","com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields [gson],com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson],com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization [gson]"
"gson","22","com.google.gson.Gson.getAdapter(Class<T>)","4","com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue [gson],com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson],com.google.gson.ObjectTypeAdapterTest.testSerialize [gson],com.google.gson.internal.bind.RecursiveTypesResolveTest.testRecursiveTypeVariablesResolve1 [gson]"
"gson","23","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","4","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithMilliseconds [gson]"
"gson","24","com.google.gson.Gson.newJsonReader(Reader)","4","com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialized [gson],com.google.gson.regression.JsonAdapterNullSafeTest.testNullSafeBugDeserialize [gson],com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization [gson]"
"gson","25","com.google.gson.GsonBuilder.addTypeAdaptersForDate(String,int,int,List<TypeAdapterFactory>)","4","com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives [gson],com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization [gson],com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter [gson]"
"gson","26","com.google.gson.stream.JsonReader.nextQuotedValue(char)","3","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson],com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","27","com.google.gson.JsonStreamParser.next()","3","com.google.gson.JsonStreamParserTest.testParseTwoStrings [gson],com.google.gson.JsonStreamParserTest.testCallingNextBeyondAvailableInput [gson]"
"gson","28","com.google.gson.internal.Excluder.excludeField(Field,boolean)","3","com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization [gson],com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields [gson],com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization [gson]"
"gson","29","com.google.gson.internal.ReflectionAccessFilterHelper.getFilterResult(List<ReflectionAccessFilter>,Class<?>)","3","com.google.gson.functional.TypeAdapterRuntimeTypeWrapperTest.testJsonDeserializer_ReflectiveTreeSerializerDelegate [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter [gson],com.google.gson.functional.InheritanceTest.testSubClassSerialization [gson]"
"gson","30","com.google.gson.JsonParser.parseReader(JsonReader)","3","com.google.gson.JsonParserTest.testParseReader [gson],com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails [gson],com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails [gson]"
"gson","31","com.google.gson.internal.LinkedTreeMap.keySet()","2","com.google.gson.JsonObjectAsMapTest.testKeySet [gson]"
"gson","32","com.google.gson.internal.LinkedTreeMap.find(K,boolean)","2","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson],com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","33","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","2","com.google.gson.functional.FieldNamingTest.testUpperCamelCase [gson],com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization [gson]"
"gson","34","com.google.gson.JsonPrimitive.getAsBigDecimal()","2","com.google.gson.JsonPrimitiveTest.testExponential [gson]"
"gson","35","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","2","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming [gson],com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter [gson]"
"gson","36","com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(Class<?>,Object)","2","com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming [gson]"
"gson","37","com.google.gson.internal.bind.NumberTypeAdapter.newFactory(ToNumberStrategy)","2","com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization [gson],com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral [gson]"
"gson","38","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.read(JsonReader)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe [gson]"
"gson","39","com.google.gson.internal.bind.ObjectTypeAdapter.read(JsonReader)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","40","com.google.gson.reflect.TypeToken.get(Class<T>)","1","com.google.gson.GsonTest.testGetAdapter_Concurrency [gson]"
"gson","41","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField [gson]"
"gson","42","com.google.gson.stream.JsonWriter.string(String)","1","com.google.gson.functional.CircularReferenceTest.testCircularSerialization [gson]"
"gson","43","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,Method,String,TypeToken<?>,boolean,boolean,boolean)","1","com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType [gson]"
"gson","44","com.google.gson.internal.bind.TreeTypeAdapter.read(JsonReader)","1","com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId [gson]"
"gson","45","com.google.gson.TypeAdapter.toJsonTree(T)","1","com.google.gson.TypeAdapterTest.testToJson_ThrowingIOException [gson]"
"gson","46","com.google.gson.Gson.fromJson(JsonElement,Class<T>)","1","com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings [gson]"
"gson","47","com.google.gson.internal.bind.TypeAdapters.newFactory(TypeToken<TT>,TypeAdapter<TT>)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming [gson]"
"gson","48","com.google.gson.stream.JsonReader.push(int)","1","com.google.gson.JsonParserTest.testParseDeeplyNestedArrays [gson]"
"gson","49","com.google.gson.internal.Streams.write(JsonElement,JsonWriter)","1","com.google.gson.JsonArrayTest.testEqualsNonEmptyArray [gson]"
"gson","50","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization [gson]"
"gson","51","com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(Class<?superT>)","1","com.google.gson.internal.bind.Java17ReflectiveTypeAdapterFactoryTest.testSerializeRecords [gson]"
"gson","52","com.google.gson.internal.bind.DefaultDateTypeAdapter.write(JsonWriter,Date)","1","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testFormattingInEnUs [gson]"
"gson","53","com.google.gson.Gson.toJson(Object,Type)","1","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked [gson]"
"gson","54","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","1","com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization [gson]"
