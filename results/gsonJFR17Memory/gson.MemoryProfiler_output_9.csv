"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","21","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testDateDeserializationISO8601 [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","2","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","17","com.google.gson.functional.UncategorizedTest.testTrailingWhitespace [gson],com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization [gson],com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization [gson],com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization [gson],com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization [gson],com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject [gson],com.google.gson.functional.JsonTreeTest.testToJsonTree [gson],com.google.gson.functional.ArrayTest.testArrayOfNullSerialization [gson],com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace [gson],com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization [gson],com.google.gson.JavaSerializationTest.testNumberIsSerializable [gson]"
"gson","3","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","14","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter [gson],com.google.gson.functional.PrettyPrintingTest.testEmptyMapField [gson],com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation [gson],com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields [gson],com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls [gson],com.google.gson.functional.CollectionTest.testObjectCollectionSerialization [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers [gson],com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers [gson],com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization [gson],com.google.gson.GsonBuilderTest.testTransientFieldExclusion [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField [gson],com.google.gson.functional.Java17RecordTest.testObjectDefaultValue [gson],com.google.gson.functional.VersioningTest.testVersionedClassesSerialization [gson]"
"gson","4","com.google.gson.JsonParser.parseReader(Reader)","14","com.google.gson.internal.bind.JsonElementReaderTest.testNextJsonElement [gson],com.google.gson.JsonParserTest.testParseEmptyWhitespaceInput [gson],com.google.gson.internal.bind.JsonElementReaderTest.testBooleans [gson],com.google.gson.internal.bind.JsonElementReaderTest.testWrongType [gson],com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays [gson],com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails [gson],com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNulls [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNumbers [gson]"
"gson","5","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","11","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidDay [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseSpecialTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidMonth [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidTime [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithDefaultTimezone [gson]"
"gson","6","com.google.gson.Gson.newJsonReader(Reader)","11","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming [gson],com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization [gson],com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject [gson],com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization [gson],com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization [gson],com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization [gson],com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonAdapterNullSafe [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault [gson],com.google.gson.functional.ObjectTest.testThrowingDefaultConstructor [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming [gson]"
"gson","7","com.google.gson.JsonParser.parseReader(JsonReader)","8","com.google.gson.JsonParserTest.testParseReader [gson],com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings [gson],com.google.gson.JsonParserTest.testParseInvalidJson [gson],com.google.gson.JsonParserTest.testParseString [gson],com.google.gson.internal.bind.JsonElementReaderTest.testObject [gson],com.google.gson.JsonParserTest.testParseMixedArray [gson]"
"gson","8","com.google.gson.Gson.getAdapter(Class<T>)","7","com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue [gson],com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue [gson],com.google.gson.ObjectTypeAdapterTest.testSerialize [gson],com.google.gson.internal.bind.RecursiveTypesResolveTest.testRecursiveTypeVariablesResolve12 [gson],com.google.gson.ObjectTypeAdapterTest.testDeserialize [gson],com.google.gson.internal.bind.RecursiveTypesResolveTest.testRecursiveResolveSimple [gson],com.google.gson.internal.bind.RecursiveTypesResolveTest.testRecursiveTypeVariablesResolve1 [gson]"
"gson","9","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","7","com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization [gson],com.google.gson.functional.CollectionTest.testNullsInListDeserialization [gson],com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization [gson],com.google.gson.JavaSerializationTest.testMapIsSerializable [gson],com.google.gson.CommentsTest.testParseComments [gson],com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization [gson],com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter [gson]"
"gson","10","com.google.gson.internal.UnsafeAllocator.create()","6","com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonSerializerDeserializerBasedJsonAdapterOnClass [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault [gson]"
"gson","11","com.google.gson.Gson.getAdapter(TypeToken<T>)","6","com.google.gson.GsonTest.testGetAdapter_FutureAdapterConcurrency [gson],com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId [gson],com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization [gson],com.google.gson.functional.ReflectionAccessFilterTest.testBlockAllJavaExtendingJdkClass [gson]"
"gson","12","com.google.gson.Gson.toJson(Object,Type,Appendable)","6","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked [gson],com.google.gson.functional.MapTest.testObjectMapSerialization [gson],com.google.gson.functional.ObjectTest.testDateAsMapObjectField [gson],com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface [gson],com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterWrappedInNullSafeAsRequested [gson]"
"gson","13","com.google.gson.stream.JsonReader.peek()","6","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson],com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization [gson],com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation [gson],com.google.gson.functional.MapTest.testBooleanKeyDeserialization [gson],com.google.gson.stream.JsonReaderTest.testSkipInteger [gson]"
"gson","14","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","6","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter [gson],com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization [gson],com.google.gson.functional.CollectionTest.testFieldIsArrayList [gson],com.google.gson.MixedStreamTest.testWriteDoesNotMutateState [gson],com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization [gson],com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization [gson]"
"gson","15","com.google.gson.Gson.fromJson(String,Class<T>)","5","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testNullSafeObjectFromJson [gson],com.google.gson.functional.EnumWithObfuscatedTest.testEnumClassWithObfuscated [gson],com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization [gson],com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization [gson],com.google.gson.GsonBuilderTest.testDisableJdkUnsafe [gson]"
"gson","16","com.google.gson.internal.bind.NumberTypeAdapter.newFactory(ToNumberStrategy)","5","com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls [gson],com.google.gson.functional.ToNumberPolicyFunctionalTest.testDefault [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testDateSerialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper [gson]"
"gson","17","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>,FilterResult)","5","com.google.gson.MixedStreamTest.testWriteInvalidState [gson],com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree [gson],com.google.gson.functional.FormattingStyleTest.testFormatCompact [gson],com.google.gson.functional.JsonParserTest.testDeserializingCustomTree [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter [gson]"
"gson","18","com.google.gson.internal.Streams.parse(JsonReader)","4","com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails [gson],com.google.gson.JsonStreamParserTest.testIterator [gson],com.google.gson.JsonParserTest.testParseEmptyString [gson]"
"gson","19","com.google.gson.internal.LinkedTreeMap.find(K,boolean)","4","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson],com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson],com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization [gson]"
"gson","20","com.google.gson.Gson.toJson(Object,Type,JsonWriter)","4","com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization [gson],com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization [gson],com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization [gson],com.google.gson.functional.MapTest.testInterfaceTypeMap [gson]"
"gson","21","com.google.gson.JsonElement.toString()","4","com.google.gson.JsonArrayTest.testCharPrimitiveAddition [gson],com.google.gson.JsonArrayTest.testNullPrimitiveAddition [gson],com.google.gson.JsonArrayTest.testMixedPrimitiveAddition [gson],com.google.gson.JsonArrayTest.testStringPrimitiveAddition [gson]"
"gson","22","com.google.gson.internal.LinkedTreeMap.entrySet()","4","com.google.gson.JsonObjectAsMapTest.testContainsValue [gson],com.google.gson.JsonObjectAsMapTest.testEntrySet [gson]"
"gson","23","com.google.gson.internal.bind.ObjectTypeAdapter.newFactory(ToNumberStrategy)","4","com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive [gson],com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate [gson],com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization [gson]"
"gson","24","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","4","com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization [gson],com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter [gson],com.google.gson.functional.TypeAdapterRuntimeTypeWrapperTest.testJsonDeserializer_SubclassBackwardCompatibility [gson],com.google.gson.GsonBuilderTest.testModificationAfterCreate [gson]"
"gson","25","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","3","com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization [gson],com.google.gson.JsonStreamParserTest.testCallingNextBeyondAvailableInput [gson],com.google.gson.functional.CollectionTest.testObjectCollectionSerialization [gson]"
"gson","26","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","3","com.google.gson.GsonTest.testNewJsonWriter_Default [gson],com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization [gson],com.google.gson.functional.ReflectionAccessFilterTest.testBlockAllPartial [gson]"
"gson","27","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","3","com.google.gson.functional.Java17RecordTest.testDuplicateJsonProperties [gson],com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization [gson]"
"gson","28","com.google.gson.internal.ReflectionAccessFilterHelper.getFilterResult(List<ReflectionAccessFilter>,Class<?>)","3","com.google.gson.functional.ReflectionAccessFilterTest.testAllowForSupertype [gson],com.google.gson.functional.MapTest.testMapDeserializationWithUnquotedIntegerKeys [gson],com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization [gson]"
"gson","29","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","3","com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization [gson],com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization [gson],com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod [gson]"
"gson","30","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","2","com.google.gson.functional.FieldNamingTest.testUpperCamelCase [gson],com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace [gson]"
"gson","31","com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(Type,Class<?superT>)","2","com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization [gson]"
"gson","32","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","2","com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce [gson],com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName [gson]"
"gson","33","com.google.gson.internal.bind.ObjectTypeAdapter.tryBeginNesting(JsonReader,JsonToken)","2","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","34","com.google.gson.JsonPrimitive.getAsBigDecimal()","2","com.google.gson.JsonPrimitiveTest.testExponential [gson]"
"gson","35","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,Method,String,TypeToken<?>,boolean,boolean,boolean)","2","com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields [gson],com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType [gson]"
"gson","36","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","2","com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming [gson],com.google.gson.GsonTest.testDefaultGsonNewBuilderModification [gson]"
"gson","37","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","2","com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter [gson],com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields [gson]"
"gson","38","com.google.gson.internal.bind.TreeTypeAdapter.newFactoryWithMatchRawType(TypeToken<?>,Object)","2","com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers [gson]"
"gson","39","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","2","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithMilliseconds [gson]"
"gson","40","com.google.gson.internal.Streams.write(JsonElement,JsonWriter)","2","com.google.gson.JsonArrayTest.testEqualsNonEmptyArray [gson],com.google.gson.JsonObjectTest.testEqualsNonEmptyObject [gson]"
"gson","41","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(ConstructorConstructor,Gson,TypeToken<?>,JsonAdapter)","2","com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonAdapterNullSafe [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectJsonAdapterType [gson]"
"gson","42","com.google.gson.internal.bind.ObjectTypeAdapter.read(JsonReader)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","43","com.google.gson.reflect.TypeToken.get(Class<T>)","1","com.google.gson.GsonTest.testGetAdapter_Concurrency [gson]"
"gson","44","com.google.gson.internal.LinkedTreeMap.keySet()","1","com.google.gson.JsonObjectAsMapTest.testKeySet [gson]"
"gson","45","com.google.gson.stream.JsonReader.nextQuotedValue(char)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","46","com.google.gson.TypeAdapter.fromJsonTree(JsonElement)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree [gson]"
"gson","47","com.google.gson.internal.ReflectionAccessFilterHelper.canAccess(AccessibleObject,Object)","1","com.google.gson.functional.ReflectionAccessFilterTest.testBlockInaccessibleJava [gson]"
"gson","48","com.google.gson.stream.JsonReader.syntaxError(String)","1","com.google.gson.stream.JsonReaderTest.testStrictExtraCommasInMaps [gson]"
"gson","49","com.google.gson.internal.bind.TreeTypeAdapter.read(JsonReader)","1","com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization [gson]"
"gson","50","com.google.gson.internal.bind.TypeAdapters.newFactory(TypeToken<TT>,TypeAdapter<TT>)","1","com.google.gson.functional.TypeAdapterRuntimeTypeWrapperTest.testJsonDeserializer_CustomSerializerDelegate [gson]"
"gson","51","com.google.gson.FieldAttributes.getAnnotation(Class<T>)","1","com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization [gson]"
"gson","52","com.google.gson.JsonArray.add(Character)","1","com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_filledJsonObject [gson]"
"gson","53","com.google.gson.internal.ConstructorConstructor.get(TypeToken<T>)","1","com.google.gson.functional.MapTest.testMapOfMapSerialization [gson]"
"gson","54","com.google.gson.stream.JsonReader.push(int)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","55","com.google.gson.stream.JsonReader.locationString()","1","com.google.gson.stream.JsonReaderTest.testMalformedDocuments [gson]"
"gson","56","com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(Class<?superT>)","1","com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization [gson]"
"gson","57","com.google.gson.internal.bind.DefaultDateTypeAdapter.write(JsonWriter,Date)","1","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testFormattingInEnUs [gson]"
"gson","58","com.google.gson.JsonArray.add(JsonElement)","1","com.google.gson.JsonParserTest.testParseDeeplyNestedArrays [gson]"
"gson","59","com.google.gson.internal.ConstructorConstructor.newSpecialCollectionConstructor(Type,Class<?superT>)","1","com.google.gson.functional.TypeAdapterRuntimeTypeWrapperTest.testJsonDeserializer_JsonSerializerDelegate [gson]"
"gson","60","com.google.gson.GsonBuilder.addTypeAdaptersForDate(String,int,int,List<TypeAdapterFactory>)","1","com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter [gson]"
"gson","61","com.google.gson.JsonPrimitive.getAsNumber()","1","com.google.gson.JsonPrimitiveTest.testAsNumber_Boolean [gson]"
