"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","17","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testDateDeserializationISO8601 [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","2","com.google.gson.JsonParser.parseReader(Reader)","16","com.google.gson.internal.bind.JsonElementReaderTest.testNextJsonElement [gson],com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings [gson],com.google.gson.internal.bind.JsonElementReaderTest.testEmptyObject [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNumbers [gson],com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers [gson],com.google.gson.internal.bind.JsonElementReaderTest.testBooleans [gson],com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects [gson],com.google.gson.internal.bind.JsonElementReaderTest.testWrongType [gson],com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue [gson],com.google.gson.internal.bind.JsonElementReaderTest.testArray [gson],com.google.gson.internal.bind.JsonElementReaderTest.testObject [gson]"
"gson","3","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","15","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField [gson],com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers [gson],com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization [gson],com.google.gson.functional.ReflectionAccessFilterTest.testBlockInaccessibleStaticField [gson],com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization [gson],com.google.gson.functional.ReadersWritersTest.testWriterForSerialization [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDotPolicyDeserialiation [gson],com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation [gson],com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization [gson],com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization [gson],com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion [gson],com.google.gson.GsonTest.testDefaultGsonNewBuilderModification [gson]"
"gson","4","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","12","com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray [gson],com.google.gson.functional.ArrayTest.testMultidimensionalArraysSerialization [gson],com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization [gson],com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization [gson],com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization [gson],com.google.gson.JsonStreamParserTest.testIterator [gson],com.google.gson.functional.JsonTreeTest.testToJsonTree [gson],com.google.gson.functional.InternationalizationTest.testSupplementaryUnicodeSerialization [gson]"
"gson","5","com.google.gson.Gson.toJson(Object,Type,JsonWriter)","11","com.google.gson.functional.ObjectTest.testNestedSerialization [gson],com.google.gson.functional.ObjectTest.testStaticFieldSerialization [gson],com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization [gson],com.google.gson.functional.ObjectTest.testNullFieldsSerialization [gson],com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonAdapterNullSafe [gson],com.google.gson.regression.JsonAdapterNullSafeTest.testNullSafeBugSerialize [gson],com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization [gson],com.google.gson.functional.ArrayTest.testSingleStringArraySerialization [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical [gson],com.google.gson.functional.ObjectTest.testDateAsMapObjectField [gson],com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization [gson]"
"gson","6","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","11","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidDay [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseSpecialTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidMonth [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidTime [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithDefaultTimezone [gson]"
"gson","7","com.google.gson.Gson.newJsonReader(Reader)","9","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming [gson],com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation [gson],com.google.gson.functional.MapTest.testMapSubclassDeserialization [gson],com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization [gson],com.google.gson.functional.Java17RecordTest.testPrimitiveJsonNullValue [gson],com.google.gson.functional.ObjectTest.testThrowingDefaultConstructor [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming [gson]"
"gson","8","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","8","com.google.gson.functional.EnumTest.testEnumSet [gson],com.google.gson.ObjectTypeAdapterTest.testSerialize [gson],com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault [gson],com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField [gson],com.google.gson.functional.Java17RecordTest.testStaticFieldDeserialization [gson]"
"gson","9","com.google.gson.Gson.getAdapter(TypeToken<T>)","8","com.google.gson.functional.Java17RecordTest.testThrowingAccessor [gson],com.google.gson.functional.CollectionTest.testNullsInListDeserialization [gson],com.google.gson.GsonTest.testGetAdapter_FutureAdapterConcurrency [gson],com.google.gson.functional.CollectionTest.testQueueDeserialization [gson],com.google.gson.functional.FormattingStyleTest.testCompactToPretty [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode [gson]"
"gson","10","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","8","com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization [gson],com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect [gson],com.google.gson.JavaSerializationTest.testMapIsSerializable [gson],com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId [gson],com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId [gson]"
"gson","11","com.google.gson.JsonParser.parseReader(JsonReader)","8","com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails [gson],com.google.gson.internal.bind.JsonElementReaderTest.testStrings [gson],com.google.gson.internal.bind.JsonElementReaderTest.testEmptyArray [gson],com.google.gson.JsonParserTest.testParseEmptyString [gson],com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails [gson],com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities [gson],com.google.gson.JsonParserTest.testParseInvalidJson [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNulls [gson]"
"gson","12","com.google.gson.Gson.toJson(Object,Type,Appendable)","7","com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization [gson],com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers [gson],com.google.gson.functional.CollectionTest.testPriorityQueue [gson],com.google.gson.functional.TypeAdapterRuntimeTypeWrapperTest.testGsonFutureAdapter [gson],com.google.gson.functional.SerializedNameTest.testFirstNameIsChosenForSerialization [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked [gson]"
"gson","13","com.google.gson.internal.Streams.parse(JsonReader)","6","com.google.gson.JsonParserTest.testParseReader [gson],com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails [gson],com.google.gson.JsonParserTest.testParseString [gson]"
"gson","14","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","6","com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues [gson],com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization [gson],com.google.gson.functional.CollectionTest.testPriorityQueue [gson],com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls [gson],com.google.gson.functional.TypeAdapterRuntimeTypeWrapperTest.testJsonDeserializer_ReflectiveSerializerDelegate [gson],com.google.gson.functional.PrettyPrintingTest.testMap [gson]"
"gson","15","com.google.gson.Gson.fromJson(String,Class<T>)","6","com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testNullSafeObjectFromJson [gson],com.google.gson.functional.EnumWithObfuscatedTest.testEnumClassWithObfuscated [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicLong [gson],com.google.gson.functional.JavaUtilTest.testProperties [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter [gson]"
"gson","16","com.google.gson.internal.UnsafeAllocator.create()","5","com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonSerializerDeserializerBasedJsonAdapterOnClass [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter [gson],com.google.gson.regression.JsonAdapterNullSafeTest.testNullSafeBugDeserialize [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault [gson]"
"gson","17","com.google.gson.stream.JsonReader.peek()","5","com.google.gson.stream.JsonReaderTest.testReadObject [gson],com.google.gson.functional.Java17RecordTest.testRecordNull [gson],com.google.gson.functional.MapTest.testStringKeyDeserialization [gson],com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation [gson]"
"gson","18","com.google.gson.Gson.getAdapter(Class<T>)","5","com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue [gson],com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson],com.google.gson.internal.bind.RecursiveTypesResolveTest.testRecursiveResolveSimple [gson],com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson],com.google.gson.internal.bind.RecursiveTypesResolveTest.testRecursiveTypeVariablesResolve1 [gson]"
"gson","19","com.google.gson.internal.bind.NumberTypeAdapter.newFactory(ToNumberStrategy)","5","com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testDateSerialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization [gson],com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization [gson]"
"gson","20","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","5","com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter [gson],com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter [gson],com.google.gson.GsonTest.testNewBuilderModification [gson],com.google.gson.functional.GsonVersionDiagnosticsTest.testVersionPattern [gson]"
"gson","21","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","4","com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization [gson],com.google.gson.functional.FieldNamingTest.testUpperCamelCase [gson],com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects [gson],com.google.gson.functional.Java17RecordTest.testStaticFieldDeserialization [gson]"
"gson","22","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","4","com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass [gson],com.google.gson.GsonBuilderTest.testTransientFieldExclusion [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers [gson],com.google.gson.internal.bind.JsonTreeWriterTest.testObject [gson]"
"gson","23","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","4","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithMilliseconds [gson]"
"gson","24","com.google.gson.internal.bind.ObjectTypeAdapter.newFactory(ToNumberStrategy)","4","com.google.gson.functional.SerializedNameTest.testMultipleNamesDeserializedCorrectly [gson],com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls [gson],com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger [gson],com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings [gson]"
"gson","25","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>,FilterResult)","3","com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails [gson],com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree [gson]"
"gson","26","com.google.gson.internal.ReflectionAccessFilterHelper.getFilterResult(List<ReflectionAccessFilter>,Class<?>)","3","com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys [gson],com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization [gson],com.google.gson.functional.MapTest.testMapDeserializationEmpty [gson]"
"gson","27","com.google.gson.GsonBuilder.addTypeAdaptersForDate(String,int,int,List<TypeAdapterFactory>)","3","com.google.gson.functional.ToNumberPolicyFunctionalTest.testAsListOfLongsOrDoubles [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical [gson]"
"gson","28","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","3","com.google.gson.functional.SerializedNameTest.testMultipleNamesInTheSameString [gson],com.google.gson.functional.InheritanceTest.testSubClassDeserialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault [gson]"
"gson","29","com.google.gson.internal.LinkedTreeMap.find(K,boolean)","2","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson],com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","30","com.google.gson.internal.bind.ObjectTypeAdapter.tryBeginNesting(JsonReader,JsonToken)","2","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson],com.google.gson.functional.ReflectionAccessFilterTest.testBlockAllCollectionInterface [gson]"
"gson","31","com.google.gson.JsonElement.toString()","2","com.google.gson.JsonArrayTest.testCharPrimitiveAddition [gson],com.google.gson.JsonArrayTest.testStringPrimitiveAddition [gson]"
"gson","32","com.google.gson.internal.LinkedTreeMap.entrySet()","2","com.google.gson.JsonObjectAsMapTest.testContainsValue [gson]"
"gson","33","com.google.gson.internal.bind.TreeTypeAdapter.newFactoryWithMatchRawType(TypeToken<?>,Object)","2","com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator [gson]"
"gson","34","com.google.gson.internal.Streams.write(JsonElement,JsonWriter)","2","com.google.gson.JsonArrayTest.testEqualsNonEmptyArray [gson],com.google.gson.JsonObjectTest.testEqualsNonEmptyObject [gson]"
"gson","35","com.google.gson.internal.bind.DefaultDateTypeAdapter.write(JsonWriter,Date)","2","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testFormattingInEnUs [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testFormattingInFr [gson]"
"gson","36","com.google.gson.internal.bind.ObjectTypeAdapter.read(JsonReader)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","37","com.google.gson.reflect.TypeToken.get(Class<T>)","1","com.google.gson.GsonTest.testGetAdapter_Concurrency [gson]"
"gson","38","com.google.gson.JsonObject.addProperty(String,String)","1","com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_name [gson]"
"gson","39","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","1","com.google.gson.GsonTest.testGetAdapter_Null [gson]"
"gson","40","com.google.gson.internal.ReflectionAccessFilterHelper.canAccess(AccessibleObject,Object)","1","com.google.gson.functional.ReflectionAccessFilterTest.testAllowForSupertype [gson]"
"gson","41","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,Method,String,TypeToken<?>,boolean,boolean,boolean)","1","com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields [gson]"
"gson","42","com.google.gson.internal.bind.TreeTypeAdapter.read(JsonReader)","1","com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization [gson]"
"gson","43","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming [gson]"
"gson","44","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization [gson]"
"gson","45","com.google.gson.GsonBuilder.create()","1","com.google.gson.functional.FormattingStyleTest.testFormat [gson]"
"gson","46","com.google.gson.internal.ConstructorConstructor.get(TypeToken<T>)","1","com.google.gson.functional.MapTest.testMapWithQuotes [gson]"
"gson","47","com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(Class<?superT>)","1","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter [gson]"
"gson","48","com.google.gson.Gson.toJson(Object,Type)","1","com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces [gson]"
"gson","49","com.google.gson.JsonPrimitive.getAsNumber()","1","com.google.gson.JsonPrimitiveTest.testAsNumber_Boolean [gson]"
