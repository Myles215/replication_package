"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.JsonParser.parseReader(Reader)","19","com.google.gson.internal.bind.JsonElementReaderTest.testNextJsonElement [gson],com.google.gson.JsonParserTest.testParseEmptyWhitespaceInput [gson],com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails [gson],com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose [gson],com.google.gson.internal.bind.JsonElementReaderTest.testStrings [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings [gson],com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities [gson],com.google.gson.JsonParserTest.testParseInvalidJson [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNulls [gson],com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers [gson],com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities [gson],com.google.gson.internal.bind.JsonElementReaderTest.testEmptyArray [gson],com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue [gson],com.google.gson.internal.bind.JsonElementReaderTest.testArray [gson]"
"gson","2","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","16","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","3","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","14","com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization [gson],com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson],com.google.gson.functional.PrettyPrintingTest.testEmptyMapField [gson],com.google.gson.functional.Java17RecordTest.testClassReflectionFilter [gson],com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy [gson],com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization [gson],com.google.gson.functional.CircularReferenceTest.testCircularSerialization [gson],com.google.gson.functional.JsonParserTest.testDeserializingCustomTree [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization [gson],com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields [gson],com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues [gson],com.google.gson.functional.Java17RecordTest.testFirstNameIsChosenForSerialization [gson],com.google.gson.functional.RawSerializationTest.testCollectionOfObjects [gson],com.google.gson.functional.RawSerializationTest.testParameterizedObject [gson]"
"gson","4","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","11","com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization [gson],com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization [gson],com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization [gson],com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers [gson],com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization [gson],com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization [gson],com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization [gson],com.google.gson.MixedStreamTest.testReadNulls [gson],com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization [gson]"
"gson","5","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","11","com.google.gson.functional.ParameterizedTypesTest.testGsonFromJsonTypeToken [gson],com.google.gson.functional.CollectionTest.testStack [gson],com.google.gson.functional.CollectionTest.testSetDeserialization [gson],com.google.gson.MixedStreamTest.testWriteHtmlSafe [gson],com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass [gson],com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization [gson],com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId [gson],com.google.gson.CommentsTest.testParseComments [gson],com.google.gson.JavaSerializationTest.testNumberIsSerializable [gson]"
"gson","6","com.google.gson.Gson.toJson(Object,Type,JsonWriter)","10","com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization [gson],com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameDueToBadNamingPolicy [gson],com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy [gson],com.google.gson.functional.ObjectTest.testNestedSerialization [gson],com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization [gson],com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter [gson],com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonAdapterNullSafe [gson],com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization [gson],com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization [gson]"
"gson","7","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","9","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming [gson],com.google.gson.functional.GsonVersionDiagnosticsTest.testAssertionErrorInSerializationPrintsVersion [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType [gson],com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter [gson]"
"gson","8","com.google.gson.Gson.fromJson(String,Class<T>)","8","com.google.gson.functional.SerializedNameTest.testMultipleNamesDeserializedCorrectly [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming [gson],com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter [gson],com.google.gson.functional.EnumWithObfuscatedTest.testEnumClassWithObfuscated [gson],com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization [gson],com.google.gson.functional.InternationalizationTest.testSupplementaryUnicodeDeserialization [gson],com.google.gson.functional.JavaUtilTest.testCurrency [gson],com.google.gson.functional.JavaUtilTest.testProperties [gson]"
"gson","9","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","8","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidDay [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseSpecialTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidMonth [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithDefaultTimezone [gson]"
"gson","10","com.google.gson.Gson.getAdapter(TypeToken<T>)","7","com.google.gson.functional.GsonVersionDiagnosticsTest.testAssertionErrorInSerializationPrintsVersion [gson],com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys [gson],com.google.gson.GsonTest.testGetAdapter_FutureAdapterConcurrency [gson],com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization [gson],com.google.gson.functional.FormattingStyleTest.testCompactToPretty [gson]"
"gson","11","com.google.gson.JsonParser.parseReader(JsonReader)","7","com.google.gson.JsonParserTest.testParseReader [gson],com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails [gson],com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader [gson],com.google.gson.JsonParserTest.testParseEmptyString [gson],com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails [gson],com.google.gson.JsonParserTest.testParseDeeplyNestedArrays [gson],com.google.gson.JsonParserTest.testParseMixedArray [gson]"
"gson","12","com.google.gson.JsonElement.toString()","6","com.google.gson.JsonArrayTest.testNullPrimitiveAddition [gson],com.google.gson.JsonArrayTest.testIntegerPrimitiveAddition [gson],com.google.gson.JsonArrayTest.testBooleanPrimitiveAddition [gson],com.google.gson.JsonPrimitiveTest.testValidJsonOnToString [gson],com.google.gson.JsonArrayTest.testMixedPrimitiveAddition [gson],com.google.gson.JsonArrayTest.testStringPrimitiveAddition [gson]"
"gson","13","com.google.gson.internal.Excluder.excludeField(Field,boolean)","5","com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization [gson],com.google.gson.VersionExclusionStrategyTest.testNewerVersion [gson],com.google.gson.functional.VersioningTest.testVersionedClassesSerialization [gson],com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization [gson]"
"gson","14","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","4","com.google.gson.functional.ReflectionAccessFilterTest.testDelegation [gson],com.google.gson.functional.Java17RecordTest.testClassReflectionFilter [gson],com.google.gson.functional.Java17RecordTest.testFirstNameIsChosenForSerialization [gson]"
"gson","15","com.google.gson.Gson.newJsonReader(Reader)","4","com.google.gson.functional.Java17RecordTest.testEmptyRecord [gson],com.google.gson.functional.ObjectTest.testNullArraysDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDoubleArrayDeserialization [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming [gson]"
"gson","16","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>,FilterResult)","4","com.google.gson.functional.FormattingStyleTest.testPrettyToCompact [gson],com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects [gson],com.google.gson.functional.FormattingStyleTest.testFormat [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter [gson]"
"gson","17","com.google.gson.internal.bind.ObjectTypeAdapter.newFactory(ToNumberStrategy)","4","com.google.gson.functional.TypeVariableTest.testBasicTypeVariables [gson],com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization [gson],com.google.gson.functional.ArrayTest.testSingleStringArraySerialization [gson],com.google.gson.functional.ArrayTest.testEmptyArraySerialization [gson]"
"gson","18","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","4","com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer [gson],com.google.gson.functional.Java17RecordTest.testMultipleNamesInTheSameString [gson],com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization [gson]"
"gson","19","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","3","com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization [gson],com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration [gson],com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues [gson]"
"gson","20","com.google.gson.internal.UnsafeAllocator.create()","3","com.google.gson.regression.JsonAdapterNullSafeTest.testNullSafeBugDeserialize [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault [gson]"
"gson","21","com.google.gson.internal.bind.NumberTypeAdapter.newFactory(ToNumberStrategy)","3","com.google.gson.functional.PrimitiveTest.testLongSerialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls [gson],com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId [gson]"
"gson","22","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","3","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithMilliseconds [gson]"
"gson","23","com.google.gson.internal.Streams.parse(JsonReader)","2","com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext [gson],com.google.gson.JsonParserTest.testParseString [gson]"
"gson","24","com.google.gson.internal.LinkedTreeMap.keySet()","2","com.google.gson.JsonObjectAsMapTest.testKeySet [gson]"
"gson","25","com.google.gson.stream.JsonReader.nextQuotedValue(char)","2","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","26","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","2","com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization [gson],com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects [gson]"
"gson","27","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","2","com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization [gson],com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization [gson]"
"gson","28","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","2","com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicIntegerArray [gson]"
"gson","29","com.google.gson.JsonPrimitive.getAsBigDecimal()","2","com.google.gson.JsonPrimitiveTest.testExponential [gson]"
"gson","30","com.google.gson.internal.LinkedTreeMap.entrySet()","2","com.google.gson.JsonObjectAsMapTest.testEntrySet [gson]"
"gson","31","com.google.gson.stream.JsonReader.syntaxError(String)","2","com.google.gson.stream.JsonReaderTest.testLenientPartialNonExecutePrefix [gson],com.google.gson.stream.JsonReaderTest.testUnterminatedObject [gson]"
"gson","32","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","2","com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson],com.google.gson.GsonTest.testDefaultGsonNewBuilderModification [gson]"
"gson","33","com.google.gson.internal.bind.TreeTypeAdapter.newFactoryWithMatchRawType(TypeToken<?>,Object)","2","com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization [gson]"
"gson","34","com.google.gson.stream.JsonReader.peek()","2","com.google.gson.functional.Java17RecordTest.testRecordNull [gson],com.google.gson.functional.MapTest.testNumberKeyDeserialization [gson]"
"gson","35","com.google.gson.Gson.getAdapter(Class<T>)","2","com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue [gson],com.google.gson.ObjectTypeAdapterTest.testDeserialize [gson]"
"gson","36","com.google.gson.internal.ConstructorConstructor.get(TypeToken<T>)","2","com.google.gson.functional.MapTest.testSortedMap [gson],com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey [gson]"
"gson","37","com.google.gson.internal.Streams.write(JsonElement,JsonWriter)","2","com.google.gson.JsonArrayTest.testEqualsNonEmptyArray [gson],com.google.gson.JsonObjectTest.testEqualsNonEmptyObject [gson]"
"gson","38","com.google.gson.internal.bind.ObjectTypeAdapter.read(JsonReader)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","39","com.google.gson.reflect.TypeToken.get(Class<T>)","1","com.google.gson.GsonTest.testGetAdapter_Concurrency [gson]"
"gson","40","com.google.gson.JsonObject.addProperty(String,String)","1","com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_name [gson]"
"gson","41","com.google.gson.internal.LinkedTreeMap.find(K,boolean)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","42","com.google.gson.internal.bind.ObjectTypeAdapter.tryBeginNesting(JsonReader,JsonToken)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","43","com.google.gson.internal.ReflectionAccessFilterHelper.canAccess(AccessibleObject,Object)","1","com.google.gson.functional.ReflectionAccessFilterTest.testBlockInaccessibleStaticField [gson]"
"gson","44","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,Method,String,TypeToken<?>,boolean,boolean,boolean)","1","com.google.gson.functional.TypeVariableTest.testBasicTypeVariables [gson]"
"gson","45","com.google.gson.internal.bind.TreeTypeAdapter.read(JsonReader)","1","com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization [gson]"
"gson","46","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing [gson]"
"gson","47","com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(Class<?>,Object)","1","com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst [gson]"
"gson","48","com.google.gson.Gson.toJson(Object,Type,Appendable)","1","com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType [gson]"
"gson","49","com.google.gson.JsonArray.add(Character)","1","com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_filledJsonObject [gson]"
"gson","50","com.google.gson.internal.ReflectionAccessFilterHelper.getFilterResult(List<ReflectionAccessFilter>,Class<?>)","1","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked [gson]"
"gson","51","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(ConstructorConstructor,Gson,TypeToken<?>,JsonAdapter)","1","com.google.gson.functional.Java17RecordTest.testJsonAdapterAnnotation [gson]"
"gson","52","com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(Class<?superT>)","1","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter [gson]"
"gson","53","com.google.gson.internal.bind.DefaultDateTypeAdapter.write(JsonWriter,Date)","1","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testFormattingInEnUs [gson]"
"gson","54","com.google.gson.JsonArray.add(JsonElement)","1","com.google.gson.JsonParserTest.testParseDeeplyNestedArrays [gson]"
"gson","55","com.google.gson.GsonBuilder.addTypeAdaptersForDate(String,int,int,List<TypeAdapterFactory>)","1","com.google.gson.functional.ToNumberPolicyFunctionalTest.testAsDoubles [gson]"
"gson","56","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","1","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testNonPrimitiveFieldAnnotationTakesPrecedenceOverDefault [gson]"
