"Project","Rank","Method","Count","Tests"
"Project","MethodIndex","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,boolean)","20","spark.staticfiles.StaticFilesTest.testDirectoryTraversalProtectionLocal [],spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.embeddedserver.EmbeddedServersTest.testAdd_whenConfigureRoutes_createsCustomServer [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.ResponseBodyTest.testHELLO [],spark.CookiesIntegrationTest.testRemoveCookie [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.BooksIntegrationTest.canDeleteBook [],spark.GenericIntegrationTest.testNotFound [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.GenericIntegrationTest.testExceptionMapper [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericSecureIntegrationTest.testPatch [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericIntegrationTest.testPathParamsWithPlusSign []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","8","spark.MultipleServicesTest.testGetHello [],spark.RedirectTest.testRedirectPostWithSpecificCode [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute [],spark.GenericSecureIntegrationTest.testEchoParam2 []"
"spark","3","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","6","spark.StaticFilesMemberTest.testStaticFilePageHtml [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.staticfiles.StaticFilesTest.testMimeTypes [],spark.staticfiles.DisableMimeGuessingTest.testMimeTypes [],spark.GenericIntegrationTest.testGetRoot [],spark.ResponseBodyTest.testMAXIME []"
"spark","4","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","5","spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.GenericIntegrationTest.testExceptionMapper [],spark.GenericIntegrationTest.testStaticFile [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally []"
"spark","5","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","5","spark.GenericSecureIntegrationTest.testHiHead [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.StaticFilesMemberTest.testStaticFileCssStyleCss []"
"spark","6","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","3","spark.GenericSecureIntegrationTest.testHiHead [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreadOnly_thenUseDefaultMinThreadAndTimeout [],spark.GenericIntegrationTest.testInheritanceExceptionMapper []"
"spark","7","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","3","spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.RedirectTest.testRedirectAnyPut []"
"spark","8","spark.Service.getPaths()","3","spark.CookiesIntegrationTest.testRemoveCookie [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal [],spark.RedirectTest.testRedirectAnyDelete []"
"spark","9","spark.staticfiles.StaticFilesConfiguration.configureExternal(String)","2","spark.servlet.ServletTest.testStaticResource [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally []"
"spark","10","spark.resource.AbstractFileResolvingResource.getFile()","1","spark.servlet.ServletTest.testHiHead []"
"spark","11","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","1","spark.GenericSecureIntegrationTest.testUnauthorized []"
"spark","12","spark.Service.secure(String,String,String,String)","1","spark.GenericSecureIntegrationTest.testPatch []"
"spark","13","spark.serialization.SerializerChain.process(OutputStream,Object)","1","spark.GenericSecureIntegrationTest.testEchoParamWithMaj []"
"spark","14","spark.servlet.SparkFilter.getApplications(FilterConfig)","1","spark.servlet.ServletTest.testEchoParam2 []"
"spark","15","spark.servlet.SparkFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","1","spark.servlet.ServletTest.testEchoParam2 []"
"spark","16","spark.route.Routes.add(HttpMethod,String,String,Object)","1","spark.GzipTest.testStaticFileCssStyleCss []"
"spark","17","spark.servlet.SparkFilter.init(FilterConfig)","1","spark.servlet.ServletTest.testEchoParam2 []"
"spark","18","spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)","1","spark.GenericSecureIntegrationTest.testUnauthorized []"
"spark","19","spark.Service.initializeRouteMatcher()","1","spark.GenericSecureIntegrationTest.testPost []"
