"Project","Rank","Method","Count","Tests"
"Project","MethodIndex","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,boolean)","14","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.BooksIntegrationTest.canListBooks [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.StaticFilesMemberTest.testStaticFileCssStyleCss [],spark.RedirectTest.testRedirectAnyGet [],spark.MultipleServicesTest.testGetHello [],spark.RedirectTest.testRedirectPostWithSpecificCode [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withNullThreadPool [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.GenericIntegrationTest.testTypedExceptionMapper [],spark.GenericSecureIntegrationTest.testPost []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","5","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.MultipleServicesTest.testGetHello [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.staticfiles.StaticFilesTest.testExternalStaticFile []"
"spark","3","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","5","spark.GenericIntegrationTest.testSessionReset [],spark.BooksIntegrationTest.canUpdateBook [],spark.CookiesIntegrationTest.testCreateCookie [],spark.StaticFilesMemberTest.testStaticFileExpireTime [],spark.GenericSecureIntegrationTest.testEchoParam1 []"
"spark","4","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","4","spark.GenericIntegrationTest.testExceptionMapper [],spark.BodyAvailabilityTest.testPost [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode []"
"spark","5","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","4","spark.GenericIntegrationTest.testGetByteBufferHi [],spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.paths_should_be_nestable []"
"spark","6","spark.staticfiles.StaticFilesConfiguration.configureExternal(String)","3","spark.GenericIntegrationTest.testXForwardedFor [],spark.servlet.ServletTest.testGetHiAfterFilter [],spark.servlet.ServletTest.testGetHi []"
"spark","7","spark.staticfiles.StaticFilesConfiguration.configure(String)","2","spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.GenericIntegrationTest.testGetHi []"
"spark","8","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","2","spark.GenericSecureIntegrationTest.testNotFound [],spark.CookiesIntegrationTest.testRemoveCookieWithPath []"
"spark","9","spark.Service.addRoute(HttpMethod,RouteImpl)","2","spark.StaticFilesMemberTest.testStaticFileHeaders [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal []"
"spark","10","spark.Service.stop()","1","spark.MultipleServicesTest.testGetRedirectedHi []"
"spark","11","spark.resource.AbstractFileResolvingResource.getFile()","1","spark.GenericIntegrationTest.routes_should_be_accept_type_aware []"
"spark","12","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","1","spark.GenericSecureIntegrationTest.testXForwardedFor []"
"spark","13","spark.route.ServletRoutes.get()","1","spark.servlet.ServletTest.testStaticResource []"
"spark","14","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","1","spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode []"
"spark","15","spark.http.matching.MatcherFilter.getHttpMethodFrom(HttpServletRequest)","1","spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","16","spark.utils.StringUtils.cleanPath(String)","1","spark.GenericIntegrationTest.testEchoParam1 []"
"spark","17","spark.staticfiles.StaticFilesFolder.localConfiguredTo(String)","1","spark.GenericIntegrationTest.testStaticFile []"
"spark","18","spark.Service.getPaths()","1","spark.StaticFilesMemberTest.testStaticFileExpireTime []"
"spark","19","spark.route.Routes.add(HttpMethod,String,String,Object)","1","spark.staticfiles.StaticFilesTest.testCustomMimeType []"
"spark","20","spark.utils.StringUtils.isBlank(CharSequence)","1","spark.servlet.ServletTest.testUnauthorized []"
"spark","21","spark.route.Routes.add(HttpMethod,RouteImpl)","1","spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally []"
"spark","22","spark.utils.IOUtils.copyLarge(InputStream,OutputStream)","1","spark.staticfiles.StaticFilesTest.testMimeTypes []"
"spark","23","spark.Service.init()","1","spark.FilterTest.testJustFilter []"
