"Project","Rank","Method","Count","Tests"
"Project","MethodIndex","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,boolean)","25","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.RedirectTest.testRedirectPut [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.GenericSecureIntegrationTest.testNotFound [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.GenericIntegrationTest.testExceptionMapper [],spark.GenericIntegrationTest.testGetHi [],spark.RedirectTest.testRedirectAnyPutWithSpecificCode [],spark.GzipTest.checkGzipCompression [],spark.GenericSecureIntegrationTest.testPost [],spark.ResponseBodyTest.testSPECIAL [],spark.GenericIntegrationTest.testHiHead [],spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally [],spark.BooksIntegrationTest.canDeleteBook [],spark.MultipleServicesTest.testGetHello [],spark.RedirectTest.testRedirectGet [],spark.GenericIntegrationTest.testStaticFile []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()","12","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.RedirectTest.testRedirectAnyGetWithSpecificCode [],spark.MultipleServicesTest.testGetHello [],spark.GenericSecureIntegrationTest.testNotFound [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.RedirectTest.testRedirectAnyPost [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.GenericIntegrationTest.testSplatWithEncodedSlash [],spark.ResponseBodyTest.testMAXIME [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst []"
"spark","3","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)","5","spark.staticfiles.DisableMimeGuessingTest.testMimeTypes [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.GenericIntegrationTest.testGetRoot [],spark.StaticFilesMemberTest.testStaticFileExpireTime [],spark.GenericIntegrationTest.testNotFoundExceptionMapper []"
"spark","4","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)","5","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.GenericIntegrationTest.testXForwardedFor [],spark.GenericIntegrationTest.testGetRoot [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.GenericIntegrationTest.testGetBinaryHi []"
"spark","5","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","3","spark.ResponseBodyTest.testSPECIAL [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.GenericIntegrationTest.paths_should_be_nestable []"
"spark","6","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)","2","spark.embeddedserver.jetty.SocketConnectorFactoryTest.testCreateSecureSocketConnector [],spark.GenericSecureIntegrationTest.testEchoParam1 []"
"spark","7","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","2","spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.GzipTest.checkGzipCompression []"
"spark","8","spark.Service.getPaths()","2","spark.MultipleServicesTest.testGetHello [],spark.RedirectTest.testRedirectPostWithSpecificCode []"
"spark","9","spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)","2","spark.GenericIntegrationTest.testGetRoot [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj []"
"spark","10","spark.resource.ClassPathResourceHandler.getResource(String)","2","spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml [],spark.GenericIntegrationTest.testNotFoundExceptionMapper []"
"spark","11","spark.Request.getParams(List<String>,List<String>)","1","spark.RequestTest.testContentLength []"
"spark","12","spark.staticfiles.StaticFilesConfiguration.configure(String)","1","spark.StaticFilesMemberTest.testExternalStaticFile []"
"spark","13","spark.resource.AbstractFileResolvingResource.getFile()","1","spark.GenericIntegrationTest.paths_should_be_very_nestable []"
"spark","14","spark.route.ServletRoutes.get()","1","spark.servlet.ServletTest.testNotFound []"
"spark","15","spark.utils.SparkUtils.convertRouteToList(String)","1","spark.RequestTest.testContextPath []"
"spark","16","spark.staticfiles.StaticFilesFolder.localConfiguredTo(String)","1","spark.MultipleServicesTest.testGetRedirectedHi []"
"spark","17","spark.utils.SparkUtils.isSplat(String)","1","spark.customerrorpages.CustomErrorPagesTest.testCustomInternal []"
"spark","18","spark.resource.AbstractResourceHandler.getResource(HttpServletRequest)","1","spark.GenericIntegrationTest.testRuntimeExceptionForDone []"
"spark","19","spark.route.RouteEntry.matchPath(String)","1","spark.servlet.ServletTest.testPost []"
"spark","20","spark.Service.initializeRouteMatcher()","1","spark.CookiesIntegrationTest.testCreateCookie []"
"spark","21","spark.Service.addRoute(HttpMethod,RouteImpl)","1","spark.StaticFilesMemberTest.testStaticFileHeaders []"
"spark","22","spark.utils.ClassUtils.registerCommonClasses(Class<?>...)","1","spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue []"
"spark","23","spark.Service.init()","1","spark.staticfiles.StaticFilesTest.testExternalStaticFile []"
