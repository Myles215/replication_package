"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","7","com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization [gson],com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization [gson],com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization [gson],com.google.gson.functional.ArrayTest.testArrayOfNullSerialization [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization [gson]"
"gson","2","com.google.gson.GsonBuilder.create()","6","com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDotPolicySerialization [gson],com.google.gson.ObjectTypeAdapterTest.testSerialize [gson],com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays [gson],com.google.gson.functional.VersioningTest.testVersionedClassesSerialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization [gson]"
"gson","3","com.google.gson.internal.Streams.parse(JsonReader)","3","com.google.gson.internal.bind.JsonElementReaderTest.testBooleans [gson],com.google.gson.internal.bind.JsonElementReaderTest.testStrings [gson],com.google.gson.JsonParserTest.testParseMixedArray [gson]"
"gson","4","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>)","3","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter [gson],com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields [gson]"
"gson","5","com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>)","3","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray [gson],com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization [gson]"
"gson","6","com.google.gson.Gson.getAdapter(TypeToken<T>)","2","com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray [gson],com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization [gson]"
"gson","7","com.google.gson.stream.JsonReader.peek()","2","com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization [gson],com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization [gson]"
"gson","8","com.google.gson.Gson.newJsonReader(Reader)","2","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked [gson],com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization [gson]"
"gson","9","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","2","com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonSerializerDeserializerBasedJsonAdapterOnClass [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter [gson]"
"gson","10","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","2","com.google.gson.functional.EnumTest.testEnumCaseMapping [gson],com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls [gson]"
"gson","11","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","2","com.google.gson.regression.JsonAdapterNullSafeTest.testNullSafeBugDeserialize [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation [gson]"
"gson","12","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","2","com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization [gson],com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException [gson]"
"gson","13","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","2","com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testJsonElementTypeMismatch [gson]"
"gson","14","com.google.gson.DefaultDateTypeAdapter.deserializeToDate(String)","2","com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson],com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson]"
"gson","15","com.google.gson.util.VersionUtils.determineMajorJavaVersion()","2","com.google.gson.functional.MapTest.testMapDeserializationEmpty [gson],com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion [gson]"
"gson","16","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","2","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter [gson],com.google.gson.functional.FieldNamingTest.testUpperCamelCase [gson]"
"gson","17","com.google.gson.internal.Excluder.excludeField(Field,boolean)","2","com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization [gson],com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization [gson]"
"gson","18","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","2","com.google.gson.functional.EnumTest.testEnumSet [gson],com.google.gson.functional.MapTest.testMapSerialization [gson]"
"gson","19","com.google.gson.FieldNamingPolicy.separateCamelCase(String,String)","1","com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation [gson]"
"gson","20","com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(Type,Class<?superT>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree [gson]"
"gson","21","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)","1","com.google.gson.functional.ObjectTest.testNullFieldsDeserialization [gson]"
"gson","22","com.google.gson.internal.ConstructorConstructor.get(TypeToken<T>)","1","com.google.gson.functional.MapTest.testMapSubclassDeserialization [gson]"
"gson","23","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","1","com.google.gson.functional.EnumTest.testEnumSubclass [gson]"
"gson","24","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters [gson]"
"gson","25","com.google.gson.internal.reflect.PreJava9ReflectionAccessor.makeAccessible(AccessibleObject)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize [gson]"
"gson","26","com.google.gson.internal.Streams.write(JsonElement,JsonWriter)","1","com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger [gson]"
"gson","27","com.google.gson.internal.UnsafeAllocator.create()","1","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject [gson]"
"gson","28","com.google.gson.reflect.TypeToken.getRawType()","1","com.google.gson.functional.ObjectTest.testNestedSerialization [gson]"
"gson","29","com.google.gson.internal.LinkedHashTreeMap.find(K,boolean)","1","com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash [gson]"
"gson","30","com.google.gson.JsonElement.toString()","1","com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities [gson]"
