"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","5","com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization [gson],com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization [gson],com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive [gson]"
"gson","2","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","5","com.google.gson.functional.CollectionTest.testLinkedListSerialization [gson],com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper [gson],com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings [gson],com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization [gson]"
"gson","3","com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>)","5","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap [gson],com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization [gson],com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass [gson],com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization [gson],com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree [gson]"
"gson","4","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>)","4","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField [gson],com.google.gson.internal.bind.RecursiveTypesResolveTest.testRecursiveResolveSimple [gson],com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields [gson]"
"gson","5","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","4","com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce [gson],com.google.gson.functional.PrettyPrintingTest.testEmptyMapField [gson],com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization [gson],com.google.gson.MixedStreamTest.testReadClosed [gson]"
"gson","6","com.google.gson.GsonBuilder.create()","3","com.google.gson.ObjectTypeAdapterTest.testSerialize [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization [gson],com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization [gson]"
"gson","7","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","3","com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField [gson],com.google.gson.functional.PrimitiveTest.testByteDeserialization [gson],com.google.gson.JsonParserTest.testParseEmptyString [gson]"
"gson","8","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","3","com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers [gson],com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers [gson]"
"gson","9","com.google.gson.internal.Streams.parse(JsonReader)","2","com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose [gson],com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails [gson]"
"gson","10","com.google.gson.Gson.getAdapter(TypeToken<T>)","2","com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree [gson]"
"gson","11","com.google.gson.Gson.newJsonReader(Reader)","2","com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage [gson]"
"gson","12","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>)","2","com.google.gson.functional.JavaUtilTest.testProperties [gson],com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter [gson]"
"gson","13","com.google.gson.DefaultDateTypeAdapter.deserializeToDate(String)","2","com.google.gson.DefaultDateTypeAdapterTest.testDateDeserializationISO8601 [gson],com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","14","com.google.gson.util.VersionUtils.determineMajorJavaVersion()","2","com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization [gson],com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface [gson]"
"gson","15","com.google.gson.JsonParser.parse(JsonReader)","2","com.google.gson.internal.bind.JsonElementReaderTest.testBooleans [gson],com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities [gson]"
"gson","16","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","2","com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization [gson],com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField [gson]"
"gson","17","com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(Class<?>,Object)","1","com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy [gson]"
"gson","18","com.google.gson.FieldAttributes.getAnnotation(Class<T>)","1","com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization [gson]"
"gson","19","com.google.gson.internal.Excluder.create(Gson,TypeToken<T>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject [gson]"
"gson","20","com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(Type,Class<?superT>)","1","com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances [gson]"
"gson","21","com.google.gson.internal.bind.JsonTreeReader.peek()","1","com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree [gson]"
"gson","22","com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(Type,Class<?superT>)","1","com.google.gson.functional.CollectionTest.testIssue1107 [gson]"
"gson","23","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize [gson]"
"gson","24","com.google.gson.internal.LinkedTreeMap.rebalance(Node<K,V>,boolean)","1","com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys [gson]"
"gson","25","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","1","com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization [gson]"
"gson","26","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause [gson]"
"gson","27","com.google.gson.internal.Primitives.isPrimitive(Type)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize [gson]"
"gson","28","com.google.gson.JsonPrimitive.setValue(Object)","1","com.google.gson.JsonObjectTest.testDeepCopy [gson]"
"gson","29","com.google.gson.TypeAdapter.fromJson(Reader)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize [gson]"
"gson","30","com.google.gson.internal.bind.MapTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive [gson]"
"gson","31","com.google.gson.JsonElement.toString()","1","com.google.gson.internal.bind.JsonTreeWriterTest.testArray [gson]"
"gson","32","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","1","com.google.gson.functional.SerializedNameTest.testMultipleNamesDeserializedCorrectly [gson]"
"gson","33","com.google.gson.internal.Excluder.excludeField(Field,boolean)","1","com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization [gson]"
