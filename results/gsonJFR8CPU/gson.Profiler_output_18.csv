"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","6","com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger [gson],com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays [gson],com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter [gson],com.google.gson.MixedStreamTest.testWriteNulls [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationWorksForParameterizedType [gson]"
"gson","2","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>)","4","com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree [gson],com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter [gson]"
"gson","3","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","4","com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers [gson],com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer [gson]"
"gson","4","com.google.gson.Gson.getAdapter(TypeToken<T>)","3","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive [gson],com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields [gson]"
"gson","5","com.google.gson.GsonBuilder.create()","3","com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays [gson],com.google.gson.functional.FieldNamingTest.testIdentity [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation [gson]"
"gson","6","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","3","com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization [gson],com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization [gson],com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType [gson]"
"gson","7","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","3","com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization [gson],com.google.gson.functional.CollectionTest.testLinkedListSerialization [gson],com.google.gson.functional.MapTest.testComplexKeysSerialization [gson]"
"gson","8","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","3","com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicLongWithStringSerializationPolicy [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization [gson]"
"gson","9","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","2","com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects [gson],com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization [gson]"
"gson","10","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","2","com.google.gson.functional.MapTest.testComplexKeysDeserialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree [gson]"
"gson","11","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","2","com.google.gson.functional.JsonTreeTest.testJsonTreeToString [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization [gson]"
"gson","12","com.google.gson.internal.Excluder.excludeField(Field,boolean)","2","com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization [gson],com.google.gson.functional.VersioningTest.testVersionedClassesSerialization [gson]"
"gson","13","com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>)","2","com.google.gson.functional.CollectionTest.testWildcardCollectionField [gson],com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization [gson]"
"gson","14","com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(Class<?>,Object)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical [gson]"
"gson","15","com.google.gson.stream.JsonWriter.endArray()","1","com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace [gson]"
"gson","16","com.google.gson.internal.Streams.parse(JsonReader)","1","com.google.gson.internal.bind.JsonElementReaderTest.testObject [gson]"
"gson","17","com.google.gson.FieldAttributes.getAnnotation(Class<T>)","1","com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode [gson]"
"gson","18","com.google.gson.Gson.toJson(Object,Type,Appendable)","1","com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization [gson]"
"gson","19","com.google.gson.stream.JsonReader.peek()","1","com.google.gson.functional.TypeVariableTest.testBasicTypeVariables [gson]"
"gson","20","com.google.gson.stream.JsonReader.readEscapeCharacter()","1","com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization [gson]"
"gson","21","com.google.gson.stream.JsonReader.nextQuotedValue(char)","1","com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys [gson]"
"gson","22","com.google.gson.internal.LinkedTreeMap.find(K,boolean)","1","com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys [gson]"
"gson","23","com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(Type,Class<?superT>)","1","com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization [gson]"
"gson","24","com.google.gson.internal.ConstructorConstructor.get(TypeToken<T>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField [gson]"
"gson","25","com.google.gson.stream.JsonReader.nextUnquotedValue()","1","com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedString [gson]"
"gson","26","com.google.gson.JsonPrimitive.setValue(Object)","1","com.google.gson.JsonPrimitiveTest.testShortEqualsInteger [gson]"
"gson","27","com.google.gson.DefaultDateTypeAdapter.deserializeToDate(String)","1","com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","28","com.google.gson.util.VersionUtils.determineMajorJavaVersion()","1","com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter [gson]"
