"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.GsonBuilder.create()","6","com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue [gson],com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField [gson],com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject [gson],com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization [gson]"
"gson","2","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","5","com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType [gson],com.google.gson.functional.JsonParserTest.testExtraCommasInArrays [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField [gson],com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper [gson]"
"gson","3","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>)","4","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize [gson],com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer [gson],com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization [gson]"
"gson","4","com.google.gson.internal.Streams.parse(JsonReader)","3","com.google.gson.internal.bind.JsonElementReaderTest.testWrongType [gson],com.google.gson.internal.bind.JsonElementReaderTest.testEmptyObject [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNumbers [gson]"
"gson","5","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","3","com.google.gson.functional.CollectionTest.testLinkedListSerialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization [gson],com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization [gson]"
"gson","6","com.google.gson.DefaultDateTypeAdapter.deserializeToDate(String)","3","com.google.gson.DefaultDateTypeAdapterTest.testDateDeserializationISO8601 [gson],com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson]"
"gson","7","com.google.gson.Gson.toJson(Object,Type,Appendable)","2","com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization [gson],com.google.gson.functional.MapTest.testMapSubclassSerialization [gson]"
"gson","8","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","2","com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization [gson],com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization [gson]"
"gson","9","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","2","com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders [gson],com.google.gson.functional.MapTest.testMapDeserializationEmpty [gson]"
"gson","10","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","2","com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization [gson],com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization [gson]"
"gson","11","com.google.gson.internal.Streams.write(JsonElement,JsonWriter)","2","com.google.gson.functional.JsonArrayTest.testIntegerPrimitiveAddition [gson],com.google.gson.functional.JsonArrayTest.testMixedPrimitiveAddition [gson]"
"gson","12","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","2","com.google.gson.functional.TypeVariableTest.testBasicTypeVariables [gson],com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization [gson]"
"gson","13","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","2","com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson],com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject [gson]"
"gson","14","com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>)","2","com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls [gson],com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace [gson]"
"gson","15","com.google.gson.internal.bind.TreeTypeAdapter.newFactoryWithMatchRawType(TypeToken<?>,Object)","1","com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException [gson]"
"gson","16","com.google.gson.reflect.TypeToken.hashCode()","1","com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls [gson]"
"gson","17","com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(Type,Class<?superT>)","1","com.google.gson.functional.CollectionTest.testSetDeserialization [gson]"
"gson","18","com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(Type,Class<?superT>)","1","com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization [gson]"
"gson","19","com.google.gson.stream.JsonReader.nextDouble()","1","com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber [gson]"
"gson","20","com.google.gson.Gson.newJsonReader(Reader)","1","com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal [gson]"
"gson","21","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)","1","com.google.gson.functional.ReadersWritersTest.testWriterForSerialization [gson]"
"gson","22","com.google.gson.internal.UnsafeAllocator.create()","1","com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization [gson]"
"gson","23","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(Field,boolean,Excluder)","1","com.google.gson.functional.ObjectTest.testInnerClassSerialization [gson]"
"gson","24","com.google.gson.stream.JsonWriter.value(Number)","1","com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization [gson]"
"gson","25","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>)","1","com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField [gson]"
"gson","26","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","1","com.google.gson.functional.ObjectTest.testNullArraysDeserialization [gson]"
"gson","27","com.google.gson.internal.Excluder.excludeField(Field,boolean)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray [gson]"
