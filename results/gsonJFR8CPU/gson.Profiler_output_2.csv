"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>)","9","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked [gson],com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization [gson],com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization [gson],com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization [gson],com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization [gson],com.google.gson.functional.FieldNamingTest.testIdentity [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter [gson],com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType [gson],com.google.gson.functional.MapTest.testGeneralMapField [gson]"
"gson","2","com.google.gson.GsonBuilder.create()","8","com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize [gson],com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration [gson],com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation [gson],com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField [gson],com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization [gson]"
"gson","3","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","5","com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization [gson],com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores [gson],com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testJsonSerializerDeserializerBasedJsonAdapterOnFields [gson],com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization [gson]"
"gson","4","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","3","com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper [gson]"
"gson","5","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","3","com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization [gson],com.google.gson.functional.CollectionTest.testFieldIsArrayList [gson],com.google.gson.functional.MapTest.testMapDeserializationWithLongKeys [gson]"
"gson","6","com.google.gson.internal.Excluder.excludeField(Field,boolean)","3","com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization [gson],com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode [gson]"
"gson","7","com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(Class<?>,Object)","2","com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter [gson],com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed [gson]"
"gson","8","com.google.gson.Gson.toJson(Object,Type,Appendable)","2","com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization [gson],com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization [gson]"
"gson","9","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)","2","com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe [gson],com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization [gson]"
"gson","10","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","2","com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization [gson]"
"gson","11","com.google.gson.internal.Streams.write(JsonElement,JsonWriter)","2","com.google.gson.functional.JsonArrayTest.testSameAddition [gson],com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse [gson]"
"gson","12","com.google.gson.internal.UnsafeAllocator.create()","2","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree [gson]"
"gson","13","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","2","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter [gson],com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField [gson]"
"gson","14","com.google.gson.Gson.fromJson(Reader,Type)","1","com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization [gson]"
"gson","15","com.google.gson.internal.Streams.parse(JsonReader)","1","com.google.gson.internal.bind.JsonElementReaderTest.testObject [gson]"
"gson","16","com.google.gson.Gson.getAdapter(TypeToken<T>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize [gson]"
"gson","17","com.google.gson.stream.JsonReader.peek()","1","com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper [gson]"
"gson","18","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject [gson]"
"gson","19","com.google.gson.reflect.TypeToken.hashCode()","1","com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization [gson]"
"gson","20","com.google.gson.stream.JsonWriter.beforeValue()","1","com.google.gson.functional.CircularReferenceTest.testCircularSerialization [gson]"
"gson","21","com.google.gson.internal.LinkedTreeMap.find(K,boolean)","1","com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys [gson]"
"gson","22","com.google.gson.stream.JsonReader.nextDouble()","1","com.google.gson.stream.JsonReaderTest.testLenientVeryLongNumber [gson]"
"gson","23","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization [gson]"
"gson","24","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","1","com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization [gson]"
"gson","25","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders [gson]"
"gson","26","com.google.gson.JsonStreamParser.next()","1","com.google.gson.JsonStreamParserTest.testIterator [gson]"
"gson","27","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testNullSafeObjectFromJson [gson]"
"gson","28","com.google.gson.JsonElement.toString()","1","com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities [gson]"
"gson","29","com.google.gson.DefaultDateTypeAdapter.deserializeToDate(String)","1","com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson]"
"gson","30","com.google.gson.util.VersionUtils.determineMajorJavaVersion()","1","com.google.gson.MixedStreamTest.testReadMixedStreamed [gson]"
"gson","31","com.google.gson.JsonParser.parse(JsonReader)","1","com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers [gson]"
