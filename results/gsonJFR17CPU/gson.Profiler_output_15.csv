"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.stream.JsonReader.peek()","3","com.google.gson.functional.ReflectionAccessFilterTest.testInaccessibleNoArgsConstructor [gson],com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays [gson],com.google.gson.stream.JsonReaderTest.testMalformedNumbers [gson]"
"gson","2","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","3","com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders [gson],com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testUnexpectedToken [gson]"
"gson","3","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","3","com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization [gson],com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy [gson],com.google.gson.functional.Java17RecordTest.testJsonAdapterAnnotation [gson]"
"gson","4","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","2","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseSpecialTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidMonth [gson]"
"gson","5","com.google.gson.Gson.getAdapter(TypeToken<T>)","2","com.google.gson.functional.PrimitiveTest.testBooleanDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization [gson]"
"gson","6","com.google.gson.internal.bind.ObjectTypeAdapter.read(JsonReader)","2","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson],com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","7","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","2","com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization [gson],com.google.gson.functional.MapTest.testMapDeserializationWithNullKey [gson]"
"gson","8","com.google.gson.Gson.toJson(Object,Type,JsonWriter)","2","com.google.gson.functional.StringTest.testStringValueSerialization [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter [gson]"
"gson","9","com.google.gson.stream.JsonWriter.value(float)","1","com.google.gson.stream.JsonWriterTest.testNonFiniteFloats [gson]"
"gson","10","com.google.gson.FieldAttributes.getAnnotation(Class<T>)","1","com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization [gson]"
"gson","11","com.google.gson.internal.Streams.parse(JsonReader)","1","com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails [gson]"
"gson","12","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","1","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","13","com.google.gson.internal.LinkedTreeMap.find(K,boolean)","1","com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization [gson]"
"gson","14","com.google.gson.JsonArray.add(Number)","1","com.google.gson.JsonArrayAsListTest.testClear [gson]"
"gson","15","com.google.gson.stream.JsonReader.beginArray()","1","com.google.gson.JsonParserTest.testParseDeeplyNestedArrays [gson]"
"gson","16","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","1","com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization [gson]"
"gson","17","com.google.gson.internal.ConstructorConstructor.get(TypeToken<T>)","1","com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization [gson]"
"gson","18","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","1","com.google.gson.MixedStreamTest.testWriteDoesNotMutateState [gson]"
"gson","19","com.google.gson.stream.JsonReader.fillBuffer(int)","1","com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails [gson]"
"gson","20","com.google.gson.internal.UnsafeAllocator.create()","1","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault [gson]"
"gson","21","com.google.gson.stream.JsonReader.nextUnquotedValue()","1","com.google.gson.stream.JsonReaderTest.testVeryLongUnterminatedString [gson]"
"gson","22","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,Method,String,TypeToken<?>,boolean,boolean,boolean)","1","com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization [gson]"
"gson","23","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming [gson]"
"gson","24","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","1","com.google.gson.functional.FormattingStyleTest.testDefault [gson]"
"gson","25","com.google.gson.GsonBuilder.addTypeAdaptersForDate(String,int,int,List<TypeAdapterFactory>)","1","com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation [gson]"
"gson","26","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming [gson]"
"gson","27","com.google.gson.internal.Excluder.excludeField(Field,boolean)","1","com.google.gson.functional.VersioningTest.testVersionedUntilSerialization [gson]"
"gson","28","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault [gson]"
