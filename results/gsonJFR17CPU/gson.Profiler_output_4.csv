"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","6","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","2","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","4","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidDay [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidMonth [gson]"
"gson","3","com.google.gson.internal.ReflectionAccessFilterHelper.getFilterResult(List<ReflectionAccessFilter>,Class<?>)","2","com.google.gson.JsonParserTest.testReadWriteTwoObjects [gson],com.google.gson.MixedStreamTest.testWriteHtmlSafe [gson]"
"gson","4","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","2","com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization [gson]"
"gson","5","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","2","com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization [gson],com.google.gson.functional.MapTest.testMapDeserializationWithNullKey [gson]"
"gson","6","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","2","com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDotPolicySerialization [gson],com.google.gson.functional.JsonAdapterSerializerDeserializerTest.testDifferentJsonAdaptersForGenericFieldsOfSameRawType [gson]"
"gson","7","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","2","com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization [gson],com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization [gson]"
"gson","8","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","2","com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry [gson]"
"gson","9","com.google.gson.internal.Excluder.isAnonymousOrNonStaticLocal(Class<?>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap [gson]"
"gson","10","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization [gson]"
"gson","11","com.google.gson.internal.UnsafeAllocator.create()","1","com.google.gson.internal.UnsafeAllocatorInstantiationTest.testConcreteClassInstantiation [gson]"
"gson","12","com.google.gson.Gson.getAdapter(TypeToken<T>)","1","com.google.gson.functional.FormattingStyleTest.testDefault [gson]"
"gson","13","com.google.gson.stream.JsonReader.peek()","1","com.google.gson.stream.JsonReaderTest.testHelloWorld [gson]"
"gson","14","com.google.gson.internal.bind.ObjectTypeAdapter.read(JsonReader)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","15","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","1","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson]"
"gson","16","com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)","1","com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization [gson]"
"gson","17","com.google.gson.internal.ConstructorConstructor.newSpecialCollectionConstructor(Type,Class<?superT>)","1","com.google.gson.functional.EnumTest.testEnumSubclass [gson]"
"gson","18","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","1","com.google.gson.MixedStreamTest.testWriteClosed [gson]"
"gson","19","com.google.gson.stream.JsonReader.doPeek()","1","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson]"
"gson","20","com.google.gson.JsonArray.add(Number)","1","com.google.gson.JsonArrayTest.testIntegerPrimitiveAddition [gson]"
"gson","21","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming [gson]"
"gson","22","com.google.gson.internal.Excluder.excludeField(Field,boolean)","1","com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields [gson]"
"gson","23","com.google.gson.internal.Excluder.excludeClassInStrategy(Class<?>,boolean)","1","com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicLongArrayWithStringSerializationPolicy [gson]"
