"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.Gson.getAdapter(TypeToken<T>)","5","com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization [gson],com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization [gson],com.google.gson.MixedStreamTest.testWriteDoesNotMutateState [gson],com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings [gson]"
"gson","2","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","5","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","3","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","4","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidDay [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseSpecialTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidTime [gson]"
"gson","4","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","4","com.google.gson.MixedStreamTest.testWriteClosed [gson],com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization [gson],com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod [gson],com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization [gson]"
"gson","5","com.google.gson.internal.bind.ObjectTypeAdapter.read(JsonReader)","2","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson],com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","6","com.google.gson.Gson.toJson(Object,Type,JsonWriter)","2","com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization [gson]"
"gson","7","com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)","2","com.google.gson.functional.Java17RecordTest.testObjectDefaultValue [gson],com.google.gson.functional.FieldNamingTest.testUpperCamelCase [gson]"
"gson","8","com.google.gson.internal.bind.JsonTreeWriter.put(JsonElement)","1","com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization [gson]"
"gson","9","com.google.gson.internal.Excluder.isAnonymousOrNonStaticLocal(Class<?>)","1","com.google.gson.functional.ReflectionAccessFilterTest.testBlockInaccessibleJava [gson]"
"gson","10","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.Java17RecordTest.testAccessorIsCalled [gson]"
"gson","11","com.google.gson.stream.JsonReader.peek()","1","com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization [gson]"
"gson","12","com.google.gson.internal.bind.NumberTypeAdapter.newFactory(ToNumberStrategy)","1","com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization [gson]"
"gson","13","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","1","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson]"
"gson","14","com.google.gson.stream.JsonReader.nextQuotedValue(char)","1","com.google.gson.stream.JsonReaderTest.testVeryLongQuotedString [gson]"
"gson","15","com.google.gson.internal.LinkedTreeMap.find(K,boolean)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","16","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>,FilterResult)","1","com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization [gson]"
"gson","17","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues [gson]"
"gson","18","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass [gson]"
"gson","19","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterWrappedInNullSafeAsRequested [gson]"
"gson","20","com.google.gson.stream.JsonReader.nextUnquotedValue()","1","com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedLiteral [gson]"
"gson","21","com.google.gson.stream.JsonReader.nextLong()","1","com.google.gson.stream.JsonReaderTest.testLongLargerThanMaxLongThatWrapsAround [gson]"
"gson","22","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","1","com.google.gson.functional.GsonVersionDiagnosticsTest.testVersionPattern [gson]"
"gson","23","com.google.gson.JsonElement.toString()","1","com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue [gson]"
"gson","24","com.google.gson.internal.ConstructorConstructor.newSpecialCollectionConstructor(Type,Class<?superT>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter [gson]"
"gson","25","com.google.gson.Gson.fromJson(String,Class<T>)","1","com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization [gson]"
"gson","26","com.google.gson.internal.LinkedTreeMap.entrySet()","1","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap [gson]"
"gson","27","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","1","com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType [gson]"
