"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","3","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidDay [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseSpecialTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithDefaultTimezone [gson]"
"gson","2","com.google.gson.internal.Excluder.isAnonymousOrNonStaticLocal(Class<?>)","2","com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization [gson],com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields [gson]"
"gson","3","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","2","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testNullSafeObjectFromJson [gson],com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails [gson]"
"gson","4","com.google.gson.Gson.getAdapter(TypeToken<T>)","2","com.google.gson.functional.MapTest.testMapDeserializationWithNullValue [gson],com.google.gson.MixedStreamTest.testWriteLenient [gson]"
"gson","5","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","2","com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization [gson],com.google.gson.functional.Java17RecordTest.testStaticFieldDeserialization [gson]"
"gson","6","com.google.gson.internal.bind.TreeTypeAdapter.read(JsonReader)","2","com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject [gson],com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull [gson]"
"gson","7","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","2","com.google.gson.JavaSerializationTest.testMapIsSerializable [gson],com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization [gson]"
"gson","8","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","1","com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter [gson]"
"gson","9","com.google.gson.internal.Streams.write(JsonElement,JsonWriter)","1","com.google.gson.JsonArrayTest.testCharPrimitiveAddition [gson]"
"gson","10","com.google.gson.stream.JsonReader.endArray()","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","11","com.google.gson.stream.JsonReader.nextUnquotedValue()","1","com.google.gson.stream.JsonReaderTest.testVeryLongUnquotedLiteral [gson]"
"gson","12","com.google.gson.stream.JsonReader.peek()","1","com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization [gson]"
"gson","13","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","1","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","14","com.google.gson.internal.Excluder.excludeClassChecks(Class<?>)","1","com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization [gson]"
"gson","15","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(JsonWriter,T)","1","com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId [gson]"
"gson","16","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,Method,String,TypeToken<?>,boolean,boolean,boolean)","1","com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization [gson]"
"gson","17","com.google.gson.stream.JsonWriter.writeDeferredName()","1","com.google.gson.functional.ObjectTest.testDateAsMapObjectField [gson]"
"gson","18","com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(Type,Class<?superT>)","1","com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields [gson]"
"gson","19","com.google.gson.Gson.newJsonReader(Reader)","1","com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization [gson]"
"gson","20","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","1","com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType [gson]"
"gson","21","com.google.gson.stream.JsonReader.beginArray()","1","com.google.gson.stream.JsonReaderTest.testStringAsNumberWithTruncatedExponent [gson]"
"gson","22","com.google.gson.internal.ConstructorConstructor.get(TypeToken<T>)","1","com.google.gson.functional.ObjectTest.testInnerClassSerialization [gson]"
"gson","23","com.google.gson.Gson.fromJson(JsonReader,TypeToken<T>)","1","com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField [gson]"
