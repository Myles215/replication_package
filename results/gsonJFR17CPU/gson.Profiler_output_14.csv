"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.Excluder.isAnonymousOrNonStaticLocal(Class<?>)","5","com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject [gson],com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores [gson],com.google.gson.functional.InheritanceTest.testSubClassSerialization [gson],com.google.gson.GsonTest.testDefaultGsonNewBuilderModification [gson]"
"gson","2","com.google.gson.internal.bind.util.ISO8601Utils.parse(String,ParsePosition)","5","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidDay [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseSpecialTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseWithTimezone [gson],com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseInvalidMonth [gson]"
"gson","3","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>,boolean,boolean)","5","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap [gson],com.google.gson.functional.Java17RecordTest.testUnknownJsonProperty [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation [gson],com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization [gson],com.google.gson.functional.EscapingTest.testEscapingObjectFields [gson]"
"gson","4","com.google.gson.internal.bind.DefaultDateTypeAdapter.deserializeToDate(JsonReader)","3","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale [gson],com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","5","com.google.gson.reflect.TypeToken.getTypeTokenTypeArgument()","3","com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization [gson],com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType [gson],com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer [gson]"
"gson","6","com.google.gson.internal.bind.ObjectTypeAdapter.read(JsonReader)","2","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson],com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedArrays [gson]"
"gson","7","com.google.gson.internal.bind.ObjectTypeAdapter.newFactory(ToNumberStrategy)","2","com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization [gson],com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId [gson]"
"gson","8","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","2","com.google.gson.functional.CollectionTest.testIssue1107 [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault [gson]"
"gson","9","com.google.gson.internal.Excluder.excludeClassChecks(Class<?>)","2","com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization [gson],com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization [gson]"
"gson","10","com.google.gson.Gson.fromJson(String,Class<T>)","2","com.google.gson.functional.Java17RecordTest.testPrimitiveDefaultValues [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation [gson]"
"gson","11","com.google.gson.stream.JsonReader.doPeek()","2","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson],com.google.gson.JsonParserTest.testParseDeeplyNestedArrays [gson]"
"gson","12","com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(Gson,TypeToken<T>)","1","com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization [gson]"
"gson","13","com.google.gson.Gson.getAdapter(TypeToken<T>)","1","com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization [gson]"
"gson","14","com.google.gson.Gson.toJson(Object,Type,Appendable)","1","com.google.gson.functional.CollectionTest.testStack [gson]"
"gson","15","com.google.gson.internal.bind.util.ISO8601Utils.format(Date,boolean,TimeZone)","1","com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateFormatWithTimezone [gson]"
"gson","16","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(JsonWriter,T)","1","com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson]"
"gson","17","com.google.gson.stream.JsonWriter.beforeName()","1","com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization [gson]"
"gson","18","com.google.gson.internal.PreJava9DateFormatProvider.getUSDateTimeFormat(int,int)","1","com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testFormattingInFr [gson]"
"gson","19","com.google.gson.internal.LinkedTreeMap.find(K,boolean)","1","com.google.gson.ObjectTypeAdapterTest.testDeserializeDeeplyNestedObjects [gson]"
"gson","20","com.google.gson.Gson.newJsonReader(Reader)","1","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked [gson]"
"gson","21","com.google.gson.internal.ConstructorConstructor.get(TypeToken<T>)","1","com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization [gson]"
"gson","22","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","1","com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce [gson]"
"gson","23","com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>,FilterResult)","1","com.google.gson.functional.TypeAdapterRuntimeTypeWrapperTest.testJsonDeserializer_SubclassBackwardCompatibility [gson]"
"gson","24","com.google.gson.FieldNamingPolicy.separateCamelCase(String,char)","1","com.google.gson.functional.FieldNamingTest.testUpperCaseWithUnderscores [gson]"
"gson","25","com.google.gson.internal.UnsafeAllocator.create()","1","com.google.gson.functional.CollectionTest.testWildcardCollectionField [gson]"
"gson","26","com.google.gson.stream.JsonReader.beginObject()","1","com.google.gson.stream.JsonReaderTest.testSkipObjectNameUnquoted [gson]"
"gson","27","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,Method,String,TypeToken<?>,boolean,boolean,boolean)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField [gson]"
"gson","28","com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)","1","com.google.gson.JsonParserTest.testParseDeeplyNestedObjects [gson]"
"gson","29","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","1","com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject [gson]"
"gson","30","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","1","com.google.gson.functional.Java17RecordTest.testJsonAdapterAnnotation [gson]"
"gson","31","com.google.gson.internal.Excluder.excludeField(Field,boolean)","1","com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipExplicitlySkippedFields [gson]"
