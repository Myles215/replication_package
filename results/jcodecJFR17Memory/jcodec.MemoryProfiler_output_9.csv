"Project","MethodIndex","Method","Count","Tests"
"jcodec","1","org.jcodec.codecs.h264.io.CAVLC.writeBlockGen(BitWriter,int[],VLC[],int,int,int[],VLC)","119","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","2","org.jcodec.codecs.h264.io.CAVLC.readCoeffs(BitReader,VLC,VLC[],int[],int,int,int[])","102","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","3","org.jcodec.codecs.h264.encode.MBWriterINxN.encodeMacroblock(EncodingContext,Picture,int,int,BitWriter,EncodedMB,int,NonRdVector)","57","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","4","org.jcodec.codecs.h264.decode.BlockInterpolator.initUnsafe()","50","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC1 [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInference [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRefCAVLC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCABAC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC3 []"
"jcodec","5","org.jcodec.common.model.Picture.createCropped(int,int,ColorSpace,Rect)","36","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC4 [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict1 [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.scale.ResamplerTest.testRandomLanczos [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","6","org.jcodec.codecs.h264.decode.BlockInterpolator.initSafe()","35","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict4 [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","7","org.jcodec.codecs.h264.encode.MBWriterP16x16.encodeMacroblock(EncodingContext,Picture,int,int,BitWriter,EncodedMB,int,NonRdVector)","31","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","8","org.jcodec.codecs.h264.decode.FrameReader.createSliceReader(ByteBuffer,NALUnit)","27","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInference [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CABAC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC2 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CABAC []"
"jcodec","9","org.jcodec.codecs.h264.encode.MBWriterI16x16.chroma(EncodingContext,Picture,int,int,MBType,BitWriter,int,Picture,int)","23","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","10","org.jcodec.codecs.h264.H264Encoder.encodeCand(EncodingContext,EncodedMB,SliceType,Picture,int,int,BitWriter,NonRdVector,RdVector)","21","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","11","org.jcodec.codecs.h264.encode.MotionEstimator.estimateFullPix(Picture,byte[],int,int,int,int)","18","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","12","org.jcodec.common.IntArrayList.fill(int,int,int)","17","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testVertical [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CAVLC [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.api.Issue380Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CAVLC [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testHorizontal [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","13","org.jcodec.codecs.h264.H264Decoder.decodeFrameFromNals(List<ByteBuffer>,byte[][])","15","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC2 [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CABAC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC3 []"
"jcodec","14","org.jcodec.codecs.h264.io.CAVLC.codeTableChromaDC()","15","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRefCAVLC [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CABAC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CABAC []"
"jcodec","15","org.jcodec.containers.mkv.MKVType.values()","14","org.jcodec.containers.mkv.MKVDemuxerTest._testAudio [],org.jcodec.containers.mkv.CompareFramesTest.testFramesByTrack [],org.jcodec.containers.mkv.MKVDemuxerTest._testSubtitle [],org.jcodec.containers.mkv.WEBMDemuxerTest.testGetFrame [],org.jcodec.containers.mkv.Issue365Test.testDualAud [],org.jcodec.containers.mkv.MkvExtractSubsTest.testExampleSubs [],org.jcodec.containers.mkv.MKVDemuxerTest.showAll [],org.jcodec.containers.mkv.MKVDemuxerTest._testVideo []"
"jcodec","16","org.jcodec.common.IntArrayList.toArray()","14","org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testDC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CABAC [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC3 [],org.jcodec.codecs.h264.ChromaPredictionBuilderTest.testHorizontal [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testChess [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC5 [],org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCABAC [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC4 []"
"jcodec","17","org.jcodec.codecs.h264.BufferH264ES.nextFrame()","13","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInferenceCAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInference [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testSpatialDirect [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialCAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRef [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC []"
"jcodec","18","org.jcodec.containers.dpx.DPXReader.date(String,String)","13","org.jcodec.containers.dpx.DPXReaderTest.testParseMetadata_DPXV2 [],org.jcodec.containers.dpx.DPXReaderTest.testTryParseISO8601Date [],org.jcodec.containers.dpx.DPXReaderTest.testParseMetadata_DPXV1 []"
"jcodec","19","org.jcodec.codecs.h264.encode.MBWriterI16x16.luma(EncodingContext,Picture,int,int,BitWriter,int,Picture,int,int[])","12","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","20","org.jcodec.common.io.NIOUtils.toArray(ByteBuffer)","11","org.jcodec.containers.mxf.MXFDemuxerTest.testOneMore [],org.jcodec.codecs.png.PNGEncoderTest.testPNG [],org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteFast [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","21","org.jcodec.codecs.h264.encode.MBWriterP16x16.luma(EncodingContext,int[],int,int,BitWriter,int,int[])","10","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","22","org.jcodec.codecs.h264.decode.SliceDecoder.initContext()","9","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict1 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict4 []"
"jcodec","23","org.jcodec.codecs.h264.encode.MBWriterI16x16.extractDC(int[][])","9","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","24","org.jcodec.platform.Platform.copyOfInt(int[],int)","9","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","25","org.jcodec.codecs.h264.encode.IntraPredEstimator.getLumaPred4x4(Picture,EncodingContext,int,int,int)","9","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.IntraPredEstimatorTest.testLumaPred4x4 [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","26","org.jcodec.codecs.h264.encode.CQPRateControl.initialQpDelta(Picture,int,int)","8","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","27","org.jcodec.codecs.h264.io.CABAC.readCoeffs(MDecoder,BlockType,int[],int,int,int[],int[],int[])","8","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","28","org.jcodec.common.dct.DCTRef.fdct(int[],int)","7","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","29","org.jcodec.codecs.h264.H264Encoder.encodeSlice(SeqParameterSet,PictureParameterSet,Picture,ByteBuffer,boolean,int,SliceType,int)","6","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","30","org.jcodec.codecs.h264.io.model.SeqParameterSet.read(ByteBuffer)","6","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testRawDemuxer [],org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testVideoColor [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CABAC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict4 []"
"jcodec","31","org.jcodec.containers.mkv.MKVParser.readEbmlId(SeekableByteChannel)","6","org.jcodec.containers.mkv.DisplayTimecodesTest.test [],org.jcodec.containers.mkv.CompareFramesTest.testFramesByTrack [],org.jcodec.containers.mkv.MKVDemuxerTest._testSubtitle [],org.jcodec.containers.mkv.MKVDemuxerTest.showAll [],org.jcodec.containers.mkv.MKVDemuxerTest._testVideo []"
"jcodec","32","org.jcodec.codecs.h264.encode.MBDeblocker.deblockMBP(EncodedMB,EncodedMB,EncodedMB)","6","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","33","org.jcodec.codecs.h264.encode.MotionEstimator.estimateQPix(Picture,byte[],int[],int,int)","6","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.codecs.h264.encode.MotionEstimatorTest.testMotionEstimator [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","34","org.jcodec.codecs.h264.io.CAVLC.fork()","5","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","35","org.jcodec.codecs.h264.decode.MBlockDecoderBase.decodeChroma(MBlock,int,int,boolean,boolean,Picture,int)","5","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInferenceCAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC2 []"
"jcodec","36","org.jcodec.codecs.h264.encode.MBWriterP16x16.chroma(EncodingContext,int[],int[],int,int,BitWriter,int)","5","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","37","org.jcodec.common.io.NIOUtils.fetchFromChannel(ReadableByteChannel,int)","5","org.jcodec.codecs.png.PNGDecoderTest.testPNG [],org.jcodec.scale.ResamplerTest.testRandomBicubic []"
"jcodec","38","org.jcodec.codecs.h264.decode.CAVLCReader.readNBit(BitReader,int,String)","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","39","org.jcodec.codecs.h264.encode.MBWriterI16x16.writeDC(CAVLC,int,int,BitWriter,int,int,int,int[],MBType,MBType)","4","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J [],org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","40","org.jcodec.codecs.h264.encode.MBWriterINxN.lumaAnal(EncodingContext,Picture,int,int,BitWriter,int,EncodedMB,int[],int[][])","4","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","41","org.jcodec.codecs.h264.decode.SliceReader.readLuma8x8CAVLC(MBlock,boolean,boolean,int,int)","4","org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 []"
"jcodec","42","org.jcodec.common.StringUtils.splitWorker(String,char,boolean)","4","org.jcodec.movtool.StripTest.testIntervals [],org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testAudioTrack [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","43","org.jcodec.common.io.BitWriter.fork()","3","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","44","org.jcodec.containers.mkv.util.EbmlUtil.toHexString(byte[])","3","org.jcodec.containers.mkv.BlockOrderingTest.testFixedLacing []"
"jcodec","45","org.jcodec.containers.mp4.demuxer.MP4Demuxer.newTrack(TrakBox)","3","org.jcodec.api.Issue49Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.prores.ProresDecoderTest.testQuaverSize2Frames [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","46","org.jcodec.codecs.h264.encode.IntraPredEstimator.getChromaMode(Picture,EncodingContext,int,int)","3","org.jcodec.codecs.h264.H264EncoderTest.testEncodeDecode [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","47","org.jcodec.containers.mp4.boxes.NodeBox.findBox(Box,List<String>,Collection<Box>)","3","org.jcodec.movtool.StripTest.testIntervals [],org.jcodec.movtool.StripTest.testMultipleStrips []"
"jcodec","48","org.jcodec.codecs.h264.encode.EncodingContext.fork()","3","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","49","org.jcodec.codecs.h264.decode.SliceReader.readMacroblock(MBlock)","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","50","org.jcodec.platform.Platform.classes(Object[])","3","org.jcodec.containers.mkv.DisplayTimecodesTest.test [],org.jcodec.containers.mkv.MKVDemuxerTest._testAudio [],org.jcodec.containers.mkv.MKVDemuxerTest.showAll []"
"jcodec","51","org.jcodec.scale.BaseResampler.resample(Picture,Picture)","3","org.jcodec.scale.ResamplerTest.testRandomBicubic [],org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","52","org.jcodec.codecs.prores.ProresDecoder.decodeSlice(ByteBuffer,int[],int[],int[],int,int,int,short,byte[][],byte[][],int,int,int)","3","org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit [],org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames [],org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames []"
"jcodec","53","org.jcodec.platform.Platform.invokeStaticMethod(Class<?>,String,Object[])","3","org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.movtool.MetadataEditorTest.testKeyedRead [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","54","org.jcodec.codecs.h264.decode.MBlockDecoderBDirect.predictBSpatialDirect(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,PartPred[],Picture,int[])","3","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","55","org.jcodec.codecs.vpx.vp9.InterModeInfo.readInterMode(int,int,int,VPXBooleanDecoder,DecodingContext)","3","org.jcodec.codecs.vpx.vp9.InterModeInfoTest.testReadInterMode [],org.jcodec.codecs.vpx.vp9.InterModeInfoTest.testReadInterModeSub []"
"jcodec","56","org.jcodec.containers.mp4.boxes.NodeBox.findAllPath(Box,Class<T>,String[])","3","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames []"
"jcodec","57","org.jcodec.movtool.MetadataEditor.createFrom(File)","3","org.jcodec.movtool.MetadataEditorTest.testInplace [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteFast []"
"jcodec","58","org.jcodec.containers.mp4.muxer.MP4Muxer.doAddTrack(MP4TrackType,Codec)","3","org.jcodec.movtool.StripTest.testIntervals [],org.jcodec.movtool.StripTest.testMultipleStrips [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","59","org.jcodec.codecs.h264.decode.RefListManager.copySort(Comparator<Frame>,Frame)","2","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInference []"
"jcodec","60","org.jcodec.codecs.h264.decode.CAVLCReader.readBool(BitReader,String)","2","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","61","org.jcodec.containers.mxf.MXFDemuxer.parseMeta(UL,ByteBuffer)","2","org.jcodec.containers.mxf.MXFDemuxerTest.testOneMore [],org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset2 []"
"jcodec","62","org.jcodec.codecs.h264.decode.CAVLCReader.readUEtrace(BitReader,String)","2","org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","63","org.jcodec.codecs.h264.decode.CAVLCReader.readSE(BitReader,String)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testMp4Container []"
"jcodec","64","org.jcodec.containers.mp4.MP4Util.getRootAtoms(SeekableByteChannel)","2","org.jcodec.movtool.MetadataEditorTest.testInplace [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow []"
"jcodec","65","org.jcodec.containers.mxf.model.UL.toString()","2","org.jcodec.containers.mxf.MXFDemuxerTest.testOneMore [],org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset []"
"jcodec","66","org.jcodec.codecs.h264.decode.SliceHeaderReader.readDecoderPicMarking(NALUnit,SliceHeader,BitReader)","2","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC3 []"
"jcodec","67","org.jcodec.containers.mxf.MXFDemuxer.readHeaderPartition(SeekableByteChannel)","2","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset2 []"
"jcodec","68","org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.decodeSub8x8(MBlock,int,Picture[],int,int,int,int,int,int,boolean,boolean,boolean,boolean,MvList,int,int,int,int,int,Picture,int,int)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","69","org.jcodec.codecs.h264.decode.FrameReader.readFrame(List<ByteBuffer>)","2","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","70","org.jcodec.platform.Platform.stringFromCharset(byte[],String)","2","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset []"
"jcodec","71","org.jcodec.common.io.NIOUtils.readableChannel(File)","2","org.jcodec.movtool.MoovVersionsTest.testUndo []"
"jcodec","72","org.jcodec.codecs.h264.decode.SliceDecoder.decodeFromReader(SliceReader)","2","org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 []"
"jcodec","73","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.getColorInfo(AbstractMP4DemuxerTrack)","2","org.jcodec.api.Issue379H264LTRTest.testFrameGrabCanExtractOrientation [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","74","org.jcodec.containers.mkv.boxes.MkvBlock.readChannel(SeekableByteChannel)","2","org.jcodec.containers.mkv.MKVDemuxerTest._testSubtitle [],org.jcodec.containers.mkv.MKVDemuxerTest.showAll []"
"jcodec","75","org.jcodec.codecs.vpx.vp9.Residual.readOneTU(int,int,int,int,boolean,int,VPXBooleanDecoder,DecodingContext)","2","org.jcodec.codecs.vpx.vp9.ResidualTest.testResidualIntraBlk0416x16 [],org.jcodec.codecs.vpx.vp9.ResidualTest.testResidualIntraBlk004x4 []"
"jcodec","76","org.jcodec.containers.mp4.muxer.MP4Muxer.addTrackWithId(MP4TrackType,Codec,int)","2","org.jcodec.containers.mp4.muxer.MP4MuxerTest.testAddTrackWithSameId []"
"jcodec","77","org.jcodec.codecs.png.PNGDecoder.getCodecMeta(ByteBuffer)","2","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","78","org.jcodec.codecs.h264.encode.MBWriterI16x16.encodeMacroblock(EncodingContext,Picture,int,int,BitWriter,EncodedMB,int,NonRdVector)","2","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBWriterI16x16Test.testGrad []"
"jcodec","79","org.jcodec.codecs.h264.decode.SliceReader.readResidualAC(boolean,boolean,int,MBType,int,int,int,int,int,int[])","2","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CABAC []"
"jcodec","80","org.jcodec.containers.mxf.model.MXFMetadata.readDate(ByteBuffer)","2","org.jcodec.containers.mxf.MXFDemuxerTest.testOneMore [],org.jcodec.containers.mxf.MXFDemuxerTest.testMxfTimecode []"
"jcodec","81","org.jcodec.containers.mp4.demuxer.AbstractMP4DemuxerTrack.readPacketData(SeekableByteChannel,ByteBuffer,long,int)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testAudioTrack []"
"jcodec","82","org.jcodec.common.io.BitReader.createBitReader(ByteBuffer)","2","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad []"
"jcodec","83","org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter8x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,PartPred,PartPred)","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","84","org.jcodec.codecs.h264.io.model.NALUnit.read(ByteBuffer)","2","org.jcodec.api.Issue380Test.testFrameGrabCanExtractOrientation [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CABAC []"
"jcodec","85","org.jcodec.platform.Platform.newInstance(Class<T>,Object[])","2","org.jcodec.containers.mkv.MkvExtractSubsTest.testExampleSubs [],org.jcodec.containers.mkv.MKVDemuxerTest._testVideo []"
"jcodec","86","org.jcodec.common.logging.OutLogSink.postMessage(Message)","2","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset [],org.jcodec.containers.mxf.MXFDemuxerTest.testMxfTimecode []"
"jcodec","87","org.jcodec.common.io.NIOUtils.read(ByteBuffer,int)","2","org.jcodec.movtool.MoovVersionsTest.testRollback [],org.jcodec.codecs.prores.ProresDecoderTest.testHalfSize2Frames []"
"jcodec","88","org.jcodec.codecs.vpx.vp9.ModeInfo.readTxSize(int,int,int,boolean,VPXBooleanDecoder,DecodingContext)","2","org.jcodec.codecs.vpx.vp9.ModeInfoTest.testTxSize []"
"jcodec","89","org.jcodec.codecs.h264.decode.SliceReader.readLumaAC8x8(int,int,int[])","2","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 []"
"jcodec","90","org.jcodec.codecs.vpx.vp9.Residual.read(int,int,int,VPXBooleanDecoder,DecodingContext,ModeInfo)","2","org.jcodec.codecs.vpx.vp9.ResidualTest.testReadResidualSub4x4 []"
"jcodec","91","org.jcodec.common.IntIntMap.createArray(int)","2","org.jcodec.codecs.h264.encode.MBWriterINxNTest.testGrad [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC2 []"
"jcodec","92","org.jcodec.containers.mp3.MPEGAudioDemuxer.skipJunk()","2","org.jcodec.containers.mp3.MPEGAudioDemuxerTest.testParseCBR []"
"jcodec","93","org.jcodec.containers.mps.MTSDemuxer.parsePacket(ByteBuffer)","2","org.jcodec.movtool.MetadataEditorTest.testItunesRead [],org.jcodec.api.Issue380Test.testFrameGrabCanExtractOrientation []"
"jcodec","94","org.jcodec.codecs.mpa.Mp3Decoder.decodeGranule(MpaHeader,ByteBuffer,MP3SideInfo,BitReader,ScaleFactors[],int)","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","95","org.jcodec.containers.mp4.demuxer.AbstractMP4DemuxerTrack.getDuration()","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","96","org.jcodec.containers.mxf.model.UL.newUL(String)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testOneMore []"
"jcodec","97","org.jcodec.containers.mp3.MPEGAudioDemuxer.probe(ByteBuffer)","1","org.jcodec.containers.mp3.MPEGAudioDemuxerTest.testProbe2 []"
"jcodec","98","org.jcodec.codecs.h264.decode.aso.MapManager.getMapper(SliceHeader)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","99","org.jcodec.common.model.Picture.createPicture(int,int,byte[][],ColorSpace)","1","org.jcodec.scale.ResamplerTest.testRandomBicubic []"
"jcodec","100","org.jcodec.platform.Platform.copyOfRangeB(byte[],int,int)","1","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit []"
"jcodec","101","org.jcodec.common.JCodecUtil.detectFormat(File)","1","org.jcodec.movtool.MetadataEditorTest.testItunesRead []"
"jcodec","102","org.jcodec.containers.mp4.boxes.NodeBox.findFirst(NodeBox,Class<T>,String)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","103","org.jcodec.common.JCodecUtil2.getAsIntArray(ByteBuffer,int)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRefCAVLC []"
"jcodec","104","org.jcodec.common.io.NIOUtils.clone(ByteBuffer)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","105","org.jcodec.codecs.mpeg4.MPEG4DecodingContext.readHeaders(ByteBuffer)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","106","org.jcodec.codecs.h264.BufferH264ES.detectPoc(ByteBuffer,NALUnit,SliceHeader)","1","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC []"
"jcodec","107","org.jcodec.containers.mxf.model.MXFInterchangeObject.readBuf(ByteBuffer)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset2 []"
"jcodec","108","org.jcodec.codecs.h264.H264Encoder.initPPS()","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","109","org.jcodec.containers.mp4.boxes.Header.write(ByteBuffer)","1","org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames []"
"jcodec","110","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.getAudioCodecMeta(AbstractMP4DemuxerTrack,MP4TrackType)","1","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testDefaultSampleSize []"
"jcodec","111","org.jcodec.containers.mp4.boxes.SampleToChunkBox.parse(ByteBuffer)","1","org.jcodec.api.Issue383Test.testFrameGrabCanExtractOrientation []"
"jcodec","112","org.jcodec.codecs.h264.H264Encoder.writeSPS(ByteBuffer,SeqParameterSet)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","113","org.jcodec.codecs.h264.H264Decoder.createFrame(SeqParameterSet,byte[][],int,SliceType,MvList2D,Frame[][][],int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","114","org.jcodec.codecs.h264.decode.SliceDecoder.decodeMacroblocks(Frame[][])","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CABAC []"
"jcodec","115","org.jcodec.containers.mkv.MKVType.createByType(MKVType)","1","org.jcodec.containers.mkv.MKVDemuxerTest._testAudio []"
"jcodec","116","org.jcodec.codecs.h264.mp4.AvcCBox.parseAvcCBox(ByteBuffer)","1","org.jcodec.containers.mkv.MKVDemuxerTest._testAudio []"
"jcodec","117","org.jcodec.containers.mp4.boxes.MetaBox.getKeyedMeta()","1","org.jcodec.movtool.MetadataEditorTest.testKeyedRead []"
"jcodec","118","org.jcodec.scale.RgbToYuv420j.rgb2yuv(byte,byte,byte,int[])","1","org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","119","org.jcodec.containers.mp4.boxes.AudioSampleEntry.getFormat()","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","120","org.jcodec.containers.mkv.boxes.MkvBlock.read(ByteBuffer)","1","org.jcodec.containers.mkv.MKVDemuxerTest.showAll []"
"jcodec","121","org.jcodec.api.FrameGrab.createFrameGrab(SeekableByteChannel)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","122","org.jcodec.codecs.h264.H264Encoder.rdMacroblock(EncodingContext,EncodedMB,SliceType,Picture,int,int,BitWriter,int,int,NonRdVector)","1","org.jcodec.codecs.h264.H264EncoderTest.testEncodeYuv420J []"
"jcodec","123","org.jcodec.common.StringUtils.splitWorker4(String,String,int,boolean)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset []"
"jcodec","124","org.jcodec.containers.mkv.boxes.EbmlBin.read(ByteBuffer)","1","org.jcodec.containers.mkv.MKVDemuxerTest._testVideo []"
"jcodec","125","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictDC(int[],boolean,boolean,byte[],byte[],int,int,int,byte[])","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","126","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrack.nextFrame()","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","127","org.jcodec.codecs.mpeg4.Macroblock.vec()","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","128","org.jcodec.scale.RgbToYuv420j.transform(Picture,Picture)","1","org.jcodec.scale.ResamplerTest.testRandomBicubic []"
"jcodec","129","org.jcodec.common.io.NIOUtils.readFromChannel(ReadableByteChannel,ByteBuffer)","1","org.jcodec.scale.ResamplerTest.testRandomLanczos []"
"jcodec","130","org.jcodec.codecs.common.biari.MDecoder.decodeBin(int)","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 []"
"jcodec","131","org.jcodec.codecs.h264.encode.IntraPredEstimator.getLumaMode(Picture,EncodingContext,int,int)","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","132","org.jcodec.containers.mp4.muxer.MP4MuxerTrack.finish(MovieHeaderBox)","1","org.jcodec.containers.mp4.muxer.MP4MuxerTest.testAddTrackWithId []"
"jcodec","133","org.jcodec.codecs.mpeg4.es.NodeDescriptor.findByTag(Descriptor,int)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","134","org.jcodec.movtool.Flatten.calcProgress(int,int,int)","1","org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow []"
"jcodec","135","org.jcodec.common.tools.Debug.print8x8s(short[])","1","org.jcodec.common.dct.FfmpegIntDctTest.testIdct []"
"jcodec","136","org.jcodec.codecs.mpeg4.MPEG4DecodingContext.getMatrix(BitReader,short[])","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","137","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict4 []"
"jcodec","138","org.jcodec.containers.mxf.model.GenericTrack.read(Map<Integer,ByteBuffer>)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testOneMore []"
"jcodec","139","org.jcodec.codecs.h264.decode.CoeffTransformer.reorderDC4x4(int[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","140","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.fromTrack(AbstractMP4DemuxerTrack)","1","org.jcodec.api.TranscoderTest.testCanFilterVideoAndCopyAudio []"
"jcodec","141","org.jcodec.codecs.h264.decode.SliceHeaderReader.readPart1(BitReader)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","142","org.jcodec.codecs.h264.decode.FrameReader.addPps(ByteBuffer)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","143","org.jcodec.scale.BicubicResampler.buildFilterTaps(int,int)","1","org.jcodec.scale.ResamplerTest.testRandomBicubic []"
"jcodec","144","org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter16x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,int,PartPred)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
