"Project","MethodIndex","Method","Count","Tests"
"gson","1","com.google.gson.internal.reflect.UnsafeReflectionAccessor.makeAccessibleWithUnsafe(AccessibleObject)","24","com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField [gson],com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause [gson],com.google.gson.internal.bind.RecursiveTypesResolveTest.testRecursiveTypeVariablesResolve12 [gson],com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored [gson],com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization [gson],com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass [gson],com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields [gson],com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization [gson],com.google.gson.functional.ObjectTest.testNullFieldsDeserialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers [gson],com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization [gson],com.google.gson.JsonParserTest.testReadWriteTwoObjects [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap [gson],com.google.gson.functional.MapTest.testMapSubclassSerialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray [gson],com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject [gson],com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization [gson],com.google.gson.internal.bind.RecursiveTypesResolveTest.testIssue603PrintStream [gson],com.google.gson.functional.MapTest.testConcurrentHashMap [gson],com.google.gson.functional.JsonTreeTest.testJsonTreeToString [gson]"
"gson","2","com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)","9","com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization [gson],com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization [gson],com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt [gson],com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter [gson],com.google.gson.internal.bind.RecursiveTypesResolveTest.testRecursiveTypeVariablesResolve1 [gson],com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface [gson]"
"gson","3","com.google.gson.internal.reflect.UnsafeReflectionAccessor.getUnsafeInstance()","8","com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization [gson],com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization [gson],com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization [gson],com.google.gson.functional.SerializedNameTest.testMultipleNamesInTheSameString [gson],com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialized [gson],com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization [gson],com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming [gson]"
"gson","4","com.google.gson.Gson.getAdapter(TypeToken<T>)","6","com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize1dArray [gson],com.google.gson.functional.ObjectTest.testNullFieldsSerialization [gson],com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree [gson],com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization [gson]"
"gson","5","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)","5","com.google.gson.functional.SerializedNameTest.testFirstNameIsChosenForSerialization [gson],com.google.gson.functional.JsonParserTest.testExtraCommasInMaps [gson],com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization [gson],com.google.gson.functional.ArrayTest.testArrayOfNullSerialization [gson],com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive [gson]"
"gson","6","com.google.gson.internal.Streams.parse(JsonReader)","4","com.google.gson.JsonParserTest.testParseReader [gson],com.google.gson.JsonStreamParserTest.testCallingNextBeyondAvailableInput [gson],com.google.gson.JsonParserTest.testParseInvalidJson [gson],com.google.gson.JsonParserTest.testParseMixedArray [gson]"
"gson","7","com.google.gson.GsonBuilder.create()","4","com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy [gson],com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers [gson],com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization [gson],com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization [gson]"
"gson","8","com.google.gson.Gson.newJsonReader(Reader)","4","com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive [gson],com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization [gson],com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization [gson],com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked [gson]"
"gson","9","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)","4","com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName [gson],com.google.gson.functional.SerializedNameTest.testMultipleNamesDeserializedCorrectly [gson],com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault [gson],com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization [gson]"
"gson","10","com.google.gson.Gson.toJson(Object,Type,Appendable)","3","com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization [gson],com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter [gson],com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault [gson]"
"gson","11","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)","3","com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation [gson],com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion [gson]"
"gson","12","com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)","3","com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization [gson],com.google.gson.MixedStreamTest.testWriteHtmlSafe [gson],com.google.gson.functional.MapTest.testSortedMap [gson]"
"gson","13","com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)","3","com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree [gson],com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType [gson],com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization [gson]"
"gson","14","com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)","3","com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter [gson],com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter [gson],com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType [gson]"
"gson","15","com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)","2","com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization [gson],com.google.gson.functional.JavaUtilConcurrentAtomicTest.testAtomicBoolean [gson]"
"gson","16","com.google.gson.internal.Streams.write(JsonElement,JsonWriter)","2","com.google.gson.functional.JsonArrayTest.testDoublePrimitiveAddition [gson],com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities [gson]"
"gson","17","com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)","2","com.google.gson.internal.bind.RecursiveTypesResolveTest.testIssue440WeakReference [gson],com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization [gson]"
"gson","18","com.google.gson.DefaultDateTypeAdapter.deserializeToDate(String)","2","com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone [gson],com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale [gson]"
"gson","19","com.google.gson.internal.Excluder.excludeField(Field,boolean)","2","com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields [gson],com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray [gson]"
"gson","20","com.google.gson.GsonBuilder.registerTypeHierarchyAdapter(Class<?>,Object)","1","com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming [gson]"
"gson","21","com.google.gson.stream.JsonReader.consumeNonExecutePrefix()","1","com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialized [gson]"
"gson","22","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>)","1","com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize [gson]"
"gson","23","com.google.gson.Gson.fromJson(JsonElement,Type)","1","com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree [gson]"
"gson","24","com.google.gson.TypeAdapter.toJson(Writer,T)","1","com.google.gson.DefaultDateTypeAdapterTest.testFormattingInEnUs [gson]"
"gson","25","com.google.gson.internal.LinkedTreeMap.find(K,boolean)","1","com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization [gson]"
"gson","26","com.google.gson.FieldNamingPolicy.separateCamelCase(String,String)","1","com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores [gson]"
"gson","27","com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)","1","com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization [gson]"
"gson","28","com.google.gson.stream.JsonWriter.string(String)","1","com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization [gson]"
"gson","29","com.google.gson.internal.UnsafeAllocator.create()","1","com.google.gson.internal.UnsafeAllocatorInstantiationTest.testAbstractClassInstantiation [gson]"
"gson","30","com.google.gson.reflect.TypeToken.getRawType()","1","com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization [gson]"
"gson","31","com.google.gson.internal.bind.TreeTypeAdapter.read(JsonReader)","1","com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers [gson]"
"gson","32","com.google.gson.util.VersionUtils.determineMajorJavaVersion()","1","com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded [gson]"
"gson","33","com.google.gson.internal.bind.TreeTypeAdapter.write(JsonWriter,T)","1","com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances [gson]"
"gson","34","com.google.gson.JsonParser.parse(JsonReader)","1","com.google.gson.internal.bind.JsonElementReaderTest.testArray [gson]"
