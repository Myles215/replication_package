"Project","MethodIndex","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","87","spark.CookiesIntegrationTest.testRemoveCookie [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.RequestTest.testSession_whenCreateIsTrue [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.RedirectTest.testRedirectPut [],spark.StaticFilesMemberTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.GenericSecureIntegrationTest.testEchoParam1 [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.RequestTest.testSession_whenCreateIsFalse [],spark.staticfiles.StaticFilesTest.testMimeTypes [],spark.GenericIntegrationTest.testEchoParam1 [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.RequestTest.testCookies_whenCookiesAreNotPresent [],spark.StaticFilesMemberTest.testStaticFileMjs [],spark.RequestTest.testUserAgent [],spark.RequestTest.shouldBeAbleToGetTheServletPath [],spark.GenericSecureIntegrationTest.testPost [],spark.GenericIntegrationTest.testHiHead [],spark.RequestTest.testSession_whenCreateIsFalse_afterSessionInvalidate [],spark.GenericIntegrationTest.testSessionReset [],spark.RequestTest.testCookie_whenCookiesArePresent [],spark.RequestTest.testPort [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal [],spark.RedirectTest.testRedirectAnyDelete [],spark.RequestTest.testQueryParams [],spark.StaticFilesMemberTest.testStaticFilePageHtml [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withNullThreadPool [],spark.GenericIntegrationTest.testEchoParam2 [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.GenericIntegrationTest.testPathParamsWithPlusSign [],spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.GenericIntegrationTest.testParamAndWild [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.GenericIntegrationTest.testGetRoot [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testSplatWithEncodedSlash [],spark.GenericIntegrationTest.testNotFound [],spark.RequestTest.testScheme [],spark.GenericIntegrationTest.testXForwardedFor [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.GenericIntegrationTest.testExceptionMapper [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withoutHttpOnly [],spark.GenericSecureIntegrationTest.testPatch [],spark.CookiesIntegrationTest.testCreateCookie [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.GenericSecureIntegrationTest.testHiHead [],spark.ResponseBodyTest.testSPECIAL [],spark.RedirectTest.testRedirectDelete [],spark.BooksIntegrationTest.canCreateBook [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.RequestTest.testUrl [],spark.RedirectTest.testRedirectAnyGetWithSpecificCode [],spark.MultipleServicesTest.testGetHello [],spark.MultipleServicesTest.testGetAllRoutesFromBothServices [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.RequestTest.queryParamShouldBeParsedAsHashMap [],spark.RequestTest.queryParamOrDefault_shouldReturnQueryParam_whenQueryParamExists [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.BooksIntegrationTest.canGetBook [],spark.GenericSecureIntegrationTest.testXForwardedFor [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory(boolean)","69","spark.CookiesIntegrationTest.testRemoveCookie [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml [],spark.CookiesIntegrationTest.testEmptyCookies [],spark.MultipleFiltersTest.testMultipleFilters [],spark.GenericSecureIntegrationTest.testNotFound [],spark.GzipTest.testStaticFileCssStyleCss [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.RequestTest.testServletPath [],spark.RequestTest.testSessionNoParams_whenSessionIsNull [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.staticfiles.StaticFilesTest.testExternalStaticFile [],spark.BooksIntegrationTest.canListBooks [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.RequestTest.testPort [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternal [],spark.BooksIntegrationTest.canDeleteBook [],spark.BooksIntegrationTest.canGetUpdatedBook [],spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.RedirectTest.testRedirectPostWithSpecificCode [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withNullThreadPool [],spark.RedirectTest.testRedirectAnyPost [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.GenericSecureIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.GenericIntegrationTest.testParamAndWild [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testSplatWithEncodedSlash [],spark.GenericIntegrationTest.testNotFound [],spark.RequestTest.testSessionNpParams_afterSessionInvalidate [],spark.RedirectTest.testRedirectPutWithSpecificCode [],spark.GenericIntegrationTest.testPost [],spark.GenericIntegrationTest.testXForwardedFor [],spark.GenericIntegrationTest.testExceptionMapper [],spark.CookiesIntegrationTest.testCreateCookie [],spark.ResponseBodyTest.testMAXIME [],spark.RequestTest.testSession_2times [],spark.GenericIntegrationTest.path_should_prefix_routes [],spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.RedirectTest.testRedirectDelete [],spark.BooksIntegrationTest.canCreateBook [],spark.RequestTest.testHeaders [],spark.RedirectTest.testRedirectGetWithSpecificCode [],spark.RequestTest.testContentLength [],spark.RequestTest.shouldBeAbleToGetTheMatchedPath [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.RedirectTest.testRedirectAnyGetWithSpecificCode [],spark.MultipleServicesTest.testGetHello [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.RequestTest.testURI [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericIntegrationTest.testPatch []"
"spark","3","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int,boolean)","25","spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.BooksIntegrationTest.canCreateBook [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.StaticFilesMemberTest.testStaticFileHeaders [],spark.StaticFilesMemberTest.testStaticFileExpireTime [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml [],spark.BooksIntegrationTest.canDeleteBook [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.CookiesIntegrationTest.testEmptyCookies [],spark.MultipleServicesTest.testGetHello [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.GzipTest.testStaticFileCssStyleCss [],spark.RequestTest.testCookies_whenCookiesAreNotPresent [],spark.RequestTest.testCookies_whenCookiesArePresent [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.StaticFilesFromArchiveTest.testCss [],spark.StaticFilesMemberTest.testStaticFileMjs [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.RedirectTest.testRedirectAnyPutWithSpecificCode [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.staticfiles.StaticFilesTest.testExternalStaticFile [],spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","4","spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish()","18","spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.StaticFilesMemberTest.testExternalStaticFile [],spark.GenericIntegrationTest.testSessionReset [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.BooksIntegrationTest.canDeleteBook [],spark.GenericSecureIntegrationTest.testEchoParam1 [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.StaticFilesMemberTest.testStaticFilePageHtml [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.GenericIntegrationTest.testExceptionMapper [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.GenericSecureIntegrationTest.testGetHi [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.GenericIntegrationTest.testPatch []"
"spark","5","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","16","spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreadsOnly_thenUseDefaultMinThreadsAndTimeout [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_useDefaults [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.RedirectTest.testRedirectPost [],spark.StaticFilesMemberTest.testExceptionMapping404 [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreads_isLessThanDefaultMinThreads [],spark.GenericIntegrationTest.testInheritanceExceptionMapper [],spark.BooksIntegrationTest.canGetUpdatedBook [],spark.staticfiles.StaticFilesTest.testCustomMimeType [],spark.RedirectTest.testRedirectAnyPost [],spark.RequestTest.testPathInfo [],spark.RequestTest.testUserAgent [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.GenericSecureIntegrationTest.testPost []"
"spark","6","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,ExceptionMapper,boolean)","15","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.GenericIntegrationTest.testSessionReset [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.FilterTest.testJustFilter [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.MultipleServicesTest.testGetAllRoutesFromBothServices [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.RequestTest.testQueryParamsValues_whenParamDoesNotExists [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.RequestTest.testSession_2times []"
"spark","7","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Long>)","14","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.GenericIntegrationTest.testEchoParam3 [],spark.GenericIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.GenericIntegrationTest.testEchoParamWithUpperCaseInValue [],spark.GenericIntegrationTest.testTypedExceptionMapper [],spark.GenericIntegrationTest.testNotFound []"
"spark","8","spark.http.matching.Body.serializeTo(HttpServletResponse,SerializerChain,HttpServletRequest)","14","spark.GenericSecureIntegrationTest.testHiHead [],spark.ResponseBodyTest.testHELLO [],spark.RedirectTest.testRedirectDelete [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.StaticFilesMemberTest.testExceptionMapping404 [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.BooksIntegrationTest.canGetUpdatedBook [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.customerrorpages.CustomErrorPagesTest.testGetHi [],spark.RedirectTest.testRedirectAnyGet [],spark.GenericSecureIntegrationTest.testNotFound [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.GenericSecureIntegrationTest.testGetHi [],spark.GzipTest.checkGzipCompression []"
"spark","9","spark.embeddedserver.EmbeddedServers.initialize()","10","spark.ResponseBodyTest.testSPECIAL [],spark.MultipleFiltersTest.testMultipleFilters [],spark.RequestTest.testSession_whenCreateIsFalse_afterSessionInvalidate [],spark.BooksIntegrationTest.canCreateBook [],spark.GenericIntegrationTest.testGetRoot [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.BooksIntegrationTest.canGetBook [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.staticfiles.StaticFilesTest.testExternalStaticFile [],spark.GenericSecureIntegrationTest.testEchoParam1 []"
"spark","10","spark.Service.init()","7","spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.RequestTest.testURI [],spark.CookiesIntegrationTest.testCreateCookie [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.GenericSecureIntegrationTest.testXForwardedFor [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","11","spark.Service.getPaths()","6","spark.GenericIntegrationTest.testGetByteBufferHi [],spark.RequestTest.queryParamOrDefault_shouldReturnQueryParam_whenQueryParamExists [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.GenericIntegrationTest.testPostProcessBodyForFinally [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.RedirectTest.testRedirectPutWithSpecificCode []"
"spark","12","spark.utils.StringUtils.cleanPath(String)","2","spark.StaticFilesMemberTest.testExternalStaticFile [],spark.staticfiles.DisableMimeGuessingTest.testMimeTypes []"
"spark","13","spark.utils.SparkUtils.convertRouteToList(String)","2","spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.GenericIntegrationTest.testRuntimeExceptionForAllRoutesFinally []"
"spark","14","spark.staticfiles.StaticFilesConfiguration.consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)","2","spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml [],spark.StaticFilesFromArchiveTest.testCss []"
"spark","15","spark.Service.initiateStop()","2","spark.ResponseBodyTest.testSPECIAL [],spark.StaticFilesMemberTest.testStaticFileExpireTime []"
"spark","16","spark.Routable.get(String,Route)","2","spark.UnmapTest.testUnmap [],spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml []"
"spark","17","spark.embeddedserver.jetty.websocket.WebSocketHandlerWrapper.validateHandlerClass(Class<?>)","2","spark.GenericIntegrationTest.testXForwardedFor [],spark.GenericIntegrationTest.testGetBinaryHi []"
"spark","18","spark.Service.awaitInitialization()","2","spark.MultipleFiltersTest.testMultipleFilters [],spark.RedirectTest.testRedirectAnyGet []"
"spark","19","spark.utils.GzipUtils.checkAndWrap(HttpServletRequest,HttpServletResponse,boolean)","2","spark.staticfiles.DisableMimeGuessingTest.testCustomMimeType [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute []"
"spark","20","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","2","spark.GenericIntegrationTest.testEchoParam1 [],spark.RedirectTest.testRedirectAnyDelete []"
"spark","21","spark.staticfiles.StaticFilesConfiguration.configure(String)","1","spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml []"
"spark","22","spark.Response.redirect(String)","1","spark.ResponseTest.testRedirect_whenLocationParameter_shouldModifyStatusCodeSuccessfully []"
"spark","23","spark.Service.path(String,RouteGroup)","1","spark.GenericIntegrationTest.testRuntimeExceptionForDone []"
"spark","24","spark.Routable.before(String,Filter)","1","spark.GenericIntegrationTest.testInheritanceExceptionMapper []"
"spark","25","spark.Session.invalidate()","1","spark.SessionTest.testInvalidate []"
"spark","26","spark.Service.initializeRouteMatcher()","1","spark.GenericIntegrationTest.testPost []"
"spark","27","spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)","1","spark.MultipleServicesTest.testGetRedirectedHi []"
"spark","28","spark.Redirect.redirectRoute(String,Status)","1","spark.RedirectTest.testRedirectAnyGetWithSpecificCode []"
"spark","29","spark.resource.ClassPathResource.exists()","1","spark.servlet.ServletTest.testGetHiAfterFilter []"
"spark","30","spark.resource.ClassPathResourceHandler.getResource(String)","1","spark.StaticFilesMemberTest.testStaticFileCssStyleCss []"
"spark","31","spark.Response.type(String)","1","spark.ResponseWrapperDelegationTest.filters_can_detect_content_type []"
"spark","32","spark.staticfiles.StaticFilesConfiguration.configureExternal(String)","1","spark.servlet.ServletTest.testUnauthorized []"
"spark","33","spark.Response.cookie(String,String,String,String,int,boolean,boolean)","1","spark.ResponseTest.testCookie_whenNameValueMaxAgeSecuredAndHttpOnlyParameters_shouldAddCookieSuccessfully []"
"spark","34","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores,boolean)","1","spark.GenericSecureIntegrationTest.testPatch []"
"spark","35","spark.staticfiles.StaticFilesConfiguration.consume(HttpServletRequest,HttpServletResponse)","1","spark.staticfiles.StaticFilesTest.testDirectoryTraversalProtectionLocal []"
"spark","36","spark.utils.MimeParse.parseMimeType(String)","1","spark.BooksIntegrationTest.wontFindBook []"
"spark","37","spark.route.Routes.add(HttpMethod,String,String,Object)","1","spark.GenericIntegrationTest.testEchoParam3 []"
"spark","38","spark.route.Routes.findTargetWithGivenAcceptType(List<RouteEntry>,String)","1","spark.staticfiles.StaticFilesTest.testExternalStaticFile []"
"spark","39","spark.utils.IOUtils.copyLarge(Reader,Writer)","1","spark.BooksIntegrationTest.canGetUpdatedBook []"
"spark","40","spark.Response.header(String,Instant)","1","spark.ResponseTest.testInstantDateHeader []"
