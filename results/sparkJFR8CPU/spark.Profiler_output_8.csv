"Project","MethodIndex","Method","Count","Tests"
"spark","1","spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)","100","spark.CookiesIntegrationTest.testRemoveCookie [],spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.RedirectTest.testRedirectAnyPut [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.RedirectTest.testRedirectPut [],spark.StaticFilesMemberTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.GenericSecureIntegrationTest.testEchoParam1 [],spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.GenericSecureIntegrationTest.testUnauthorized [],spark.customerrorpages.CustomErrorPagesTest.testGetHi [],spark.GenericSecureIntegrationTest.testNotFound [],spark.staticfiles.StaticFilesTest.testMimeTypes [],spark.GenericIntegrationTest.testEchoParam1 [],spark.GzipTest.testStaticFileCssStyleCss [],spark.StaticFilesMemberTest.testStaticFileMjs [],spark.RedirectTest.testRedirectAnyPutWithSpecificCode [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.RequestTest.shouldBeAbleToGetTheServletPath [],spark.GenericIntegrationTest.testHiHead [],spark.GenericIntegrationTest.testSessionReset [],spark.BooksIntegrationTest.canListBooks [],spark.RequestTest.testCookie_whenCookiesArePresent [],spark.BodyAvailabilityTest.testPost [],spark.StaticFilesMemberTest.testStaticFileHeaders [],spark.RequestTest.testCookie_whenCookiesAreNotPresent [],spark.RequestTest.testQueryParams [],spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withThreadPool [],spark.RequestTest.testQueryParamsValues_whenParamDoesNotExists [],spark.GenericIntegrationTest.testEchoParam2 [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.GenericSecureIntegrationTest.testGetHi [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.GenericIntegrationTest.testPathParamsWithPlusSign [],spark.GenericIntegrationTest.testTypedExceptionMapper [],spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.ServicePortIntegrationTest.testGetPort_withRandomPort [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testInheritanceExceptionMapper [],spark.RedirectTest.testRedirectPutWithSpecificCode [],spark.GenericIntegrationTest.testPost [],spark.GenericIntegrationTest.testXForwardedFor [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.GenericIntegrationTest.testUnauthorized [],spark.StaticFilesMemberTest.testStaticFilePagesIndexHtml [],spark.GenericSecureIntegrationTest.testPatch [],spark.RequestTest.testSession_2times [],spark.GenericIntegrationTest.path_should_prefix_routes [],spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml [],spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.embeddedserver.EmbeddedServersTest.testAdd_whenConfigureRoutes_createsCustomServer [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.RedirectTest.testRedirectGetWithSpecificCode [],spark.RequestTest.shouldBeAbleToGetTheMatchedPath [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.RedirectTest.testRedirectAnyGetWithSpecificCode [],spark.MultipleServicesTest.testGetHello [],spark.MultipleServicesTest.testGetAllRoutesFromBothServices [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.RequestTest.queryParamShouldBeParsedAsHashMap [],spark.UnmapTest.testUnmap [],spark.RequestTest.queryParamOrDefault_shouldReturnQueryParam_whenQueryParamExists [],spark.RedirectTest.testRedirectGet [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.RequestTest.testURI [],spark.BooksIntegrationTest.canUpdateBook [],spark.GenericIntegrationTest.testPatch [],spark.GenericSecureIntegrationTest.testXForwardedFor [],spark.GenericSecureIntegrationTest.testGetHiAfterFilter []"
"spark","2","spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory(boolean)","53","spark.MultipleServicesTest.testGetUniqueForSecondWithFirst [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.RequestTest.testContextPath [],spark.RedirectTest.testRedirectPut [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml [],spark.GenericIntegrationTest.testInheritanceExceptionMapper [],spark.BooksIntegrationTest.wontFindBook [],spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.RequestTest.testIp [],spark.GenericIntegrationTest.testXForwardedFor [],spark.GenericIntegrationTest.testEchoParam1 [],spark.GenericIntegrationTest.testEchoParam3 [],spark.RedirectTest.testRedirectAnyPutWithSpecificCode [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.RequestTest.testSessionNoParams_whenSessionIsNull [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.RequestTest.testHost [],spark.RequestTest.testSession_2times [],spark.RequestTest.shouldBeAbleToGetTheServletPath [],spark.GenericSecureIntegrationTest.testPost [],spark.embeddedserver.EmbeddedServersTest.testAdd_whenConfigureRoutes_createsCustomServer [],spark.GenericIntegrationTest.testHiHead [],spark.RedirectTest.testRedirectDelete [],spark.RequestTest.testContentType [],spark.RedirectTest.testRedirectGetWithSpecificCode [],spark.BooksIntegrationTest.canListBooks [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.BodyAvailabilityTest.testPost [],spark.RequestTest.shouldBeAbleToGetTheMatchedPath [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.StaticFilesMemberTest.testExceptionMapping404 [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.RequestTest.testCookie_whenCookiesAreNotPresent [],spark.FilterTest.testJustFilter [],spark.BooksIntegrationTest.canGetUpdatedBook [],spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withThreadPool [],spark.RedirectTest.testRedirectAnyGetWithSpecificCode [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.UnmapTest.testUnmap [],spark.RequestTest.shouldBeAbleToGetTheContextPath [],spark.StaticFilesFromArchiveTest.testCss [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.embeddedserver.EmbeddedServersTest.testAddAndCreate_whenCreate_createsCustomServer [],spark.embeddedserver.jetty.SocketConnectorFactoryTest.testCreateSecureSocketConnector []"
"spark","3","spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Long>)","30","spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.GenericIntegrationTest.testGetHiAfterFilter [],spark.GenericIntegrationTest.testSessionReset [],spark.GenericIntegrationTest.testParamAndWild [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.GenericIntegrationTest.testRuntimeExceptionForDone [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testSplatWithEncodedSlash [],spark.GenericIntegrationTest.routes_should_be_accept_type_aware [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.GenericIntegrationTest.testEchoParam1 [],spark.GenericIntegrationTest.testEchoParam2 [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.GenericIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testWebSocketConversation [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.GenericIntegrationTest.testPathParamsWithPlusSign [],spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","4","spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,ExceptionMapper,boolean)","26","spark.staticfiles.DisableMimeGuessingTest.testCustomMimeType [],spark.RequestTest.testQueryParamsValues_whenParamExists [],spark.GenericIntegrationTest.testNotFound [],spark.CookiesIntegrationTest.testEmptyCookies [],spark.RedirectTest.testRedirectAnyPostWithSpecificCode [],spark.MultipleFiltersTest.testMultipleFilters [],spark.RequestTest.testSession_whenCreateIsFalse [],spark.RequestTest.testIp [],spark.GenericIntegrationTest.testEchoParam1 [],spark.GenericIntegrationTest.testGetHi [],spark.RedirectTest.testRedirectAnyPutWithSpecificCode [],spark.ResponseBodyTest.testMAXIME [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithFirst [],spark.RedirectTest.testRedirectDeleteWithSpecificCode [],spark.staticfiles.StaticFilesTest.testExternalStaticFile [],spark.GenericIntegrationTest.testHiHead [],spark.BooksIntegrationTest.canListBooks [],spark.RedirectTest.testRedirectAnyDeleteWithSpecificCode [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.RedirectTest.testRedirectPostWithSpecificCode [],spark.embeddedserver.jetty.EmbeddedJettyFactoryTest.create_withNullThreadPool [],spark.GenericIntegrationTest.testEchoParam2 [],spark.GenericSecureIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testPathParamsWithPlusSign [],spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","5","spark.http.matching.Body.serializeTo(HttpServletResponse,SerializerChain,HttpServletRequest)","20","spark.GenericSecureIntegrationTest.testHiHead [],spark.CookiesIntegrationTest.testRemoveCookie [],spark.BooksIntegrationTest.canCreateBook [],spark.RedirectTest.testRedirectAnyPut [],spark.GenericIntegrationTest.paths_should_be_very_nestable [],spark.StaticFilesMemberTest.testStaticFileHeaders [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.customerrorpages.CustomErrorPagesTest.testCustomInternalFailingRoute [],spark.BooksIntegrationTest.canDeleteBook [],spark.BooksIntegrationTest.wontFindBook [],spark.GenericSecureIntegrationTest.testEchoParam1 [],spark.servlet.ServletTest.testEchoParam2 [],spark.ResponseWrapperDelegationTest.filters_can_detect_response_status [],spark.UnmapTest.testUnmap [],spark.RedirectTest.testRedirectAnyPost [],spark.RedirectTest.testRedirectGet [],spark.MultipleServicesTest.testGetRedirectedHi [],spark.GenericSecureIntegrationTest.testGetHi [],spark.BooksIntegrationTest.canGetBook [],spark.GenericIntegrationTest.testPathParamsWithPlusSign []"
"spark","6","spark.embeddedserver.jetty.JettyServer.create(int,int,int)","19","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_whenNonDefaultMaxThreadsOnly_thenUseDefaultMinThreadsAndTimeout [],spark.RedirectTest.testRedirectDelete [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.StaticFilesMemberTest.testExternalStaticFile [],spark.GenericIntegrationTest.testParamAndWild [],spark.GenericIntegrationTest.testGetRoot [],spark.embeddedserver.jetty.JettyServerTest.testCreateServer_useDefaults [],spark.GenericIntegrationTest.testGetBinaryHi [],spark.GenericIntegrationTest.testNotFoundExceptionMapper [],spark.FilterTest.testJustFilter [],spark.GenericIntegrationTest.testPost [],spark.MultipleServicesTest.testGetHello [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.GenericIntegrationTest.testPatch [],spark.GzipTest.checkGzipCompression [],spark.RequestTest.testHost []"
"spark","7","spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int,boolean)","15","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.RequestTest.testSession_whenCreateIsFalse_afterSessionInvalidate [],spark.RequestTest.testSession_whenCreateIsTrue [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.RequestTest.testQueryParamsValues_whenParamExists [],spark.StaticFilesMemberTest.testStaticFileHeaders [],spark.RedirectTest.testRedirectAnyDelete [],spark.StaticFilesMemberTest.testStaticFileCssStyleCss [],spark.GenericIntegrationTest.testPost [],spark.RequestTest.testIp [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.MultipleServicesTest.testGetAllRoutesFromBothServices [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.GenericIntegrationTest.testEchoParam1 [],spark.GenericIntegrationTest.testTypedExceptionMapper []"
"spark","8","spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish()","15","spark.staticfiles.StaticFilesTest.testExceptionMapping404 [],spark.BooksIntegrationTest.canCreateBook [],spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object [],spark.GenericIntegrationTest.testSessionReset [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.GenericSecureIntegrationTest.testEchoParamWithMaj [],spark.StaticFilesMemberTest.testExceptionMapping404 [],spark.MultipleServicesTest.testGetAllRoutesFromBothServices [],spark.CookiesIntegrationTest.testRemoveCookieWithPath [],spark.GenericSecureIntegrationTest.testGetHi [],spark.GenericIntegrationTest.testPatch [],spark.GenericIntegrationTest.testTwoRoutesWithDifferentCaseButSameName [],spark.GzipTest.checkGzipCompression [],spark.ResponseBodyTest.testMAXIME []"
"spark","9","spark.embeddedserver.EmbeddedServers.initialize()","11","spark.GenericIntegrationTest.testPostViaGetWithMethodOverrideHeader [],spark.staticfiles.StaticFilesTest.testStaticFileCssStyleCss [],spark.RequestTest.testIp [],spark.GenericIntegrationTest.testExternalStaticFile [],spark.RedirectTest.testRedirectGetWithSpecificCode [],spark.InitExceptionHandlerTest.testInitExceptionHandler [],spark.RequestTest.testSession_whenCreateIsTrue_afterSessionInvalidate [],spark.GenericIntegrationTest.testInheritanceExceptionMapper [],spark.GenericSecureIntegrationTest.testPost [],spark.GenericIntegrationTest.testNotFound [],spark.BooksIntegrationTest.wontFindBook []"
"spark","10","spark.Service.getPaths()","7","spark.GenericIntegrationTest.testEchoParamWithMaj [],spark.staticfiles.DisableMimeGuessingTest.testCustomMimeType [],spark.GenericIntegrationTest.testGetInputStreamHi [],spark.StaticFilesMemberTest.testStaticFileHeaders [],spark.servlet.ServletTest.testGetHi [],spark.RedirectTest.testRedirectPut [],spark.CookiesIntegrationTest.testEmptyCookies []"
"spark","11","spark.staticfiles.StaticFilesConfiguration.consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)","6","spark.staticfiles.StaticFilesTest.testStaticFilePagesIndexHtml [],spark.staticfiles.DisableMimeGuessingTest.testMimeTypes [],spark.MultipleServicesTest.testStaticFileCssStyleCssWithSecond [],spark.StaticFilesFromArchiveTest.testCss [],spark.StaticFilesMemberTest.testStaticFileHeaders [],spark.staticfiles.StaticFilesTest.testStaticFilePageHtml []"
"spark","12","spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores,boolean)","6","spark.GenericSecureIntegrationTest.testNotFound [],spark.GenericSecureIntegrationTest.testGetRoot [],spark.GenericSecureIntegrationTest.testEchoParam2 [],spark.GenericSecureIntegrationTest.testPost [],spark.embeddedserver.jetty.SocketConnectorFactoryTest.testCreateSecureSocketConnector []"
"spark","13","spark.Service.init()","5","spark.ResponseBodyTest.testSPECIAL [],spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.customerrorpages.CustomErrorPagesTest.testCustomNotFound [],spark.GenericIntegrationTest.paths_should_be_nestable [],spark.GenericSecureIntegrationTest.testPatch []"
"spark","14","spark.embeddedserver.jetty.websocket.WebSocketHandlerWrapper.validateHandlerClass(Class<?>)","5","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.GenericIntegrationTest.testHiHead [],spark.GenericIntegrationTest.testGetByteBufferHi [],spark.GenericIntegrationTest.filters_should_be_accept_type_aware [],spark.GenericIntegrationTest.testParamAndWild []"
"spark","15","spark.Service.initiateStop()","4","spark.GenericIntegrationTest.testHiHead [],spark.GzipTest.testStaticFileCssStyleCss [],spark.ResponseBodyTest.testPORAKATIKAOKAO [],spark.FilterTest.testJustFilter []"
"spark","16","spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)","3","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.ResponseWrapperDelegationTest.filters_can_detect_content_type [],spark.ResponseBodyTest.testPORAKATIKAOKAO []"
"spark","17","spark.Redirect.redirectRoute(String,Status)","2","spark.MultipleServicesTest.testGetUniqueForSecondWithSecond [],spark.RedirectTest.testRedirectPost []"
"spark","18","spark.Request.body()","2","spark.BodyAvailabilityTest.testPost [],spark.GenericSecureIntegrationTest.testPatch []"
"spark","19","spark.route.Routes.add(HttpMethod,String,String,Object)","2","spark.GenericIntegrationTest.path_should_prefix_routes [],spark.GenericIntegrationTest.testPost []"
"spark","20","spark.Response.status()","1","spark.ResponseTest.testGetStatus []"
"spark","21","spark.utils.StringUtils.cleanPath(String)","1","spark.GenericIntegrationTest.testGetHiAfterFilter []"
"spark","22","spark.Service.notFound(String)","1","spark.customerrorpages.CustomErrorPagesTest.testGetHi []"
"spark","23","spark.Service.path(String,RouteGroup)","1","spark.GenericIntegrationTest.testSplatWithEncodedSlash []"
"spark","24","spark.Routable.before(String,Filter)","1","spark.RequestTest.testSessionNpParams_afterSessionInvalidate []"
"spark","25","spark.Service.initializeRouteMatcher()","1","spark.BooksIntegrationTest.canGetBook []"
"spark","26","spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)","1","spark.staticfiles.DisableMimeGuessingTest.testCustomMimeType []"
"spark","27","spark.utils.ResourceUtils.toURI(String)","1","spark.staticfiles.DisableMimeGuessingTest.testMimeTypes []"
"spark","28","spark.http.matching.Body.isSet()","1","spark.BooksIntegrationTest.canUpdateBook []"
"spark","29","spark.Routable.createRouteImpl(String,Route)","1","spark.GenericIntegrationTest.template_view_should_be_rendered_with_given_model_view_object []"
"spark","30","spark.staticfiles.StaticFilesConfiguration.configureExternal(String)","1","spark.StaticFilesMemberTest.testStaticFilePageHtml []"
"spark","31","spark.Request.session()","1","spark.GenericIntegrationTest.testSessionReset []"
"spark","32","spark.utils.GzipUtils.checkAndWrap(HttpServletRequest,HttpServletResponse,boolean)","1","spark.GzipTest.checkGzipCompression []"
"spark","33","spark.utils.MimeParse.fitnessAndQualityParsed(String,Collection<ParseResults>)","1","spark.GenericSecureIntegrationTest.testUnauthorized []"
"spark","34","spark.utils.IOUtils.copyLarge(Reader,Writer)","1","spark.BooksIntegrationTest.canUpdateBook []"
"spark","35","spark.embeddedserver.EmbeddedServers.defaultIdentifier()","1","spark.StaticFilesMemberTest.testStaticFileHeaders []"
"spark","36","spark.serialization.DefaultSerializer.process(OutputStream,Object)","1","spark.GenericIntegrationTest.testPostProcessBodyForFinally []"
